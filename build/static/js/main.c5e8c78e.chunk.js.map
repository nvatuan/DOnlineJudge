{"version":3,"sources":["api/axiosClient.js","api/loginAPI.js","api/registerAPI.js","api/logoutAPI.js","users/UserSlice.js","users/Pages/Register/Register.js","users/Pages/Login/Login.js","users/Navbar.js","users/Pages/About/About.js","api/oj_announcementAPI.js","users/Pages/Home/Announcement.js","users/Pages/Home/Home.js","api/oj_problemAPI.js","users/Components/Search.js","users/Pages/Problem/Problem.js","api/oj_statusAPI.js","api/oj_profileAPI.js","users/Pages/Status/Status.js","admin/AdminNavbar.js","admin/Sidebar.js","api/admin_problemAPI.js","api/admin_usersAPI.js","api/admin_announcementAPI.js","admin/AdminSlice.js","admin/Problems/ProblemList/ProblemList.js","admin/General/User/User.js","admin/General/Announcement/Announcement.js","admin/Dashboard/Dashboard.js","admin/Problems/CreateProblem/CreateProblem.js","admin/General/Announcement/EditAnnouncement.js","users/Pages/Problem/Problem_detail.js","users/Pages/News/News.js","helpers/PrivateRoute.js","users/Pages/Status/Status_detail.js","users/Components/Social_icons/Social_icon.js","users/Pages/Profile/Profile.js","users/Pages/EditProfile/EditProfile.js","users/Pages/Setting/Setting.js","admin/General/User/EditUser.js","App.js","app/store.js","index.js"],"names":["axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","data","error","status","error_messsage","key","toast","position","POSITION","BOTTOM_CENTER","autoClose","loginAPI","login","post","registerAPI","register","logoutAPI","logout","localStorage","getItem","get","loginUser","createAsyncThunk","thunkAPI","username","password","token","setItem","user","admin_type","id","JSON","alert","console","log","rejectWithValue","json","registerUser","logoutUser","userSlice","createSlice","name","initialState","email","isLoginSuccess","isLoginError","isRegisterSuccess","isRegisterError","isFeching","errorMessage","reducers","clearState","state","userClear","userInformation","extraReducers","fulfilled","payload","pending","rejected","isSuccess","isError","actions","userSelector","Register","props","useState","show","setShow","handleClose","dispatch","useDispatch","history","useHistory","useSelector","useForm","handleSubmit","useEffect","success","push","registerModal","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Control","type","placeholder","Text","className","Button","variant","style","lineheight","Login","configure","showRegis","setShowRegis","LoginModal","Label","Navbar","check","setCheck","click","setClick","setButton","window","addEventListener","innerHeight","to","onClick","DropdownButton","title","Dropdown","Item","removeItem","About","Card","as","trigger","easing","oj_announcementAPI","getAll","paramString","url","Announcement","time","author","creation_time","content","contentModal","dialogClassName","aria-labelledby","size","centered","Date","toDateString","Home","announcement","setAnnouncement","fetchAnnouncement","map","annou","author_name","oj_problemAPI","getById","Search","searchTerm","setSearchTerm","inline","e","preventDefault","FormControl","onChange","value","target","Problem","problems","setProblems","filter_by","sort_by","filters","setFilters","sortById","setSortById","sortByTitle","setSortByTitle","sortByLevel","setSortByLevel","difficulty","fectchProblems","newValue","contains","filter","item","handleFilterDiff","length","problem","display_id","total_submission","correct_submission","colSpan","oj_statusAPI","postProblem","getByAuthor","authorId","oj_profileAPI","getUserInformation","editUserInformation","Object","assign","put","uploadAvatar","changePassword","Status","href","location","parse","parseNumbers","setStatus","author_id","sortByProblem","setSortByProblem","sortByAuthor","setSortByAuthor","sortByStatus","setSortByStatus","sortByLanguage","setSortByLanguage","sortByTime","setSortByTime","sortByMemory","setSortByMemory","sortByWhen","setSortByWhen","result","fetchStatus","verdict","language","condition","stat","problem_id","problem_title","output","Math","floor","submit_time","AdminNavbar","Sidebar","innerWidth","document","querySelector","classList","add","remove","marginTop","iconShape","icon","admin_problemAPI","deleteById","delete","updateById","formData","createProblem","updateVisible","isVisible","visible","admin_usersAPI","createUser","editUser","admin_announcementAPI","createAnnouncemt","setVisible","UserList","AnnouncementList","deleteAnnouncement","deleteUser","deleteProblem","adminSlice","admin_announcements","admin_users","admin_problems","isFetchUsersSuccess","isFetchAnnouncementsSuccess","deleteSusscess","adminSelector","admin","ProblemList","fetchProblemList","created","checked","height","width","newProblem","update","confirm","User","users","setUsers","create_time","last_login","announcements","setAnnouncements","handleVisible","is_visible","res","newann","ann","Dashboard","Createproblem","match","setDisplay_id","setTitle","description","setDescription","input_description","setInput_description","output_description","setOutput_description","time_limit","setTime_limit","memory_limit","setMemory_limit","setDifficulty","sample_test","setSample_test","tags","statement","isNaN","getDescription","str","i","indexOf","slice","getInput_description","o","getOutput_description","fetchProblem","ListGroup","color","required","handleDisplay_id","handleTitle","rows","cols","handleDescription","handleInput_description","handleOutput_description","handleTime_limit","handleMemory_limit","custom","handleDifficulty","defaultChecked","sample","idx","input","event","values","handleInput","handleOutput","splice","handleRemove","handleAdd","EditAnnouncement","setContent","aria-label","aria-describedby","handleContent","htmlFor","require","Problem_detail","setProblem","checkLogin","setCheckLogin","setLanguage","parseInt","fetchProblem_detail","String","readOnly","File","Input","files","reader","FileReader","readAsText","onload","onChangeUploadFile","editor","onChangeTextarea","options","matchBrackets","styleActiveLine","theme","mode","lineNumbers","disabled","News","PrivateRoute","Component","component","rest","render","pathname","from","Status_detail","status_detail","setStatus_detail","fetchStatus_detail","Social_icon","Profile","first_name","last_name","EditProfile","setUser","fetchUserData","Setting","userData","setUserData","toAccount","setToAccount","selectFile","setSelectFile","profile_pic","padding","FormData","append","updateAvatar","uploadFile","accept","src","alt","EditUser","defaultValue","hidden","is_staff","problem_permission","App","path","exact","CreateProblem","configureStore","reducer","ReactDOM","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.c5e8c78e.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst axiosClient = axios.create({\r\nbaseURL: process.env.REACT_APP_API_URL,\r\nheaders: {\r\n    'content-type': 'application/json',\r\n    // 'Access-Control-Allow-Origin': '*',\r\n},\r\nparamsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // Handle token here ...\r\n    return config;\r\n})\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n    }, (error) => {\r\n        if(error.response.status === 400){\r\n            var error_messsage = error.response.data.data;\r\n            for (let key in error_messsage){\r\n                toast.error(error_messsage[key], {\r\n                    position: toast.POSITION.BOTTOM_CENTER,\r\n                    autoClose: 1500\r\n                })\r\n            }\r\n        }\r\n    throw error;\r\n});\r\nexport default axiosClient;","import axiosClient from'./axiosClient';\r\n\r\nconst loginAPI = {\r\n    login: (data) => {\r\n        const url = 'login/';\r\n        return axiosClient.post(url, data, {\r\n        });\r\n    }\r\n}\r\n\r\nexport default loginAPI;","import axiosClient from './axiosClient';\r\n\r\nconst registerAPI = {\r\n    register: (data) => {\r\n        const url = 'register/';\r\n        return axiosClient.post(url,data);\r\n    }\r\n};\r\n\r\nexport default registerAPI;","import axiosClient from './axiosClient';\r\n\r\nconst logoutAPI = {\r\n    logout: () => {\r\n        const url = 'logout/';\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url,config);\r\n    }\r\n}\r\nexport default logoutAPI;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport loginAPI from '../api/loginAPI';\r\nimport registerAPI from '../api/registerAPI';\r\nimport logoutAPI from '../api/logoutAPI';\r\nexport const loginUser = createAsyncThunk(\r\n    '/login',\r\n    async ({username, password }, thunkAPI) => {\r\n        try {\r\n            const response = await loginAPI.login({username, password});\r\n            if(response.token !== null){\r\n                localStorage.setItem('token', response.data.token);\r\n                localStorage.setItem('role', response.data.user.admin_type);\r\n                localStorage.setItem('username', response.data.user.username);\r\n                localStorage.setItem('userId', response.data.user.id);\r\n                localStorage.setItem('userInformation', JSON.stringify(response.data.user));\r\n                return response;\r\n            }else{\r\n                alert(\"fail to fetch tokem Login\")\r\n            }\r\n        } catch (error) {\r\n            console.log('Fail to login: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n    '/register',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const response = await registerAPI.register(data);\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.log('Fail to register: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const logoutUser = createAsyncThunk(\r\n    '/logout',\r\n    async (thunkAPI) => {\r\n        try {\r\n            await logoutAPI.logout();\r\n\r\n        } catch (error) {\r\n            console.log('Fail to logout: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        username: '',\r\n        email: '',\r\n        isLoginSuccess: false,\r\n        isLoginError: false,\r\n        isRegisterSuccess: false,\r\n        isRegisterError: false,\r\n        isFeching: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers:{\r\n        clearState: (state) => {\r\n            state.isLoginSuccess = false;\r\n            state.isLoginError = false;\r\n            state.isRegisterSuccess = false;\r\n            state.isRegisterError = false;      \r\n            return state;\r\n        },\r\n        userClear: (state) =>{\r\n            state.userInformation = {};\r\n        }\r\n    },\r\n\r\n    extraReducers:{\r\n        //login feching status\r\n        [loginUser.fulfilled]: (state, {payload}) =>{\r\n            state.username = payload.data.user.username;\r\n            state.isFeching = false;\r\n            state.isLoginSuccess = true;\r\n            return state;\r\n        },\r\n        [loginUser.pending]: (state) =>{\r\n            state.isFeching = true;\r\n        },\r\n        [loginUser.rejected]: (state, {payload}) => {\r\n            state.isLoginError = true;\r\n            state.isFeching = false;\r\n            state.errorMessage = 'Username or password is wrong';\r\n        },\r\n        //register fetching status\r\n        [registerUser.fulfilled]: (state , {payload}) => {\r\n            state.isFeching = false;\r\n            state.isRegisterSuccess = true;\r\n        },\r\n        [registerUser.rejected]: (state) => {\r\n            state.isFeching = false;\r\n            state.isRegisterError = true;\r\n            state.errorMessage = 'Register fail';\r\n        },\r\n        [registerUser.pending]: (state) => {\r\n            state.isFeching = true;\r\n        },\r\n        //logout\r\n        [logoutUser.fulfilled]: (state) => {\r\n            state.isFeching = false;\r\n            state.isSuccess = true;\r\n        },\r\n        [logoutUser.rejected]: (state) => {\r\n            state.isFeching = false;\r\n            state.isError = true;\r\n        },\r\n        [logoutUser.pending]: (state) => {\r\n            state.isFeching = true;\r\n        },\r\n\r\n\r\n\r\n    },\r\n})\r\nexport const { clearState, userClear } = userSlice.actions;\r\n\r\nexport const userSelector = (state) => state.user;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userSelector, clearState, registerUser } from '../../UserSlice';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n    //Modal handling\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    //redux \r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isRegisterSuccess, isRegisterError, errorMessage } = useSelector(userSelector);\r\n\r\n    //form handling\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatch(registerUser(data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearState());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isRegisterError) {\r\n            // toast.error(errorMessage, {\r\n            //     position: toast.POSITION.BOTTOM_CENTER,\r\n            //     autoClose: 1500\r\n            // });\r\n            dispatch(clearState());\r\n        }\r\n        if (isRegisterSuccess) {\r\n            toast.success('Welcome', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500\r\n            });\r\n            handleClose();\r\n            history.push('/');\r\n            dispatch(clearState());\r\n            \r\n        }\r\n    }, [isRegisterError, isRegisterSuccess]);\r\n    const registerModal = (<div>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Register</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" {...register(\"username\")} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" {...register(\"email\")} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\")} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword1\">\r\n                        <Form.Control type=\"password\" placeholder=\"Password Again\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button variant=\"outline-primary\" onClick={() => (setShowRegis(false))} >\r\n                    Already registed? Login now!\r\n                </Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    </div>);\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-dark\" style={{ lineheight: '1.5' }} variant=\"light\" onClick={handleShow}>Register</Button>\r\n            {registerModal}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport Register from '../Register/Register';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { userSelector, clearState, loginUser } from '../../UserSlice';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction Login(props) {\r\n    //toast \r\n    toast.configure();\r\n    //for Modal\r\n    const [show, setShow] = useState(false);\r\n    const [showRegis, setShowRegis] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    };\r\n\r\n    //for redux\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isLoginSuccess, isLoginError, errorMessage } = useSelector(userSelector);\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatch(loginUser(data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearState());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isLoginError) {\r\n            // toast.error(errorMessage, {\r\n            //     position: toast.POSITION.BOTTOM_CENTER,\r\n            //     autoClose: 1500\r\n            // });\r\n            dispatch(clearState());\r\n        }\r\n        if (isLoginSuccess){\r\n            toast.success('Welcome', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500 \r\n            });\r\n            dispatch(clearState());\r\n            history.push('/problem/');\r\n        }\r\n    }, [isLoginSuccess, isLoginError]);\r\n\r\n    const LoginModal = (\r\n        <div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" {...register(\"username\")} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\")} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Login\r\n                            </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n\r\n                {/* <Modal.Footer>\r\n                    <Button onClick={handleOnClickRegister}>No account? Register now!</Button>\r\n                </Modal.Footer> */}\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-dark\" style={{lineheight: '1.5'}}  variant=\"light\" onClick={handleShow}>Login</Button>\r\n            {showRegis ? <Register setShowRegis={setShowRegis}/> : LoginModal}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport { FcNightPortrait } from 'react-icons/fc'\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport Login from './Pages/Login/Login';\r\nimport './Navbar.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logoutUser } from './UserSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Register from './Pages/Register/Register';\r\nfunction Navbar() {\r\n    const [check, setCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null) setCheck(true);\r\n        else setCheck(false);\r\n    }, [localStorage.getItem('token')])\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const handleClick = () => setClick(!click);\r\n    const showButton = () => {\r\n        if (window.innerHeight <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    }\r\n    window.addEventListener('resize', showButton)\r\n    //logout process\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const onLogout = () => {\r\n        dispatch(logoutUser());\r\n        toast.success('goodbye!', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n            autoClose: 1500\r\n        });\r\n        history.push('/');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('role');\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('userInformation');\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-container container\">\r\n                    <Link to='/home' className=\"navbar-logo\">\r\n                        <FcNightPortrait className='navbar-icon'></FcNightPortrait>\r\n                        <h2>DOnlineJudge</h2>\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        {click ? <FaTimes /> : <FaBars />}\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/home' className='nav-links'> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/news' className='nav-links'> News</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/problem' className='nav-links'> Problem</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/status' className='nav-links'> Status</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/about' className='nav-links'> About</Link>\r\n                        </li>\r\n                        <li className=\"nav-btn \">\r\n                            {!check ? (\r\n                                    <Login/>\r\n                            ) : <DropdownButton variant=\"secondary\" title={localStorage.getItem('username')}>\r\n                                    <Link to='/profile' className=\"dropdown-items\">Settings</Link>\r\n                                    <Dropdown.Item onClick={onLogout}>Logout</Dropdown.Item>\r\n                                </DropdownButton>}\r\n                        </li>\r\n                        <li className=\"nav-btn\">\r\n                            {!check ? (\r\n                                <Register />\r\n                            ) : <></>}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport Navbar from '../../Navbar';\r\nimport { Card  } from 'react-bootstrap';\r\nimport Collapsible from 'react-collapsible'\r\nimport './About.scss';\r\nimport { BsChevronDown } from \"react-icons/bs\"; //react-icon\r\nimport {GoPrimitiveDot} from \"react-icons/go\";\r\n\r\nfunction RenderAnswer({ans}) {\r\n    if (ans.length == 0) return <p></p>;\r\n    if (ans.charAt(0) === '{') {\r\n        let tmp = ans.substring(1).split(',');\r\n        return (\r\n            <ul>\r\n                {tmp.map((op) => (<li>{op}</li>))}\r\n            </ul>\r\n        );\r\n    } else {\r\n        return (\r\n            <p>\r\n                {ans}\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nfunction FaqCollapsible({question, answer}) {\r\n    var lines = answer.split('\\n');\r\n    console.log(lines);\r\n    return (\r\n        <>\r\n            <Collapsible trigger={[question, <BsChevronDown/>]} easing='ease'>\r\n                {\r\n                    lines.map((line) => (<RenderAnswer ans={line}/>))\r\n                }\r\n            </Collapsible>\r\n            <div className=\"faq-collapsible-footer\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"pages-container\">\r\n                <div className=\"aboutus-container\">\r\n                    <Card className=\"aboutus-card\">\r\n                        <Card.Header as=\"h3\" className=\"aboutus-header\">\r\n                            About us\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h5>Về nhóm và sản phẩm</h5>\r\n                            <hr></hr>\r\n                            {/* Question 1: Chúng tôi là ai?*/}\r\n                            <Collapsible trigger={[\"Chúng tôi là ai?\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>Chúng tôi là sinh viên K18 của trường Đại học Bách Khoa Đà Nẵng bao gồm 4 người.</p>\r\n                                <ul>\r\n                                    <li>Ngô Văn Anh Tuấn (lead project)</li>\r\n                                    <li>Nguyễn Đăng Thông (back-end dev)</li>\r\n                                    <li>Trần Đình Quang Huy (lead front-end)</li>\r\n                                    <li>Trần Xuân Phúc (front-end dev)</li>\r\n                                </ul>\r\n                            </Collapsible>\r\n\r\n                            {/* Question 2: DOnlineJudge là gì?*/ }\r\n                            <Collapsible trigger={[\"DOnlineJudge là gì?\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>DOnlineJudge là một trình chấm code trực tuyến (online judge) được thiết kế để biên dịch (compile) và chấm kết quả (grading) một bài code của người dùng một cách tự động, thông qua các kiểm thử được thiết kế từ trước bởi người ra đề.</p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question 3: Mục đích của DOnlineJudge?*/ }\r\n                            <Collapsible trigger={[\"Mục đích của DOnlineJudge?\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>Tự động hóa quá trình chấm code (tính đúng đắn của thuật toán) thông qua kiểm tra output. Hỗ trợ người dùng luyện tập khả năng tư duy thuật toán của họ.</p>\r\n                            </Collapsible>\r\n\r\n                            <br/>\r\n                            <h5>Chi tiết triển khai (Implementation details)</h5>\r\n                            <hr></hr>\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Front-end\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>Front-end được sử dụng framework ReactJS để phát triển.</p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Back-end\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>Back-end cho web server là một API server, sử dụng Django REST framework.</p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Back-end giao tiếp với Server chấm như thế nào?\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>\r\n                                    Khi nhận code của người dùng nộp lên sẽ được đưa vào một hàng chờ, và backend sẽ tìm\r\n                                    một server chấm thích hợp. Nếu chưa tìm được, backend sẽ chờ một khoảng thời gian trước khi tìm tiếp.\r\n                                </p>\r\n                                <p>\r\n                                    Sau khi tìm được, nó sẽ khởi tạo một tiến trình background để chuẩn bị gửi thông tin biên dịch/chấm bài\r\n                                    qua judge server. Sau khi gửi, tiến trình đó sẽ chờ đợi phản hồi từ server chấm để cập nhập thông tin\r\n                                    của bài chấm lên /status.\r\n                                </p>\r\n                                <p>\r\n                                    Back-end có một danh sách các server chấm cùng địa chỉ websocket của chúng. Back-end chọn server chấm\r\n                                    theo tiêu chí tham lam là số lượng task còn tồn động ít nhất trên số nhân CPU.\r\n                                </p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Server chấm code như thế nào?\", <BsChevronDown/>]} easing='ease'>\r\n                                <p>\r\n                                    Server chấm sử dụng công nghệ Docker để biên dịch và thực thi code trong cô lập.\r\n                                    Trong container Docker, có một script dùng để bắt đầu và kết thúc quá trình này.\r\n                                    Sau khi hoàn tất (thành công hoặc thất bại), script sẽ báo cáo thông tin về từ\r\n                                    bên trong Docker ra bên ngoài server chấm. Server chấm sẽ lọc những thông tin quan trọng,\r\n                                    phản hồi về lại với Back-end thông qua địa chỉ đã gửi request.\r\n                                </p>\r\n                                <p>\r\n                                    Nếu server chấm không có tác vụ, nó sẽ thỉnh thoảng ping đến back-end để xác nhận còn sống (heartbeat).\r\n                                </p>\r\n                            </Collapsible>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import axiosClient from './axiosClient';\r\nimport queryString from 'query-string';\r\n\r\nconst oj_announcementAPI = {\r\n    getAll: (data) => {\r\n        // const token = localStorage.getItem('token');\r\n        // let config = {\r\n        //     headers: {\r\n        //         'Authorization': 'Token ' + token,\r\n        //     }\r\n        // }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `/announcement/?${paramString}`;\r\n        return axiosClient.get(url);\r\n    },\r\n}\r\nexport default oj_announcementAPI;","import { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport './Announcement.scss'\r\nfunction Announcement(props) {\r\n    const { title, author, creation_time, content, id } = props;\r\n    const hanldeTime = (time) => {\r\n        return new Date(time).toDateString();\r\n    }\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n    const contentModal = (\r\n        <div>\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n                size=\"xl\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        Annoucement #{id}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {content}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"announcement-container\">\r\n            <article>\r\n                <div className=\"annou_head\">\r\n                    <h5>From: {author}</h5>\r\n                    <div className=\"creation_time\">\r\n                        <p>{hanldeTime(creation_time)}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"annou_detail\">\r\n                    <h3>{title}</h3>\r\n                </div>\r\n\r\n                <div className=\"more-button\">\r\n                    <Button onClick={handleShow}>More...</Button>\r\n                    {contentModal}\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcement\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport '../Page.scss';\r\nimport './Home.scss';\r\nimport { Card } from 'react-bootstrap';\r\nimport oj_announcementAPI from '../../../api/oj_announcementAPI';\r\nimport Announcement from './Announcement';\r\nfunction Home() {\r\n    const [announcement, setAnnouncement] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAnnouncement = async () => {\r\n            try {\r\n                const response = await oj_announcementAPI.getAll();\r\n                console.log(response);\r\n                setAnnouncement(response.data);\r\n            } catch (error) {\r\n                console.log('fail to announcement: ', error);\r\n            }\r\n        }\r\n        fetchAnnouncement();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"pages-container\">\r\n                <div className=\"home-container\">\r\n                    <div className=\"left-part home-container__items\">\r\n                        <h1>Welcome</h1>\r\n                    </div>\r\n                    <div className=\"right-part home-container__items\">\r\n                        <h1>News</h1>\r\n                        <div className=\"annoucement-container\">\r\n                            {\r\n                                announcement.map(annou => {\r\n                                    return <Announcement title={annou.title}\r\n                                        content={annou.content}\r\n                                        creation_time={annou.creation_time}\r\n                                        author={annou.author_name} key={annou.id}\r\n                                        id={annou.id} />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axiosClient from './axiosClient';\r\nimport queryString from 'query-string';\r\n\r\nconst oj_problemAPI = {\r\n    getAll: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `problem/?${paramString}`;\r\n        console.log(url);\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `problem/${id}`;\r\n        return axiosClient.get(url, config);  \r\n    }\r\n    \r\n}\r\n\r\nexport default oj_problemAPI","import React, { useState } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap';\r\nfunction Search(props) {\r\n    const { onSubmit } = props;\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    function handleSearchTerm(e) {\r\n        const value = e.target.value\r\n        setSearchTerm(value);\r\n    }\r\n    function handleSearch(e){\r\n        if(!onSubmit) return;\r\n        onSubmit(searchTerm);\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div>\r\n            <Form inline onSubmit={handleSearch}>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={handleSearchTerm}/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport './Problem.scss';\r\nimport oj_problemAPI from '../../../api/oj_problemAPI';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from '../../Components/Search';\r\n\r\nfunction Problem() {\r\n    const [problems, setProblems] = useState([])\r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '',\r\n        \r\n    });\r\n    const [sortById, setSortById] = useState(false);\r\n    const [sortByTitle, setSortByTitle] = useState(false);\r\n    const [sortByLevel, setSortByLevel] = useState(false);\r\n    //difficulty\r\n    const difficulty = {\r\n        \"Easy\": \"Easy\",\r\n        \"Medium\": \"Medium\",\r\n        \"Hard\": \"Hard\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fectchProblems = async () => {\r\n            const response = await oj_problemAPI.getAll(filters);\r\n            console.log(response.data);\r\n            setProblems(response.data);\r\n        }\r\n        fectchProblems();\r\n    }, [filters])\r\n    //serach process\r\n    function handleSearchForm(newValue) {\r\n        setFilters({\r\n            ...filters,\r\n            contains: newValue,\r\n        })\r\n    }\r\n    //filters\r\n    function handleFilterDiff(e) {\r\n        const value = e.target.value;\r\n        filters.filter_by.push('difficulty');\r\n        if (value === '') {\r\n            filters.filter_by = filters.filter_by.filter((item) => item !== 'difficulty');\r\n            setFilters({\r\n                ...filters,\r\n                filter_by: filters.filter_by,\r\n                difficulty: '',\r\n            })\r\n        }\r\n        else {\r\n            setFilters({\r\n                ...filters,\r\n                difficulty: value,\r\n\r\n            })\r\n        }\r\n    }\r\n    //sort \r\n    const handleSortByDisplayId = () =>{\r\n        setSortById(!sortById)\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortById ? '-display_id' : 'display_id',\r\n        })\r\n    }\r\n    const handleSortByTitle = () => {\r\n        setSortByTitle(!sortByTitle);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByTitle ? '-title' : 'title',\r\n        })\r\n    };\r\n    const handleSortByLevel = () => {\r\n        setSortByLevel(!sortByLevel);\r\n        setFilters({\r\n            ...filters,\r\n        sort_by: sortByLevel ? '-difficulty' : 'difficulty',\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"problems-container pages-container\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"problem-header\">\r\n                        Problem\r\n                    <div className=\"problem-feartures\">\r\n                            <div className=\"problem-feartures__items\">\r\n                                <Search onSubmit={handleSearchForm} />\r\n                            </div>\r\n                            <div className=\"problem-feartures__items\">\r\n                                <p>Difficulty</p>\r\n                                <Form className=\"filter_by\" onChange={(e) => { handleFilterDiff(e)}}>\r\n                                    <Form.Control as=\"select\" className=\"filter_by\">\r\n                                        <option value=\"\">All</option>\r\n                                        <option value=\"Easy\">Easy</option>\r\n                                        <option value=\"Medium\">Medium</option>\r\n                                        <option value=\"Hard\">Hard</option>\r\n                                    </Form.Control>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body >\r\n                        < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th onClick={() => handleSortByDisplayId()}>Display ID</th>\r\n                                        <th onClick={() => handleSortByTitle()}>Tille</th>\r\n                                        <th onClick={() => handleSortByLevel()}>Level</th>\r\n                                        <th>Total</th>\r\n                                        <th>AC Rate</th>\r\n                                    </tr>\r\n                                </thead>\r\n                            <tbody className=\"pages-container\">\r\n                                    {\r\n                                        problems.length > 0 ? (\r\n                                            problems.map((problem) => (\r\n                                                <tr key={problem.id}>\r\n                                                    <td>{problem.display_id}</td>\r\n                                                    <td><Link to={`/problem/${problem.id}`}>{problem.title}</Link></td>\r\n                                                    <td>\r\n                                                        <div className=\"table-cell\">\r\n                                                            <div className={`difficulty-container ${difficulty[problem.difficulty]}`}>\r\n                                                                <div className=\"difficulty-text\">\r\n                                                                    {problem.difficulty}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{problem.total_submission}</td>\r\n                                                    <td>{problem.correct_submission}</td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>Nothing</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Problem;","import axiosClient from './axiosClient';\r\nimport queryString from 'query-string';\r\nconst oj_statusAPI = {\r\n    getAll: (data) => {\r\n        const paramString = queryString.stringify(data);\r\n        const url = `status/?${paramString}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    postProblem: (data) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = 'status/';\r\n        return axiosClient.post(url, data, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `status/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    getByAuthor: (authorId) => {\r\n        const url = `status/${authorId}}`;\r\n        return axiosClient.get(url);\r\n    }\r\n\r\n}\r\n\r\nexport default oj_statusAPI;","import axiosClient from './axiosClient';\r\n\r\nconst oj_profileAPI = {\r\n    getUserInformation: () =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/';\r\n        return axiosClient.get(url,config);\r\n    },\r\n    getById: (id) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `/profile/${id}`;\r\n        return axiosClient.get(url,config);\r\n    },\r\n    editUserInformation: (data) =>{\r\n        Object.assign(data, { email: \"\", \"profile_pic\": \"\",});\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/';\r\n        return axiosClient.put(url,data,config);\r\n    },\r\n    uploadAvatar: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/';\r\n        return axiosClient.put(url,data,config);\r\n    },\r\n    changePassword: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/change-password/';\r\n        return axiosClient.put(url,data,config);\r\n    }\r\n}\r\nexport default oj_profileAPI;","import React, {useState, useEffect} from 'react';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport Navbar from '../../Navbar';\r\nimport './status.scss';\r\nimport queryString from 'query-string';\r\nimport oj_profileAPI from '../../../api/oj_profileAPI';\r\nfunction Status() {\r\n    let href = window.location.href;\r\n    const id = queryString.parse(href, { parseNumbers: true })\r\n    const [status, setStatus] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        sort_by: '-submit_time',\r\n        filter_by: ['author_id'],\r\n        author_id: id.author_id,\r\n    })\r\n    const [sortById, setSortById] = useState(false);\r\n    const [sortByProblem, setSortByProblem] = useState(false);\r\n    const [sortByAuthor, setSortByAuthor] = useState(false);\r\n    const [sortByStatus, setSortByStatus] = useState(false);\r\n    const [sortByLanguage, setSortByLanguage] = useState(false);\r\n    const [sortByTime, setSortByTime] = useState(false);\r\n    const [sortByMemory, setSortByMemory] = useState(false);\r\n    const [sortByWhen, setSortByWhen] = useState(false);\r\n    const result = {\r\n        \"Accepted\": \"Accepted\",\r\n        \"Wrong Answer\": \"Wrong_answer\",\r\n        \"Runtime Error\": \"Runtime_error\",\r\n        \"New\": \"New\",\r\n        \"Compilation Error\": \"Compile_error\",\r\n        \"System Error\": \"System_error\",\r\n        \"Judged\": \"Judged\",\r\n        \"Judging\": \"Judging\"\r\n\r\n    };\r\n\r\n    //sort by id\r\n    function handleSortChange(e){\r\n        const condition = (e.target.value === 'newest' ? '-submit_time' : 'submit_time');\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: condition,\r\n\r\n        })\r\n    }\r\n    function handleFilterVerdict(e){\r\n        const value = e.target.value\r\n        filters.filter_by.push('verdict');\r\n        if(value === '') {\r\n            filters.filter_by = filters.filter_by.filter((item) => item !== 'verdict');\r\n            setFilters({\r\n                ...filters,\r\n                filter_by: filters.filter_by,\r\n                verdict: '',\r\n            })\r\n        }\r\n        else{\r\n        setFilters({\r\n            ...filters,\r\n            verdict: value,\r\n            \r\n        })\r\n    }\r\n    };\r\n    function handleFilterLanguege(e){\r\n        const value = e.target.value;\r\n        filters.filter_by.push('language');\r\n        if (value === '') {\r\n            filters.filter_by = filters.filter_by.filter((item) => item !== 'language');\r\n            setFilters({\r\n                ...filters,\r\n                filter_by: filters.filter_by,\r\n                language: '',\r\n            })\r\n        }\r\n        else{\r\n            setFilters({\r\n                ...filters,\r\n                language: value,\r\n\r\n            })\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const fetchStatus = async () => {\r\n            try {\r\n                const response = await oj_statusAPI.getAll(filters);\r\n                setStatus(response.data);\r\n            } catch (error) {\r\n               console.log('fail to fetch status: ', error); \r\n            }\r\n        }\r\n        fetchStatus();\r\n    }, [filters])\r\n    const hanldeTime = (time) => {\r\n        return new Date(time).toDateString();  \r\n    }\r\n    //sort\r\n    const handleSortById = () =>{\r\n        setSortById(!sortById);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortById ? '-id' : 'id',\r\n            \r\n        })\r\n    }\r\n    const handleSortByProblem = () =>{\r\n        setSortByProblem(!sortByProblem);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByProblem ? '-problem_title' :'problem_title'\r\n        })\r\n    }\r\n    const handleSortByAuthor = () => {\r\n        setSortByAuthor(!sortByAuthor);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByAuthor ? '-author_name' : 'author_name'\r\n        })\r\n    }\r\n    const handleSortByStatus = () => {\r\n        setSortByStatus(!sortByStatus);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByStatus ? '-verdict' : 'verdict'\r\n        })\r\n    }\r\n     const handleSortByLanguage = () => {\r\n        setSortByLanguage(!sortByLanguage);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByLanguage ? '-language' : 'language'\r\n        })\r\n    }\r\n    const handleSortByTime = () => {\r\n        setSortByTime(!sortByTime);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByTime ? '-time' : 'time'\r\n        })\r\n    }\r\n    const handleSortByMemory = () => {\r\n        setSortByMemory(!sortByMemory);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByMemory ? '-memory' : 'memory'\r\n        })\r\n    }\r\n    const handleSortByWhen = () => {\r\n        setSortByWhen(!sortByWhen);\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortByWhen ? '-submit_time' : 'submit_time'\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"status-container pages-container\">\r\n                  <Card>\r\n                <Card.Header as=\"h3\" className=\"status-header\">\r\n                    Status\r\n                    <div className=\"status-feartures\">\r\n                        <div className=\"filter_by\">\r\n                            <Form className=\"filter_by\" onChange={handleFilterVerdict}>\r\n                                    <Form.Control as=\"select\" className=\"filter_by\">\r\n                                        <option value=\"\">All</option> \r\n                                        <option value=\"Accepted\">Accepted</option>\r\n                                        <option value=\"Wrong Answer\">Wrong answer</option>\r\n                                        <option value=\"Runtime Error\">Runtime error</option>\r\n                                        <option value=\"New\">New</option>\r\n                                        <option value=\"Compile Error\">Compile error</option>\r\n                                        <option value=\"System Error\">System error</option>\r\n                                        <option value=\"Judged\">Judged</option>\r\n                                        <option value=\"Judging\">Judging</option>\r\n                                </Form.Control>\r\n                            </Form>\r\n                                <Form className=\"filter_by\" onChange={handleFilterLanguege}>\r\n                                    <Form.Control as=\"select\" className=\"filter_by\">\r\n                                        <option value=\"\">All</option>\r\n                                        <option value=\"Python3\">Python3</option>\r\n                                        <option value=\"Python2\">Python2</option>\r\n                                        <option value=\"C\">C</option>\r\n                                        <option value=\"Cpp\">C++</option>\r\n                                        <option value=\"Java\">Java</option>\r\n                                    </Form.Control>\r\n                                </Form>\r\n                        </div>\r\n                        <div className=\"sort_by_day\">\r\n                                <Form.Control as=\"select\" onChange={handleSortChange} >\r\n                                    <option value=\"newest\">Newest</option>\r\n                                    <option value=\"lastest\">Lastest</option>\r\n                                </Form.Control>\r\n                        </div>\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    \r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th onClick={() => handleSortById()}>ID</th>\r\n                                    <th onClick={() => handleSortByProblem()}>Problem</th>\r\n                                    <th onClick={() => handleSortByAuthor()}>Author</th>\r\n                                    <th onClick={() => handleSortByStatus()}>Status</th>\r\n                                    <th onClick={() => handleSortByLanguage()}>Language</th>\r\n                                    <th onClick={() => handleSortByTime()}>Time</th>\r\n                                    <th onClick={() => handleSortByMemory()}>Memory</th>\r\n                                    <th onClick={() => handleSortByWhen()}>When</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    status.map(stat => {\r\n                                        return (\r\n                                            <tr key={stat.id}>\r\n                                                <td>{stat.id}</td>\r\n                                                <td>\r\n                                                    <div className=\"table-cell\">\r\n                                                        <Link to={`problem/${stat.problem_id}`} >{stat.problem_title}</Link>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{stat.author_name}</td>\r\n                                                <td >\r\n                                                    <div className=\"table-cell\">\r\n                                                        <div className={`result-container ${result[stat.verdict]}`}>\r\n                                                            <div className=\"result-text\">\r\n                                                                {stat.verdict}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{stat.language}</td>\r\n                                                <td>{stat.output[\"time\"]}s</td>\r\n                                                <td>{Math.floor(stat.output['memory']/1024)} MB</td>\r\n                                                <td>{hanldeTime(stat.submit_time)}</td>\r\n                                                <td><Link to={`status/${stat.id}`}>Detail</Link></td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Status;","import React from 'react'\r\nimport {Button} from 'react-bootstrap';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { useHistory } from 'react-router';\r\nimport logoutAPI from '../api/logoutAPI';\r\nimport './AdminNavbar.scss';\r\nfunction AdminNavbar() {\r\n    const history = useHistory();\r\n    function handlelogout(){\r\n        const logout = async () => {\r\n            const response = await logoutAPI.logout();\r\n            if(response){\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('role');\r\n                localStorage.removeItem('username');\r\n                localStorage.removeItem('userId');\r\n                localStorage.removeItem('userInformation');\r\n                history.push('/');\r\n            }\r\n        }\r\n        logout();\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-container\">\r\n                    <div className=\"btn-item\">\r\n                        <Button variant=\"light\"  onClick={() => handlelogout()}>\r\n                            <FiLogOut />\r\n                            Log out\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nAdminNavbar.propTypes = {\r\n\r\n}\r\n\r\nexport default AdminNavbar\r\n\r\n","import { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Sidebar.scss';\r\nimport { AiFillAppstore, AiOutlineBars, AiOutlineCode } from 'react-icons/ai';\r\nimport Logo from './Logo.png';\r\nfunction Sidebar() {\r\n  const handleCollapsed = () => {\r\n    if(window.innerWidth <= 960){\r\n      document.querySelector('.menu-sidebar').classList.add('collapsed');\r\n    }\r\n    else{\r\n      document.querySelector('.menu-sidebar').classList.remove('collapsed');\r\n    }\r\n    \r\n  }\r\n  window.addEventListener('resize', handleCollapsed)\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <ProSidebar className=\"menu-sidebar\" >\r\n        <div className=\"logo\" style={{ marginTop: 200}}>\r\n        </div>\r\n        <Menu iconShape=\"circle\" >\r\n          <MenuItem icon={<AiOutlineCode />}>\r\n            Dashboard\r\n              <Link to='/admin/dashboard' />\r\n          </MenuItem>\r\n          <SubMenu title=\"General\" icon={<AiFillAppstore />}>\r\n            <MenuItem>\r\n              Announcement\r\n               <Link to=\"/admin/announcement\" />\r\n            </MenuItem>\r\n            <MenuItem >\r\n              User\r\n              <Link to=\"/admin/user\" />\r\n            </MenuItem>\r\n          </SubMenu>\r\n          <SubMenu title=\"Problem\" icon={<AiOutlineBars />}>\r\n            <MenuItem >\r\n              Problem List\r\n              <Link to=\"/admin/problem\" />\r\n            </MenuItem>\r\n            <MenuItem>\r\n              Create Problem\r\n              <Link to='/admin/problem/create' />\r\n            </MenuItem>\r\n          </SubMenu>\r\n        </Menu>\r\n      </ProSidebar>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n\r\n}\r\n\r\nexport default Sidebar\r\n\r\n","import axiosClient from \"./axiosClient\";\r\nconst admin_problemAPI = {\r\n    getAll: () => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = 'admin/problem/';\r\n        return axiosClient.get(url,config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `admin/problem/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    deleteById: (id) => {\r\n        const url = `admin/problem/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.delete(url, config);\r\n    },\r\n    updateById: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `admin/problem/${data.id}/`;\r\n        return axiosClient.put(url, data.formData, config)\r\n    },\r\n    createProblem: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = 'admin/problem/';\r\n        return axiosClient.post(url, data, config);\r\n    },\r\n    updateVisible: (id, isVisible) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `admin/problem/${id}/`;\r\n        const visible = {visible: !isVisible};\r\n        return axiosClient.put(url,visible,config);\r\n    }\r\n}\r\n\r\nexport default admin_problemAPI\r\n","import axiosClient from './axiosClient'\r\nconst token = localStorage.getItem('token');\r\nlet config = {\r\n    headers: {\r\n        'Authorization': 'Token ' + token,\r\n    }\r\n};\r\nconst admin_usersAPI = {\r\n    getAll: () =>{\r\n        const url = 'admin/users';\r\n        return axiosClient.get(url,config);\r\n    },\r\n    getById: (id)=>{\r\n        const url = `admin/users/${id}`;\r\n        return axiosClient.get(url,config);\r\n    },\r\n    deleteById: (id) => {\r\n        const url = `admin/users/${id}`;\r\n        return axiosClient.delete(url,config);\r\n    },\r\n    createUser: (data) => {\r\n        const url = '/admin/users/';\r\n        return axiosClient.post(url,data,config);\r\n    },\r\n    editUser: (data, id) =>{\r\n        const url = `/admin/users/${id}`;\r\n        return axiosClient.put(url,data,config)\r\n    }\r\n}\r\nexport default admin_usersAPI;","import axiosClient from './axiosClient'\r\nconst admin_announcementAPI = {\r\n    getAll:  () =>{\r\n        const url = 'admin/announcement/';\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `admin/announcement/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    deleteById:(id) => {\r\n        const url = `admin/announcement/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.delete(url,config);\r\n    },\r\n    updateById: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `admin/announcement/${data.id}/`;\r\n        return axiosClient.put(url, data.formData ,config)\r\n    },\r\n    createAnnouncemt: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(data);\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = 'admin/announcement/';\r\n        return axiosClient.post(url,data,config);\r\n    },\r\n    updateVisible: (id, visible) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            },\r\n        }\r\n        const url = `/admin/announcement/${id}/`;\r\n        const setVisible = { \"is_visible\": !visible, };\r\n        return axiosClient.put(url, setVisible,config);\r\n    }\r\n}\r\n\r\nexport default admin_announcementAPI;\r\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport admin_usersAPI from '../api/admin_usersAPI';\r\nimport admin_announcementAPI from '../api/admin_announcementAPI';\r\nimport admin_problemAPI from '../api/admin_problemAPI'\r\nexport const UserList = createAsyncThunk(\r\n    '/admin/users',\r\n    async(thunkAPI) => {\r\n        try {\r\n            const response = await admin_usersAPI.getAll();\r\n            return response;\r\n        } catch (error) {\r\n            console.log(\"fail to get user list\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n);\r\n\r\nexport const AnnouncementList = createAsyncThunk(\r\n    '/admin/announcements',\r\n    async(thunkAPI) =>{\r\n        try {\r\n            const response = await admin_announcementAPI.getAll();\r\n            return response;\r\n        } catch (error) {\r\n            console.log(\"fail to get announcement list\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const deleteAnnouncement = createAsyncThunk(\r\n    '/deleteAnnouncement',\r\n    async(id,thunkAPI) => {\r\n        try {\r\n            await admin_announcementAPI.deleteById(id);\r\n        } catch (error) {\r\n            console.log(\"fail to get user list\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n    '/deleteUser',\r\n    async(id, thunkAPI) => {\r\n        try {\r\n            await admin_usersAPI.deleteById(id);\r\n        } catch (error) {\r\n            console.log(\"fail to delete user\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const deleteProblem = createAsyncThunk(\r\n    '/deleteProblem',\r\n    async(id, thunkAPI) => {\r\n        try {\r\n            await admin_problemAPI.deleteById(id);\r\n        } catch (error) {\r\n            console.log(\"fail to delete problem\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const adminSlice = createSlice({\r\n    name: 'admin',\r\n    initialState: {\r\n        admin_announcements: {},\r\n        admin_users: {},\r\n        admin_problems: {},\r\n        //users\r\n        isFetchUsersSuccess: false,\r\n        //annoucement\r\n        isFetchAnnouncementsSuccess: false,\r\n            //delete\r\n        deleteSusscess: false,\r\n    },\r\n    reducers:{\r\n        clearState: (state) => {\r\n            state.deleteSusscess = false;\r\n            state.isFetchAnnouncementsSuccess = false;\r\n            state.isFetchUsersSuccess = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [UserList.fulfilled]: (state, {payload}) =>{\r\n            // state.users = payload;\r\n            state.isFetchUsersSuccess = true;\r\n            state.admin_users = payload.data;\r\n        },\r\n        [UserList.rejected]: () =>{\r\n            console.log(\"failt to fetch userList\");\r\n           \r\n        },\r\n            //delete user\r\n        [deleteUser.fulfilled] : (state) =>{\r\n            state.deleteSusscess = true;\r\n        },\r\n        [deleteUser.rejected] : (state) => {\r\n            state.deleteSusscess = false;\r\n            console.log('delete user fail');\r\n        },\r\n        //announcements\r\n        [AnnouncementList.fulfilled]: (state, {payload}) =>{\r\n            state.admin_announcements = payload.data;\r\n            state.isFetchAnnouncementsSuccess = true;\r\n        },\r\n        [AnnouncementList.rejected]: (state) =>{\r\n            state.isFetchAnnouncementsSuccess = false;\r\n            console.log(\"failt to fetch announcements\");\r\n        },\r\n        //delete announcement\r\n        [deleteAnnouncement.fulfilled]: (state) =>{\r\n            state.deleteSusscess = true;\r\n        },\r\n        [deleteAnnouncement.rejected]: (state) =>{\r\n            state.deleteSusscess = false;\r\n            console.log(\"failt to delete announcement\");\r\n        },  \r\n        //delete Problem\r\n        [deleteProblem.fulfilled] : (state) =>{\r\n            state.deleteSusscess = true;\r\n        },\r\n        [deleteProblem.rejected] : (state) =>{\r\n            state.deleteSusscess = false;\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const { clearState } = adminSlice.actions;\r\nexport const adminSelector = (state) => state.admin;","import React, { useState, useEffect } from 'react'\r\nimport '../../Table.scss';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDownload, AiOutlineDelete } from 'react-icons/ai';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport admin_problemAPI from '../../../api/admin_problemAPI';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adminSelector, deleteProblem, clearState } from '../../AdminSlice';\r\nimport Switch from 'react-switch';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport './ProblemList.scss';\r\nfunction ProblemList(props) {\r\n    const [problems, setProblems] = useState([]);\r\n    //redux \r\n    const dispatch = useDispatch();\r\n    const { deleteSusscess } = useSelector(adminSelector);\r\n    //delete problem\r\n    const handleDeleteProblem = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deleteProblem(id));\r\n            dispatch(clearState)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const fetchProblemList = async () => {\r\n            try {\r\n                const response = await admin_problemAPI.getAll();\r\n                setProblems(response.data);\r\n            } catch (error) {\r\n                console.log(\"Fail to fetch problem list: \", error);\r\n            }\r\n        };\r\n        fetchProblemList();\r\n    }, [deleteSusscess])\r\n    const handleVisible = (id, isVisible) => {\r\n        const update = async () =>{\r\n            const response = await admin_problemAPI.updateVisible(id, isVisible);\r\n            const newProblem = response.data;\r\n            setProblems(\r\n                problems.map(\r\n                    (problem) => {return newProblem.id === problem.id ? {...problem, visible: newProblem.visible} : problem}\r\n                )\r\n            )\r\n        };\r\n        update();\r\n    }\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"problemList-header\">\r\n                        Problem List\r\n                        <div className=\"create_button\">\r\n                            <Link to={`/admin/problem/create`}  className=\"alter_announcement\"> <BsFillPlusCircleFill /> New</Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Display ID</th>\r\n                                        <th>Author</th>\r\n                                        <th>Tille</th>\r\n                                        <th>Create time</th>\r\n                                        <th>Visible</th>\r\n                                        <th>Operation</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        problems.length > 0 ? (\r\n                                            problems.map((problem) => (\r\n                                                <tr key={problem.id}>\r\n                                                    <td>{problem.id}</td>\r\n                                                    <td>{problem.display_id}</td>\r\n                                                    <td>{problem.author_name}</td>\r\n                                                    <td>{problem.title}</td>\r\n                                                    <td>{problem.created}</td>\r\n                                                    <td>\r\n                                                        <Switch \r\n                                                            checked={problem.visible}\r\n                                                            height={20} width={40}\r\n                                                            onChange={() => handleVisible(problem.id, problem.visible)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Link to={`/admin/problem/${problem.id}`} >\r\n                                                                        <Button variant=\"light\">\r\n                                                                            <AiOutlineEdit />\r\n                                                                        </Button>\r\n                                                                    </Link>\r\n\r\n                                                                </div>\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineDownload />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\" onClick={() => handleDeleteProblem(problem.id)}>\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>Nothing</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nProblemList.propTypes = {\r\n\r\n}\r\n\r\nexport default ProblemList\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport '../../Table.scss';\r\nimport './User.scss';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {adminSelector, clearState, deleteUser, UserList} from '../../AdminSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nfunction User(props) {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    //for redux\r\n    const dispatch = useDispatch();\r\n    const { admin_users, isFetchUsersSuccess, deleteSusscess } = useSelector(adminSelector);\r\n    //delete\r\n    const handleDeleteUser = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deleteUser(id));   \r\n        }\r\n    }\r\n    //\r\n    useEffect(() => {\r\n        dispatch(UserList());\r\n    },[])\r\n    useEffect(() => {\r\n        if(isFetchUsersSuccess){\r\n            setUsers(admin_users);\r\n            dispatch(clearState());\r\n        }\r\n    },[isFetchUsersSuccess]);\r\n    useEffect(() => {\r\n        if (deleteSusscess){\r\n            dispatch(UserList())\r\n        }\r\n    },[deleteSusscess])\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h4\" className=\"user-header\">\r\n                        Users\r\n                        <div className=\"create_button\">\r\n                            <Link to={`/admin/users/new`} className=\"alter_announcement\"> <BsFillPlusCircleFill /> New</Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Username</th>\r\n                                        <th>Create time</th>\r\n                                        <th>Last login</th>\r\n                                        <th>Email</th>\r\n                                        <th>User type</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.length > 0 ? (\r\n                                            users.map((user) => (\r\n                                                <tr key={user.id}>\r\n                                                    <td>{user.id}</td>\r\n                                                    <td>{user.username}</td>\r\n                                                    <td>{user.create_time}</td>\r\n                                                    <td>{user.last_login}</td>\r\n                                                    <td>{user.email}</td>\r\n                                                    <td>{user.admin_type}</td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button__items\">\r\n                                                                        <Link to={`/admin/users/${user.id}`} className=\"alter-user-button\"><AiOutlineEdit /></Link>\r\n                                                                </div>\r\n                                                                <div className=\"option-button__items\">\r\n                                                                    <Button variant=\"light\" onClick={() => { handleDeleteUser(user.id)}}>\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>No user</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n\r\n}\r\n\r\nexport default User\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { Card, Button, Form} from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport '../../Table.scss';\r\nimport './Announcement.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adminSelector, AnnouncementList, deleteAnnouncement, clearState } from '../../AdminSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport Switch from \"react-switch\";\r\nimport admin_announcementAPI from '../../../api/admin_announcementAPI';\r\nfunction Announcement(props) {\r\n    const [announcements, setAnnouncements] = useState([]);\r\n    //for redux\r\n    const dispatch = useDispatch();\r\n    const { admin_announcements, isFetchAnnouncementsSuccess, deleteSusscess } = useSelector(adminSelector);\r\n    //delete announcement\r\n    const HandleDeleteAnnouncement = (id) => {\r\n        if(window.confirm(\"Are you sure?\")){\r\n            dispatch(deleteAnnouncement(id));\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(AnnouncementList());\r\n    }, [])\r\n    useEffect(()=>{\r\n        if (isFetchAnnouncementsSuccess){\r\n            setAnnouncements(admin_announcements);\r\n        }\r\n        return dispatch(clearState());\r\n    }, [isFetchAnnouncementsSuccess]);\r\n    useEffect(() =>{\r\n        if (deleteSusscess){\r\n            dispatch(AnnouncementList());\r\n        }\r\n    }, [deleteSusscess])\r\n    //set Visible\r\n    const handleVisible = async (id, is_visible) => {\r\n        try {\r\n            const res = await admin_announcementAPI.updateVisible(id, is_visible);\r\n            const newann = res.data;\r\n            setAnnouncements (\r\n                announcements.map(\r\n                    (ann) => ann.id === newann.id ? {...ann,  is_visible: newann.is_visible} : ann\r\n                )\r\n            )\r\n            console.log(\"Update announcements\")\r\n        } catch (error) {\r\n            console.log(\"Fail to set visibility:\", error);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"announcements-container\">\r\n                <div className=\"table-view\">\r\n                    <Card>\r\n                        <Card.Header as=\"h3\" className=\"announcement-header\">\r\n                            Announcements\r\n                            <div className=\"create_button\">\r\n                                <Link to={`/admin/announcement/new`} className=\"alter_announcement\"> <BsFillPlusCircleFill/> New</Link>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Title</th>\r\n                                        <th>Create time</th>\r\n                                        <th>Author</th>\r\n                                        <th>Visible</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        announcements.length > 0 ? (\r\n                                            announcements.map((announcement) => (\r\n                                                <tr key={announcement.id}>\r\n                                                    <td>{announcement.id}</td>\r\n                                                    <td>{announcement.title}</td>\r\n                                                    <td>{announcement.creation_time}</td>\r\n                                                    <td>{announcement.author_name}</td>\r\n                                                    <td>\r\n                                                        <Switch onChange={() => handleVisible(announcement.id, announcement.is_visible)} checked={announcement.is_visible} height={20} width={40}/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button__items\">\r\n                                                                    <Link to={`/admin/announcement/${announcement.id}`} className=\"alter_announcement\"> <AiOutlineEdit /></Link>\r\n                                                                </div>\r\n                                                                <div className=\"option-button__items\">\r\n                                                                    <Button variant=\"light\" onClick={() => { HandleDeleteAnnouncement(announcement.id)}}>\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={6}>Nothing</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        </Card.Body>\r\n                    </Card>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAnnouncement.propTypes = {\r\n\r\n}\r\n\r\nexport default Announcement\r\n\r\n","import React from 'react';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport './Dashboard.scss';\r\nfunction Dashboard(props) {\r\n    // const [name, SetName] = useState('admin');\r\n    // const [role, Setrole] = useState('Super Admin');\r\n    // const [image, setImage] = useState('http://nvatazure.southeastasia.cloudapp.azure.com/public/avatar/default.png')\r\n\r\n    return (\r\n        <div className=\"admin-content\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"dashboard\" >\r\n                <div className=\"admin-img\">\r\n                    {/* <img src={image} alt=\"\" width=\"100%\" height=\"100%\" /> */}\r\n                </div>\r\n                <hr />\r\n                <div className=\"admin-info\">\r\n                    {/* <p className=\"admin-name\"> {name} </p>\r\n                    <p className=\"admin-role\"> {role} </p> */}\r\n\r\n                </div>\r\n\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, Button, Form } from 'react-bootstrap';\r\nimport './Createproblem.scss';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom';\r\nimport admin_problemAPI from '../../../api/admin_problemAPI';\r\n\r\n\r\nfunction Createproblem({ match }) {\r\n    const { handleSubmit } = useForm();\r\n    const id = match.params.id;\r\n    const [display_id, setDisplay_id] = useState(() => {\r\n        const initDisplay_id = localStorage.getItem('display_id') || '';\r\n        return initDisplay_id;\r\n    });\r\n    const [title, setTitle] = useState(() => {\r\n        const initTitle = localStorage.getItem('title') || '';\r\n        return initTitle;\r\n    });\r\n    const [description, setDescription] = useState(() => {\r\n        const initDescription = localStorage.getItem('description') || '';\r\n        return initDescription;\r\n    });\r\n    const [input_description, setInput_description] = useState(() => {\r\n        const initInput_description = localStorage.getItem('input_description') || '';\r\n        return initInput_description;\r\n    });\r\n    const [output_description, setOutput_description] = useState(() => {\r\n        const initOutput_description = localStorage.getItem('output_description') || '';\r\n        return initOutput_description;\r\n    });\r\n    const [time_limit, setTime_limit] = useState(() => {\r\n        const initTime_limit = localStorage.getItem('time_limit') || '';\r\n        return initTime_limit;\r\n    });\r\n    const [memory_limit, setMemory_limit] = useState(() => {\r\n        const initMemory_limit = localStorage.getItem('memory_limit') || '';\r\n        return initMemory_limit;\r\n    });\r\n    const [visible, setVisible] = useState(() => {\r\n        const initVisible = localStorage.getItem('visible') || '';\r\n        return initVisible;\r\n    });\r\n    const [difficulty, setDifficulty] = useState(() => {\r\n        const initDifficulty = localStorage.getItem('difficulty') || '';\r\n        return initDifficulty;\r\n    });\r\n    const [sample_test, setSample_test] = useState([]);\r\n\r\n    const history = useHistory();\r\n    const handleDisplay_id = (e) => {\r\n        const value = e.target.value;\r\n        setDisplay_id(value);\r\n        localStorage.setItem('display_id', value);\r\n    }\r\n    const handleTitle = (e) => {\r\n        const value = e.target.value;\r\n        setTitle(value);\r\n        localStorage.setItem('title', value);\r\n    }\r\n    const handleDescription = (e) => {\r\n        const value = e.target.value;\r\n        setDescription(value);\r\n        localStorage.setItem('description', value);\r\n    }\r\n    const handleInput_description = (e) => {\r\n        const value = e.target.value;\r\n        setInput_description(value);\r\n        localStorage.setItem('input_description', value);\r\n    }\r\n    const handleOutput_description = (e) => {\r\n        const value = e.target.value;\r\n        setOutput_description(value);\r\n        localStorage.setItem('output_description', value);\r\n    }\r\n    const handleVisible = (e) => {\r\n        const value = e.target.value;\r\n        setVisible(value);\r\n        localStorage.setItem('visible', value);\r\n    }\r\n    const handleTime_limit = (e) => {\r\n        const value = e.target.value;\r\n        setTime_limit(value);\r\n        localStorage.setItem('time_limit', value);\r\n    }\r\n    const handleMemory_limit = (e) => {\r\n        const value = e.target.value;\r\n        setMemory_limit(value);\r\n        localStorage.setItem('memory_limit', value);\r\n    }\r\n    const handleDifficulty = (e) => {\r\n        const value = e.target.value;\r\n        setDifficulty(value);\r\n        localStorage.setItem('difficulty', value);\r\n    }\r\n    const onSubmit = async (formData) => {\r\n        console.log(formData);\r\n        formData.id = id;\r\n        formData.display_id = display_id;\r\n        formData.title = title;\r\n        formData.visible = true;\r\n        formData.time_limit = time_limit;\r\n        formData.memory_limit = memory_limit;\r\n        formData.difficulty = difficulty;\r\n        formData.tags = [1, 2];\r\n        formData.statement = description + '\\nInput\\n' + input_description + '\\nOutput\\n' + output_description;\r\n        formData.sample_test = sample_test;\r\n        if (!isNaN(id)) {\r\n            try {\r\n                const response = await admin_problemAPI.updateById({ formData, id });\r\n\r\n                if (response) {\r\n                    history.push('/admin/problem/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to put problem: \", error);\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                const response = await admin_problemAPI.createProblem(formData);\r\n                if (response) {\r\n                    history.push('/admin/problem/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to post problem: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n    function getDescription(str) {\r\n        const i = str.indexOf('\\nInput\\n')\r\n        if (i >= 0) {\r\n            return str.slice(0, i)\r\n        }\r\n        else return str\r\n    }\r\n    function getInput_description(str) {\r\n        const i = str.indexOf('\\nInput\\n')\r\n        const o = str.indexOf('\\nOutput\\n')\r\n        if (i >= 0 && o > i) {\r\n            return str.slice(i + 7, o)\r\n        }\r\n        else return ''\r\n    }\r\n    function getOutput_description(str) {\r\n        const o = str.indexOf('\\nOutput\\n')\r\n        if (o >= 0) {\r\n            return str.slice(o + 8)\r\n        }\r\n        else return ''\r\n    }\r\n    useEffect(() => {\r\n        if (!isNaN(id)) {\r\n            const fetchProblem = async () => {\r\n                try {\r\n                    const response = await admin_problemAPI.getById(id);\r\n                    setDisplay_id(response.data.display_id)\r\n                    setTitle(response.data.title);\r\n                    setDescription(getDescription(response.data.statement))\r\n                    setInput_description(getInput_description(response.data.statement))\r\n                    setOutput_description(getOutput_description(response.data.statement))\r\n                    setTime_limit(response.data.time_limit)\r\n                    setMemory_limit(response.data.memory_limit)\r\n                    setVisible(response.data.visible)\r\n                    setDifficulty(response.data.difficulty)\r\n                    if (JSON.stringify(response.data.sample_test) === JSON.stringify({})) {\r\n                        setSample_test([])\r\n                    }\r\n                    else {\r\n                        setSample_test(response.data.sample_test)\r\n                    }\r\n\r\n\r\n                } catch (error) {\r\n                    console.log(\"fail to alter problem: \", error);\r\n                }\r\n            };\r\n            fetchProblem();\r\n        }\r\n    }, [])\r\n\r\n    function handleInput(i, event) {\r\n        const values = [...sample_test];\r\n        values[i].input = event.target.value;\r\n        setSample_test(values);\r\n    }\r\n    function handleOutput(i, event) {\r\n        const values = [...sample_test];\r\n        values[i].output = event.target.value;\r\n        setSample_test(values);\r\n    }\r\n\r\n    function handleAdd() {\r\n        const values = [...sample_test];\r\n        values.push({ input: null, output: null });\r\n        setSample_test(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...sample_test];\r\n        values.splice(i, 1);\r\n        setSample_test(values);\r\n    }\r\n    return (\r\n        <div className=\"Edit-container\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"cp\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item className=\"cp-header cp-list\" >\r\n                            <h3>Edit problem</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"td-dis\">\r\n                                            <i style={{ color: 'red' }}>*</i>\r\n                                            <span> Display ID</span> <br /> <br />\r\n                                            <input type=\"text\" placeholder=\"Display ID\" className=\"cp-displayid\" required\r\n                                                value={display_id} onChange={(e) => { handleDisplay_id(e) }} />\r\n                                        </td>\r\n                                        <td className=\"td-til\">\r\n                                            <i style={{ color: 'red' }}>*</i>\r\n                                            <span> Title</span> <br /> <br />\r\n                                            <input type=\"text\" placeholder=\"Title\" className=\"cp-title\" required\r\n                                                value={title} onChange={(e) => { handleTitle(e) }} />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <i style={{ color: 'red' }}>*</i>\r\n                            <span> Description</span> <br /> <br />\r\n                            <Form.Control as=\"textarea\" rows={10} cols={150} required\r\n                                value={description} onChange={(e) => { handleDescription(e) }}>\r\n                            </Form.Control>\r\n                            {/* <Editor></Editor> */}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <i style={{ color: 'red' }}>*</i>\r\n                            <span> Input Description</span> <br /> <br />\r\n                            <Form.Control as=\"textarea\" rows={10} cols={150} required\r\n                                value={input_description} onChange={(e) => { handleInput_description(e) }}>\r\n                            </Form.Control>\r\n                            {/* <Editor></Editor> */}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <i style={{ color: 'red' }}>*</i>\r\n                            <span> Output Description</span> <br /> <br />\r\n                            <Form.Control as=\"textarea\" rows={10} cols={150} required\r\n                                value={output_description} onChange={(e) => { handleOutput_description(e) }}>\r\n                            </Form.Control>\r\n                            {/* <Editor></Editor> */}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <table>\r\n                                <tbody>\r\n\r\n                                    <tr>\r\n                                        <td className=\"td-time\">\r\n                                            <i style={{ color: 'red' }}>*</i>\r\n                                            <span> Time Limit (ms)</span> <br /> <br />\r\n                                            <input type=\"Number\" placeholder=\"Time Limit\" className=\"cp-time\" required\r\n                                                value={time_limit} onChange={(e) => { handleTime_limit(e) }} />\r\n                                        </td>\r\n                                        <td className=\"td-mem\">\r\n                                            <i style={{ color: 'red' }}>*</i>\r\n                                            <span> Memory limit (MB)</span> <br /> <br />\r\n                                            <input type=\"Number\" placeholder=\"Memory limit (MB)\" className=\"cp-mem\" required\r\n                                                value={memory_limit} onChange={(e) => { handleMemory_limit(e) }} />\r\n                                        </td>\r\n                                        <td className=\"td-dif\">\r\n                                            <i style={{ color: 'red' }}>*</i>\r\n                                            <span> Difficult</span> <br /> <br />\r\n                                            <Form.Control as=\"select\" size=\"sm\" custom value={difficulty} onChange={(e) => { handleDifficulty(e) }} >\r\n                                                <option value=\"Easy\">Easy</option>\r\n                                                <option value=\"Medium\">Medium</option>\r\n                                                <option value=\"Hard\">Hard</option>\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <br />\r\n                                    <tr>\r\n                                        <td>\r\n                                            <span> Visible</span> <br /> <br />\r\n                                            <Form.Control className=\"cp-visible\" as=\"select\" size=\"sm\" custom value={visible} onChange={(e) => { handleVisible(e) }} >\r\n                                                <option value={true}>true</option>\r\n                                                <option value={false}>false</option>\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                        <td>\r\n                                            <i style={{ color: 'red' }}>*</i>\r\n                                            <span> Language</span> <br /> <br />\r\n                                            <input className=\"cp-language\"\r\n                                                type=\"checkbox\"\r\n                                                name=\"Language\"\r\n                                                defaultChecked\r\n                                                value=\"C\"\r\n                                            />C\r\n                                            <input className=\"cp-language\"\r\n                                                type=\"checkbox\"\r\n                                                name=\"Language\"\r\n                                                value=\"C++\"\r\n                                                defaultChecked\r\n                                            />C++\r\n                                            <input className=\"cp-language\"\r\n                                                type=\"checkbox\"\r\n                                                name=\"Language\"\r\n                                                value=\"Java\"\r\n                                                defaultChecked\r\n                                            />Java\r\n                                            <input className=\"cp-language\"\r\n                                                type=\"checkbox\"\r\n                                                name=\"Language\"\r\n                                                value=\"Python\"\r\n                                                defaultChecked\r\n                                            />Python\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <i style={{ color: 'red' }}>*</i>\r\n                            <span> Sample</span> <br /> <br />\r\n                            <div className=\"Sample\" >\r\n                                {\r\n                                    sample_test.map((sample, idx) => {\r\n                                        return (\r\n\r\n                                            <div key={`${sample}-${idx}`}>\r\n\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <i style={{ color: 'red' }}>*</i>\r\n                                                        <span> Input</span> <br />\r\n                                                        <Form.Control as=\"textarea\" rows={5} cols={150}\r\n                                                            className=\"textArea\"\r\n                                                            placeholder=\"Enter input...\"\r\n                                                            value={sample.input || \"\"}\r\n                                                            required\r\n                                                            onChange={e => handleInput(idx, e)}\r\n                                                        >\r\n                                                        </Form.Control>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <i style={{ color: 'red' }}>*</i>\r\n                                                        <span> Output</span> <br />\r\n                                                        <Form.Control as=\"textarea\" rows={5} cols={150}\r\n                                                            className=\"textArea\"\r\n                                                            placeholder=\"Enter output...\"\r\n                                                            value={sample.output || \"\"}\r\n                                                            required\r\n                                                            onChange={e => handleOutput(idx, e)}\r\n                                                        >\r\n                                                        </Form.Control>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Button className=\"removeButton\" onClick={() => handleRemove(idx)}>\r\n                                                            X\r\n                                                        </Button>\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                <Button className=\"addButton\" onClick={() => handleAdd()}>\r\n                                    +\r\n                                </Button>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <span> Hint</span> <br /> <br />\r\n                            <Form.Control as=\"textarea\" rows={10} cols={150} >\r\n                            </Form.Control>\r\n                            {/* <Editor></Editor> */}\r\n                        </ListGroup.Item >\r\n                        <ListGroup.Item className=\"cp-list\">\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"td-type\">\r\n                                            <span> Type</span> <br /> <br />\r\n                                            <input type=\"radio\" name=\"type\" value=\"ACM\" /> ACM <br />\r\n                                            <input type=\"radio\" name=\"type\" value=\"IO\" /> IO\r\n                                        </td>\r\n                                        <td className=\"td-test \">\r\n                                            <span> Test Case</span> <br /> <br />\r\n                                            <input type=\"file\" />\r\n\r\n                                        </td>\r\n                                        <td className=\"td-io\">\r\n                                            <span> IO mode</span> <br /> <br />\r\n                                            <input type=\"radio\" name=\"io\" value=\"standard\" /> Standard IO <br />\r\n                                            <input type=\"radio\" name=\"io\" value=\"file\" /> File IO\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n                        </ListGroup.Item>\r\n                        <Button type=\"submit\" className=\"cp-btn\">Save</Button>\r\n\r\n                    </ListGroup>\r\n                </Form>\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Createproblem;","import React, { useState, useEffect } from 'react'\r\nimport { Card, ListGroup, Button, Form, FormControl } from 'react-bootstrap';\r\nimport './EditAnnouncement.scss';\r\nimport admin_announcementAPI from '../../../api/admin_announcementAPI';\r\nimport { useForm } from 'react-hook-form';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Switch from 'react-switch';\r\n\r\n//\r\nfunction EditAnnouncement({ match }) {\r\n    const id = match.params.id;\r\n    const [title, setTitle] = useState(() => {\r\n        const initTitle = localStorage.getItem('ann_title') || '';\r\n        return initTitle;\r\n    });\r\n    const [content, setContent] = useState(() => {\r\n        const initCotent = localStorage.getItem('ann_content') || '';\r\n        return initCotent;\r\n    });\r\n    const [visible, setVisible] = useState(true);\r\n    const { register, handleSubmit } = useForm();\r\n    const history = useHistory();\r\n\r\n    const handleTitle = (e) => {\r\n        const value = e.target.value;\r\n        setTitle(value);\r\n        localStorage.setItem('ann_title', value)\r\n    }\r\n    const handleContent = (e) => {\r\n        const value = e.target.value;\r\n        setContent(value);\r\n        localStorage.setItem('ann_content', value)\r\n    }\r\n    const onSubmit = async (formData) => {\r\n        formData.title = title;\r\n        formData.content = content;\r\n        formData.is_visible = visible;\r\n        if (!isNaN(id)) {\r\n            try {\r\n                const response = await admin_announcementAPI.updateById({ formData, id });\r\n\r\n                if (response) {\r\n                    history.push('/admin/announcement/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to put problem: \", error);\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                const response = await admin_announcementAPI.createAnnouncemt(formData);\r\n                if (response) {\r\n                    history.push('/admin/announcement/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to post problem: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (!isNaN(id)) {\r\n            const fetchAnnouncement = async () => {\r\n                try {\r\n                    const response = await admin_announcementAPI.getById(id);\r\n                    setTitle(response.data.title);\r\n                    setContent(response.data.content);\r\n                    setVisible(response.data.is_visible);\r\n                } catch (error) {\r\n                    console.log(\"fail to alter announcement: \", error);\r\n                }\r\n            };\r\n            fetchAnnouncement();\r\n        }\r\n    }, [])\r\n    const updateVisibility = () => {\r\n        setVisible(!visible);\r\n    }\r\n    return (\r\n        <div className=\"announcements-container\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"edit_form\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\">Edit</Card.Header>\r\n                    <Card.Body>\r\n                        <Form onSubmit={handleSubmit(onSubmit)} className=\"announForm\">\r\n                            <ListGroup.Item className=\"announForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>Title</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    {...register(\"title\")}\r\n                                    value={title}\r\n                                    onChange={(e) => { handleTitle(e) }}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"announForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span> Content</span> <br /> <br />\r\n                                <Form.Control as=\"textarea\" rows={10} cols={150} {...register(\"content\")}\r\n                                    value={content} onChange={(e) => { handleContent(e) }}>\r\n                                </Form.Control>\r\n                            </ListGroup.Item>\r\n                            <br />\r\n                            <label htmlFor=\"\">Visible</label>\r\n                            <br />\r\n                            <Switch checked={visible} onChange={() => updateVisibility()} />\r\n                            <br />\r\n                            <hr />\r\n                            <Button type=\"submit\" className=\"save_button\">Save</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EditAnnouncement;\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Form, ListGroup } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport './Problem_detail.scss';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport oj_problemAPI from '../../../api/oj_problemAPI';\r\nimport Navbar from '../../Navbar'\r\nimport { AiOutlineAlignLeft } from 'react-icons/ai'\r\nimport { GrCircleInformation } from 'react-icons/gr'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\nrequire('codemirror/mode/xml/xml.js');\r\nrequire('codemirror/mode/python/python.js');\r\nrequire('codemirror/mode/clike/clike.js');\r\nrequire('codemirror/mode/javascript/javascript.js');\r\n\r\nfunction Problem_detail({ match }) {\r\n    // console.log(\"render\")\r\n\r\n    const id = match.params.id;\r\n    const [problem, setProblem] = useState([]);\r\n    const history = useHistory();\r\n    //check login\r\n    const [checkLogin, setCheckLogin] = useState(false);\r\n    //check content\r\n    const [content, setContent] = useState('');\r\n    const { register, handleSubmit, error } = useForm();\r\n    const [sample_test, setSample_test] = useState([])\r\n    //\r\n    const [language, setLanguage] = useState('Python3');\r\n    function onChangeUploadFile(e) {\r\n        let files = e.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsText(files[0]);\r\n        reader.onload = (e) => {\r\n            setContent(e.target.result);\r\n        }\r\n\r\n    }\r\n    function onChangeTextarea(editor, data, value) {\r\n        setContent(value);\r\n    }\r\n    const onSubmit = async (data) => {\r\n        data.content = content;\r\n        data.problem_id = parseInt(data.problem_id);\r\n        try {\r\n            const response = await oj_statusAPI.postProblem(data);\r\n            if (response) {\r\n                history.push('/status');\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Fail to post problem: \", error);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchProblem_detail = async () => {\r\n            const response = await oj_problemAPI.getById(id);\r\n            setProblem(response.data);\r\n            if (JSON.stringify(response.data.sample_test) === JSON.stringify({})) {\r\n                setSample_test([])\r\n            }\r\n            else {\r\n                setSample_test(response.data.sample_test)\r\n            }\r\n            //check login\r\n            if (localStorage.getItem('token') !== null) setCheckLogin(true);\r\n            else setCheckLogin(false);\r\n        };\r\n        fetchProblem_detail();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return () => console.log('unmounting...');\r\n    }, [content])\r\n    function getDescription(str) {\r\n        str = String(str)\r\n        let i = str.indexOf('Input')\r\n        if (i >= 0) {\r\n            return str.slice(0, i)\r\n        }\r\n        else return str\r\n    }\r\n    function getInput_description(str) {\r\n        str = String(str)\r\n        let i = str.indexOf('Input')\r\n        let o = str.indexOf('Output')\r\n        if (i >= 0 && o > i) {\r\n            return str.slice(i + 6, o)\r\n        }\r\n        else return ''\r\n    }\r\n    function getOutput_description(str) {\r\n        str = String(str)\r\n        let o = str.indexOf('Output')\r\n        if (o >= 0) {\r\n            return str.slice(o + 7)\r\n        }\r\n        else return ''\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"problem_detail-flex-container pages-container\">\r\n                <div className=\"problem-main\">\r\n                    <Card className=\"problem-main__item\">\r\n                        <Card.Header as=\"h3\">{problem.title}</Card.Header>\r\n                        <Card.Body>\r\n                            <h2 className=\"title\">{problem.title}</h2>\r\n                            <p className=\"time_limit\"><strong>Time limit:</strong> {problem.time_limit} ms</p>\r\n                            <p className=\"memory_limit\"><strong>Memory limit:</strong> {problem.memory_limit} mb</p>\r\n                            <br />\r\n                            <strong>Problem Description:</strong>\r\n                            <p className=\"description\">{getDescription(problem.statement)}</p>\r\n                            <br /> <br />\r\n                            <strong>Input Description:</strong>\r\n                            <br />\r\n                            <p className=\"input_description\">{getInput_description(problem.statement)}</p>\r\n                            <br /> <br />\r\n                            <strong>Output Description:</strong>\r\n                            <br />\r\n                            <p className=\"output_description\">{getOutput_description(problem.statement)}</p>\r\n                            <br /> <br />\r\n                            <strong>Sample Test:</strong>\r\n                            <br />\r\n                            {\r\n                                sample_test.map((sample, idx) => {\r\n                                    return (\r\n\r\n                                        <div key={`${sample}-${idx}`}>\r\n\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <span> Input {idx+1}</span> <br />\r\n                                                    <Form.Control  as=\"textarea\" cols={150} readOnly\r\n                                                        className=\"textArea\"\r\n                                                        value={sample.input || \"\"}\r\n                                                    >\r\n                                                    </Form.Control>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span> Output {idx+1}</span> <br />\r\n                                                    <Form.Control as=\"textarea\" cols={150} readOnly\r\n                                                        className=\"textArea\"\r\n                                                        value={sample.output || \"\"}\r\n                                                    >\r\n                                                    </Form.Control>\r\n                                                </td>\r\n\r\n                                            </tr>\r\n\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n\r\n\r\n\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card className=\"problem-main__item\">\r\n                        <Card.Body>\r\n                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className='submit-nav'>\r\n                                    <div className=\"dropdown-languege submit-nav__item\">\r\n                                        <label htmlFor=\"languege\">Language: </label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" custom {...register(\"language\")} onChange={(e) => setLanguage(e.target.value)}>\r\n                                            <option value=\"Python3\">Python3</option>\r\n                                            <option value=\"Python2\">Python2</option>\r\n                                            <option value=\"Java\">Java</option>\r\n                                            <option value=\"Cpp\">C++</option>\r\n                                            <option value=\"C\">C</option>\r\n                                        </Form.Control>\r\n                                        <br /><br />\r\n                                    </div>\r\n                                    <div className=\"problem-id submit-nav__item\">\r\n                                        <Form.Label></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"hidden\"\r\n                                            size=\"sm\"\r\n                                            value={id}\r\n                                            {...register(\"problem_id\")}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"upload_file\">\r\n                                        <Form.File id=\"formcheck-api-regular\">\r\n                                            <Form.File.Input onChange={(e) => { onChangeUploadFile(e) }} />\r\n                                        </Form.File>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"editor-container\">\r\n                                    <CodeMirror\r\n                                        value={content}\r\n                                        onChange={(editor, data, value) => { onChangeTextarea(editor, data, value) }}\r\n                                        options={{\r\n                                            matchBrackets: true,\r\n                                            styleActiveLine: true,\r\n                                            theme: \"material\",\r\n                                            mode: {\r\n                                                'Python3' : 'python',\r\n                                                'Python2' : 'python',\r\n                                                'Java': 'text/x-java',\r\n                                                'C': 'text/x-csrc',\r\n                                                'Cpp': 'text/x-c++src',\r\n                                            }[language],\r\n                                            lineNumbers: true,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <br />\r\n                                <div className=\"problem-main__footer\">\r\n                                    {checkLogin === true ? (\r\n                                        <Button variant=\"primary\" type=\"submit\" id=\"submit-button\" >Submit</Button>\r\n                                    ) :\r\n                                        (\r\n                                            <Button href=\"#\" variant=\"secondary\" disabled id=\"disable-button\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        )}\r\n                                </div>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"right-column\">\r\n                    <Card className=\"submit-card right-column__item\">\r\n                        <Card.Body>\r\n                            <Link to='/status' className='to_statusPage_card'>\r\n                                <AiOutlineAlignLeft className=\"to_statusPage_card-item \"/>\r\n                                <p>Submissions</p>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"problem-information\">\r\n                        <Card className=\"right-column__item\">\r\n                            <Card.Header className=\"problem-information_header\"><GrCircleInformation /><p> Imformation</p></Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Id</p>\r\n                                    <p>{problem.id}</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Time Limit</p>\r\n                                    <p>{problem.time_limit} ms</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Memory Limit</p>\r\n                                    <p>{problem.memory_limit} mb</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Create by</p>\r\n                                    <p>{problem.author}</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Level</p>\r\n                                    <p>{problem.difficulty}</p>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Problem_detail\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport '../Page.scss';\r\nimport './News.scss';\r\nimport { Card } from 'react-bootstrap';\r\nimport oj_announcementAPI from '../../../api/oj_announcementAPI';\r\nimport Announcement from '../Home/Announcement';\r\nimport Search from '../../Components/Search';\r\n\r\nfunction News() {\r\n    const [announcement, setAnnouncement] = useState([]);\r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '',\r\n\r\n    });\r\n    useEffect(() => {\r\n        const fetchAnnouncement = async () => {\r\n            try {\r\n                const response = await oj_announcementAPI.getAll(filters);\r\n                setAnnouncement(response.data);\r\n            } catch (error) {\r\n                console.log('fail to announcement: ', error);\r\n            }\r\n        }\r\n        fetchAnnouncement();\r\n    }, [filters])\r\n    //serach process\r\n    function handleSearchForm(newValue) {\r\n        setFilters({\r\n            ...filters,\r\n            contains: newValue,\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"pages-container\">\r\n                <div className=\"news-container\">\r\n                    <Card className=\"news-card\">\r\n                        <Card.Header as=\"h3\" className=\"announcement-header\">\r\n                            Annoucement\r\n                            <div className=\"news-feartures\">\r\n                                <div className=\"news-feartures__items\">\r\n                                    <Search onSubmit={handleSearchForm} />\r\n                                </div>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"card-container\">\r\n\r\n                                {\r\n                                    announcement.map(annou => {\r\n                                        return <Announcement title={annou.title}\r\n                                            content={annou.content}\r\n                                            creation_time={annou.creation_time}\r\n                                            author={annou.author} key={annou.id}\r\n                                            id={annou.id} />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nexport const PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => \r\n            localStorage.getItem('role') === \"Super Admin\" ||   localStorage.getItem('role') === \" Admin\" ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to={{pathname: '/', state: {from: props.location}}}/>\r\n            )\r\n        }\r\n    />\r\n);\r\n","import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../../Navbar';\r\nimport { Card } from 'react-bootstrap';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport './Status_detail.scss';\r\n//code mirror editor \r\nimport { UnControlled  as CodeMirror } from 'react-codemirror2';\r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\nrequire('codemirror/mode/xml/xml.js');\r\nrequire('codemirror/mode/javascript/javascript.js');\r\nrequire('codemirror/mode/python/python.js');\r\nrequire('codemirror/mode/clike/clike.js');\r\n\r\n\r\nfunction Status_detail({ match }) {\r\n    const id = match.params.id;\r\n    const result = {\r\n        \"Accepted\": \"Accepted\",\r\n        \"Wrong Answer\": \"Wrong_answer\",\r\n        \"Runtime Error\": \"Runtime_error\",\r\n        \"New\": \"New\",\r\n        \"Compilation Error\": \"Compile_error\",\r\n        \"System Error\": \"System_error\",\r\n        \"Judged\": \"Judged\",\r\n        \"Judging\": \"Judging\"\r\n\r\n    };\r\n    const [status_detail, setStatus_detail] = useState({});\r\n    useEffect(() => {\r\n        const fetchStatus_detail = async () => {\r\n            const response = await oj_statusAPI.getById(id);\r\n            setStatus_detail(response.data);\r\n        };\r\n        fetchStatus_detail();\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"status_details-container pages-container\">\r\n                <h2>Submission #{id}</h2>\r\n                <hr />\r\n                <div className=\"source-code status_details-container__item\">\r\n                    <Card>\r\n                        <Card.Header as=\"h3\">Source code</Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"editor-container\">\r\n                                <CodeMirror\r\n                                    value={status_detail.content}\r\n                                    options={{\r\n                                        matchBrackets: true,\r\n                                        styleActiveLine: true,\r\n                                        theme: \"material\",\r\n                                        mode: {\r\n                                            'PyPy3': 'python',\r\n                                            'PyPy': 'python',\r\n                                            'Python3': 'python',\r\n                                            'Python2': 'python',\r\n                                            'Java': 'text/x-java',\r\n                                            'C': 'text/x-csrc',\r\n                                            'Cpp': 'text/x-c++src',\r\n                                        }[status_detail.language],\r\n                                        lineNumbers: true,\r\n                                        readOnly: 'nocursor'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"sumitssion_infor status_details-container__item\">\r\n                    <Card>\r\n                        <Card.Header as=\"h3\" >Submission Info</Card.Header>\r\n                        <Card.Body>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Submission Time</td>\r\n                                        <td>{status_detail.submit_time}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Task</td>\r\n                                        <td>{status_detail.problem}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Language</td>\r\n                                        <td>{status_detail.language}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Status</td>\r\n                                       \r\n                                        <td>\r\n                                            <div className={`verdict-text ${result[status_detail.verdict]}`}>{status_detail.verdict}</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status_detail\r\n","import React from 'react'\r\nimport './Social_icons.scss';\r\nfunction Social_icon() {\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-facebook-f\"></i></div>\r\n                    <span>Facebook</span>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-twitter\"></i></div>\r\n                    <span>Twitter</span>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-github\"></i></div>\r\n                    <span>Instagram</span>\r\n                </div>\r\n\r\n\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-youtube\"></i></div>\r\n                    <span>YouTube</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Social_icon\r\n","import React from 'react';\r\nimport Social_icon from '../../Components/Social_icons/Social_icon';\r\nimport './Profile.scss';\r\nfunction Profile() {\r\n    const userInformation = JSON.parse(localStorage.getItem('userInformation'));\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper pages-container\">\r\n                <div className=\"right\">\r\n                    <div className=\"info\">\r\n                        <h3>Information</h3>\r\n                        <div className=\"info_data\">\r\n                            <div className=\"data\">\r\n                                <h4>Email</h4>\r\n                                <p>{userInformation.email}</p>\r\n                            </div>\r\n                            <div className=\"data\">\r\n                                <h4>User ID</h4>\r\n                                <p>{userInformation.id}</p>\r\n                            </div>\r\n                            <div className=\"data\">\r\n                                <h4>First name</h4>\r\n                                <p>{userInformation.first_name}</p>\r\n                            </div>\r\n                            <div className=\"data\">\r\n                                <h4>Last name</h4>\r\n                                <p>{userInformation.last_name}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Social\">\r\n                        <h3>Social</h3>\r\n                        <div className=\"social_media\">\r\n                            <Social_icon/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form , Button} from 'react-bootstrap'\r\nimport oj_profileAPI from '../../../api/oj_profileAPI';\r\nimport './EditProfile.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logoutUser } from '../../UserSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction EditProfile() {\r\n    const [user, setUser] = useState([]);\r\n    const { register, handleSubmit } = useForm();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () =>{\r\n            const response = await oj_profileAPI.getUserInformation();\r\n            setUser(response.data);\r\n        }\r\n        fetchUserData();\r\n    }, [])\r\n    const onSubmit = (data) =>{\r\n        try {\r\n            const fetchUserData = async () => {\r\n                const response = await oj_profileAPI.editUserInformation(data);\r\n                setUser(response.data);\r\n                if(response){\r\n                    localStorage.setItem('userInformation', JSON.stringify(response.data));\r\n                    // window.location.reload();\r\n                }\r\n            }\r\n            fetchUserData();\r\n        } catch (error) {\r\n            console.log(\"fail to change user data\", error);\r\n        }\r\n    }\r\n    \r\n    const onSubmitPassword = data =>{\r\n        try {\r\n            const fetchUserData = async () => {\r\n                const response = await oj_profileAPI.changePassword(data);\r\n                if (response) {\r\n                    dispatch(logoutUser());\r\n                    toast.success('goodbye!', {\r\n                        position: toast.POSITION.BOTTOM_CENTER,\r\n                        autoClose: 1500\r\n                    });\r\n                    history.push('/');\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('role');\r\n                    localStorage.removeItem('username');\r\n                    localStorage.removeItem('userId');\r\n                    localStorage.removeItem('userInformation');\r\n                }\r\n                console.log(response.status);\r\n            }\r\n            fetchUserData();\r\n        } catch (error) {\r\n            console.log(\"fail to change user data\", error.response);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"panel pages-container\">\r\n                <div className=\"setting-main\">\r\n                    <div className=\"setting-container\">\r\n                        <div className=\"left\">\r\n                            <div className=\"left-items\">\r\n                                <p className=\"section-title\">Change User Name</p>\r\n                                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Form.Group >\r\n                                        <Form.Label>User name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={user.username} {...register(\"username\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>First name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={user.first_name} {...register(\"first_name\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Last name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={user.last_name} {...register(\"last_name\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>  \r\n                        </div>\r\n                        <div className=\"middle\">\r\n\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <div className=\"right-items\">\r\n                                <p className=\"section-title\">Change Password</p>\r\n                                <Form onSubmit={handleSubmit(onSubmitPassword)}>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Current password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"Current password\" {...register(\"old_password\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group >\r\n                                        <Form.Label>New Password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"New Password\" {...register(\"new_password1\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group >\r\n                                        <Form.Label>Confirm New Password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"New Password\" {...register(\"new_password2\")}/>\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile\r\n","import React, {useState, useEffect} from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport { FaCloudUploadAlt } from 'react-icons/fa'\r\nimport Profile from '../Profile/Profile'\r\nimport './Setting.scss'\r\nimport { Link } from 'react-router-dom';\r\nimport EditProfile from '../EditProfile/EditProfile';\r\nimport oj_profileAPI from '../../../api/oj_profileAPI';\r\nimport { Button } from 'react-bootstrap';\r\nfunction Setting() {\r\n    const [userData, setUserData] = useState(JSON.parse(localStorage.getItem('userInformation')));\r\n    const [toAccount, setToAccount] = useState(false);\r\n    const [selectFile, setSelectFile] = useState(null);\r\n    const openAccountPage = () =>{\r\n        setToAccount(true);\r\n    }\r\n    const openProfilePage = () =>{\r\n        setToAccount(false);\r\n    }\r\n    const onChangeUploadFile = (e) =>{\r\n        setSelectFile(e.target.files[0]);        \r\n    }\r\n    const uploadFile = () => {\r\n        const formData = new FormData();\r\n        formData.append('profile_pic', selectFile);\r\n        const updateAvatar = async () => {\r\n            const response = await oj_profileAPI.uploadAvatar(formData);\r\n            if(response){\r\n                setUserData(response.data);\r\n                setSelectFile(null);\r\n            }\r\n        }\r\n        updateAvatar();\r\n    }\r\n    useEffect(() => {\r\n        const fetchUserData = async () =>{\r\n            const response = await oj_profileAPI.getUserInformation(selectFile);\r\n            setUserData(response.data);\r\n        }\r\n        fetchUserData();\r\n        return () => {\r\n        }\r\n    }, [userData.profile_pic])\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"setting_container\">\r\n                <div className=\"card_container\">\r\n                    <div className=\"sidebar pages-container\">\r\n                        <div className=\"save-button\">\r\n                            {selectFile === null ? <div style={{ padding: \"10px 0\" }}></div> : <Button variant=\"light\" size=\"sm\" onClick={() => uploadFile()}>save</Button>}\r\n                        </div>\r\n                        <center>\r\n                            <div className=\"upload-img\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"avatar-upload\">\r\n                                        <div className=\"avatar-edit\">\r\n                                            <input type='file' id=\"imageUpload\" accept=\".png, .jpg, .jpeg\" onChange={(e) =>{onChangeUploadFile(e)}}/>\r\n                                            <label htmlFor=\"imageUpload\"><FaCloudUploadAlt/></label>\r\n                                        </div>\r\n                                        <div className=\"avatar-preview\">\r\n                                            <img src={userData.profile_pic} className=\"profile_img\" style={{style: \"background-image\"}} alt=\"hiu\" />\r\n                                        </div>\r\n                                        <br/>\r\n                                        <h4>{localStorage.getItem(\"username\")}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </center>\r\n                        <a href=\"#\" onClick={() => { openProfilePage() }}><i className=\"far fa-id-badge\"></i><span>Profile</span></a>\r\n                        <a href=\"#\" onClick={() => { openAccountPage() }}><i className=\"fas fa-user-cog\"></i><span>Account</span></a>\r\n                        <div className=\"sidebar-item\">\r\n                            <Link className=\"profile_submission\" to={`status/?filter_by=author_id&author_id=${localStorage.getItem(\"userId\")}`}>\r\n                                <i className=\"fas fa-history\"></i>\r\n                                 Submission\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right_container \">\r\n                        {toAccount ? <EditProfile/> : <Profile />}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;\r\n","import React, { useEffect, useState } from 'react'\r\nimport AdminNavbar from '../../AdminNavbar'\r\nimport Sidebar from '../../Sidebar'\r\nimport { Card, ListGroup, Button, Form, FormControl } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport './EditUser.scss';\r\nimport admin_usersAPI from '../../../api/admin_usersAPI';\r\nimport { useHistory } from 'react-router';\r\nfunction EditUser({match}) {\r\n    const id = match.params.id;\r\n    const { register, handleSubmit } = useForm();\r\n    const [userData, setUserData] = useState([])\r\n    const history = useHistory();\r\n    //sent data\r\n    const onSubmit = async (data) => {\r\n        if(!isNaN(id)){\r\n            try {\r\n                const response = await admin_usersAPI.editUser(data, id);\r\n                if (response) {\r\n                    history.push('/admin/users/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to put problem: \", error);\r\n            }\r\n        }\r\n        else{\r\n            try {\r\n                const response = await admin_usersAPI.createUser(data);\r\n                if (response) {\r\n                    history.push('/admin/users/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to post problem: \", error);\r\n            }\r\n        }\r\n    }\r\n    //\r\n    useEffect(() => {\r\n        if (!isNaN(id)) {\r\n            const fetchAnnouncement = async () => {\r\n                try {\r\n                    const response = await admin_usersAPI.getById(id);\r\n                    setUserData(response.data);\r\n                } catch (error) {\r\n                    console.log(\"fail to alter announcement: \", error);\r\n                }\r\n            };\r\n            fetchAnnouncement();\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"user-conatiner\">\r\n            <AdminNavbar/>\r\n            <Sidebar/>\r\n            <div className=\"edit-form\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\" >\r\n                        Edit\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form className=\"UserForm\" onSubmit={handleSubmit(onSubmit)}>\r\n                            <ListGroup.Item className=\"UserForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>User name</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={userData.username}\r\n                                    {...register(\"username\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"UserForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>Email</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={userData.email}\r\n                                    {...register(\"email\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"UserForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>password</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    {...register(\"password\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <div className=\"UserForm-items\" >\r\n                                <div className=\"user-select\">\r\n                                    <label htmlFor=\"Admin type\">Admin type: </label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom {...register(\"admin_type\")} >\r\n                                        <option value=\"none\" defaultValue disabled hidden >{userData.admin_type}</option>\r\n                                        <option value=\"Regular Users\">Regular Users</option>\r\n                                        <option value=\"Admin\">Admin</option>\r\n                                        <option value=\"Super Admin\">Super Admin</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className=\"user-select\">\r\n                                    <label htmlFor=\"Is staff\">Is staff: </label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom {...register(\"is_staff\")}>\r\n                                        <option value=\"none\" defaultValue disabled hidden >{userData.is_staff}</option>\r\n                                        <option value=\"true\">True</option>\r\n                                        <option value=\"false\">Flase</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className=\"user-select\">\r\n                                    <label htmlFor=\"Problem permission\">Problem permission: </label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom {...register(\"problem_permission\")}>\r\n                                        <option value=\"none\" defaultValue disabled hidden >{userData.problem_permission}</option>\r\n                                        <option value=\"None\">None</option>\r\n                                        <option value=\"Own\">Own</option>\r\n                                        <option value=\"All\">All</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n           \r\n                            </div>\r\n            \r\n                            <br />\r\n                            <Button type=\"submit\" className=\"save_button UserForm-items\">Save</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;\r\n// chưa css","import React from 'react'\r\nimport './App.css';\r\nimport { HashRouter, BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport About from './users/Pages/About/About';\r\nimport Home from './users/Pages/Home/Home';\r\nimport Problem from './users/Pages/Problem/Problem';\r\nimport Status from './users/Pages/Status/Status';\r\nimport ProblemList from './admin/Problems/ProblemList/ProblemList';\r\nimport User from './admin/General/User/User';\r\nimport Announcement from './admin/General/Announcement/Announcement';\r\nimport Dashboard from './admin/Dashboard/Dashboard';\r\nimport CreateProblem from './admin/Problems/CreateProblem/CreateProblem'\r\n//test \r\nimport EditAnnouncement from './admin/General/Announcement/EditAnnouncement';\r\nimport Problem_detail from './users/Pages/Problem/Problem_detail';\r\nimport News from './users/Pages/News/News';\r\n//Private Route\r\nimport { PrivateRoute } from './helpers/PrivateRoute';\r\n//\r\nimport Status_detail from './users/Pages/Status/Status_detail';\r\nimport Setting from './users/Pages/Setting/Setting';\r\nimport EditUser from './admin/General/User/EditUser'\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={Home}></Route>\r\n          <Route path='/home' exact component={Home}></Route>\r\n          <Route path='/about' exact component={About}></Route>\r\n          <Route path='/problem' exact component={Problem}></Route>\r\n          <Route path='/problem/:id' exact component={Problem_detail}></Route>\r\n          <Route path='/status' exact component={Status}></Route>\r\n          <Route path='/status/:id' exact component={Status_detail}></Route>\r\n          <Route path='/news' exact component={News} />\r\n          <Route path='/profile' exact component={Setting} />\r\n\r\n          <PrivateRoute exact component={Dashboard} path='/admin' />\r\n          <PrivateRoute exact component={Dashboard} path='/admin/dashboard' />\r\n          <PrivateRoute exact component={User} path='/admin/user' />\r\n          <PrivateRoute exact component={ProblemList} path='/admin/problem' />\r\n          <PrivateRoute exact component={Announcement} path='/admin/announcement' />\r\n          <PrivateRoute exact component={CreateProblem} path='/admin/problem/create' />\r\n          <PrivateRoute exact component={CreateProblem} path='/admin/problem/:id' />\r\n          <PrivateRoute exact component={EditAnnouncement} path='/admin/announcement/:id' />\r\n          <PrivateRoute exact component={EditAnnouncement} path='/admin/announcement/new' />\r\n          <PrivateRoute exact component={EditUser} path='/admin/users/:id' />\r\n          <PrivateRoute exact component={EditUser} path='/admin/users/new' />\r\n        </Switch>\r\n      </Router>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { userSlice } from '../users/UserSlice';\r\nimport { adminSlice } from '../admin/AdminSlice';\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userSlice.reducer,\r\n        admin: adminSlice.reducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}