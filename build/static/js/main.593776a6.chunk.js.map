{"version":3,"sources":["api/axiosClient.js","api/loginAPI.js","api/registerAPI.js","api/logoutAPI.js","users/UserSlice.js","users/Pages/Register/Register.js","users/Pages/Login/Login.js","public/Logo_dhbkdn.jpg","users/Navbar.js","users/Pages/About/About.js","api/oj_announcementAPI.js","users/Pages/Home/Announcement.js","public/Background.mp4","api/oj_profileAPI.js","users/Pages/Profile/profileSlice.js","users/Pages/Home/Home.js","api/oj_problemAPI.js","users/Pages/Problem/Problem.js","api/oj_statusAPI.js","constant/SubmissionVerdict.js","users/Pages/Status/Status.js","admin/AdminNavbar.js","admin/sidebar.png","public/logo.jpg","api/adminJudgeServerAPI.js","admin/JudgeServer/JudgeServer.js","admin/Sidebar.js","api/admin_problemAPI.js","api/admin_usersAPI.js","api/admin_announcementAPI.js","admin/AdminSlice.js","admin/Problems/ProblemList/ProblemList.js","admin/General/User/User.js","admin/General/User/CreateUser.js","admin/General/User/UserCreationLog.js","admin/General/Announcement/Announcement.js","admin/Dashboard/Dashboard.js","admin/Problems/CreateProblem/CreateProblem.js","admin/General/Announcement/EditAnnouncement.js","users/Pages/Problem/Problem_detail.js","users/Components/Search.js","users/Components/TextFieldForm.js","users/Pages/News/News.js","helpers/PrivateRoute.js","helpers/PrivateRouteSAdmin.js","users/Pages/Status/StatusDetailComponent/SDSource.js","users/Pages/Status/StatusDetailComponent/SDSummary.js","users/Pages/Status/StatusDetailComponent/SDTestcase.js","users/Pages/Status/Status_detail.js","users/Components/Social_icons/Social_icon.js","users/Pages/Profile/Profile.js","users/Pages/EditProfile/EditProfile.js","users/Pages/Setting/Setting.js","admin/General/User/EditUser.js","users/Pages/NotFound/NotFound.js","admin/JudgeServer/JudgeServerDetail.js","admin/JudgeServer/NewJudgeServerForm.js","api/adminStatusAPI.js","admin/Submission/SubmissionList.js","admin/Submission/StatusDetailComponent/SDSource.js","admin/Submission/StatusDetailComponent/SDSummary.js","admin/Submission/StatusDetailComponent/SDTestcase.js","admin/Submission/SubmissionDetail.js","App.js","app/store.js","index.js"],"names":["axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","data","error","status","includes","detail","localStorage","removeItem","setItem","window","location","href","error_messsage","key","toast","position","POSITION","BOTTOM_CENTER","autoClose","loginAPI","login","post","registerAPI","register","logoutAPI","logout","getItem","get","loginUser","createAsyncThunk","thunkAPI","username","password","token","user","admin_type","id","JSON","alert","console","log","rejectWithValue","json","registerUser","logoutUser","userSlice","createSlice","name","initialState","email","isLoginSuccess","isLoginError","isRegisterSuccess","isRegisterError","isFeching","errorMessage","reducers","clearState","state","userClear","userInformation","extraReducers","fulfilled","payload","pending","rejected","isSuccess","isError","actions","userSelector","Register","props","useState","show","setShow","handleClose","dispatch","useDispatch","history","useHistory","useSelector","useForm","handleSubmit","useEffect","success","push","registerModal","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","password_again","Group","controlId","Control","type","placeholder","Text","className","Button","variant","style","lineheight","onClick","Login","configure","showRegis","setShowRegis","LoginModal","Label","Navbar","check","setCheck","click","setClick","setButton","addEventListener","innerHeight","to","src","logo","alt","DropdownButton","title","Dropdown","Item","Divider","About","Card","as","trigger","easing","Footer","oj_announcementAPI","getAll","paramString","url","Announcement","time","author","creation_time","content","contentModal","dialogClassName","aria-labelledby","size","centered","Date","toString","replace","toDateString","is_visible","oj_profileAPI","getUserInformation","getById","editUserInformation","Object","assign","put","uploadAvatar","changePassword","userProfile","profileSlice","profile_pic","authored_problem","first_name","last_name","last_login","solved_problem","profileSelector","profile","Home","announcement","setAnnouncement","fetchAnnouncement","autoPlay","loop","muted","Background","map","annou","author_name","oj_problemAPI","Problem","problems","setProblems","filter_by","sort_by","page","filters","setFilters","maxPage","setMaxPage","sortBy","setSortBy","setSortByCriteria","crit","charAt","handlePageClick","selected","maxpage","fetchProblems","searchContent","setSearchContent","searchAuthor","setSearchAuthor","searchDifficulty","setSearchDifficulty","onChange","e","target","value","undefined","preventDefault","newFilter","contains","difficulty","length","problem","display_id","date","created","toLocaleDateString","total_submission","correct_submission","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName","activeClassName","breakLabel","breakClassName","oj_statusAPI","postProblem","getByAuthor","authorId","VERDICT_TO_CLASSNAME","V2C","v","VERDICT_SHORT","VS","Status","URL","problem_title","searchParams","setStatus","filter","fetchStatus","searchVerdict","setSearchVerdict","searchLanguage","setSearchLanguage","verdict","language","stat","problem_id","Math","floor","memory","submit_time","AdminNavbar","uname","disabled","adminJudgeServerAPI","deleteById","delete","updateById","formData","addJudgeServer","JudgeServer","jservers","setJServers","fetch","OnDeleteHandler","confirm","resp","jserver","hostname","socketaddress","pending_tasks","Sidebar","innerWidth","collapsed","setCollapsed","image","sidebarImage","Logo","iconShape","icon","admin_problemAPI","createProblem","updateVisible","getAllProblemTags","admin_usersAPI","createUser","editUser","admin_announcementAPI","createAnnouncemt","visible","setVisible","UserList","AnnouncementList","deleteAnnouncement","deleteUser","deleteProblem","adminSlice","admin_announcements","admin_users","admin_problems","isFetchUsersSuccess","isFetchAnnouncementsSuccess","deleteSusscess","adminSelector","admin","ProblemList","checked","height","width","newProblem","update","colSpan","User","users","setUsers","handleDeleteUser","fetchAll","searchUserType","setSearchUserType","create_time","LS_ACC_CREATION_DATA","LS_PREFIX_LIST","ListTypeCreationForm","formSubmitHandler","rows","cols","formUnListChange","formEmListChange","formFnListChange","formLnListChange","string","splitByLine","split","user_gen_type","username_list","email_list","fname_list","lname_list","forEach","x","getFormData","getRandomInteger","b","mn","min","mx","max","round","random","MacroTypeCreationForm","prefix","setPrefix","postfix","setPostfix","userCnt","setUserCnt","i","parseInt","err","username_prefix","username_postfix","create_count","getCreationLogFromLocalStorage","arr","parse","reverse","CreateUser","match","uselessValue","setUselessValue","tmpid","when","genType","setGenType","getFormComponentFromType","item","toLocaleString","UserCreateionLog","obj","announcements","setAnnouncements","fetchProblemByFilters","handleVisible","res","newann","ann","Dashboard","Createproblem","cardTitle","formType","setDisplay_id","setTitle","description","setDescription","input_description","setInput_description","output_description","setOutput_description","time_limit","setTime_limit","memory_limit","setMemory_limit","setDifficulty","sample_test","setSample_test","currentTestZipFile","setCurrentTestZipFile","hiddenTestZip","setHiddenTestZip","getDescription","str","indexOf","slice","getInput_description","o","getOutput_description","statement","test_zip","tagIDs","tags","currTags","tag","tag_name","setTags","Array","isArray","fetchProblem","tg","suggestion","String","setTagSuggestions","fetchProblemTag","tagSuggestions","handleOnClearAll","deleteFileCheckbox","setDeleteFileCheckBox","FormData","append","taggings","sendingSampleTests","sample","input","output","reload","ListGroup","required","handleDisplay_id","handleTitle","handleDescription","handleInput_description","handleOutput_description","handleTime_limit","handleMemory_limit","custom","handleDifficulty","idx","event","values","handleInput","handleOutput","splice","handleRemove","handleAdd","files","Check","label","ReactTags","handleDelete","index","handleAddition","code","len","charCodeAt","isAlphaNumeric","toLowerCase","handleDrag","currPos","newPos","newTags","onClearAll","labelField","suggestions","minQueryLength","maxLength","autofocus","readOnly","allowUnique","allowDragDrop","inline","allowAdditionFromPaste","clearAll","EditAnnouncement","setContent","isNaN","color","FormControl","aria-label","aria-describedby","handleContent","htmlFor","require","LCSTORAGE_CODE_EDITOR_PROBLEM","Problem_detail","notfound","setProblem","checkLogin","setCheckLogin","setLanguage","saveEditorContentToLocalStorage","getEditorContentFromLocalStorage","copyToClipboard","element","document","getElementById","select","execCommand","fetchProblem_detail","File","Input","reader","FileReader","readAsText","onload","result","onChangeUploadFile","editor","options","matchBrackets","styleActiveLine","theme","mode","lineNumbers","lineWrapping","Search","searchTerm","setSearchTerm","TextFieldForm","placeHolder","News","newValue","PrivateRoute","Component","component","rest","render","pathname","from","PrivateRouteSAdmin","StatusDetailSource","lang","StatusDetailSummary","timestring","submission","StatusDetailSample","samples","StatusDetailHidden","hiddens","hidden","Status_detail","status_detail","setStatus_detail","fetchStatus_detail","hidden_test","Social_icon","Profile","EditProfile","setUser","fetchUserData","Setting","userData","setUserData","toAccount","setToAccount","selectFile","setSelectFile","padding","updateAvatar","uploadFile","accept","EditUser","is_staff","problem_permission","NotFound","viewBox","fill","xmlns","y","rx","d","opacity","stroke","stroke-width","filterUnits","color-interpolation-filters","flood-opacity","in","dy","stdDeviation","in2","x1","y1","x2","y2","gradientUnits","stop-color","offset","class","back","setJserver","onSubmitHandler","last_heartbeat","added_time","is_disabled","max_pending_tasks","NewJudgeServerForm","setHostname","saddress","setSAddress","mptasks","setMPTasks","active","setActive","adminStatusAPI","putById","putType","put_type","AdminSubmissionList","handleDeleteSubmission","getMonth","getDate","getFullYear","join","getHours","getMinutes","getSeconds","timeFormatter","AdminSubmissionDetail","subDetail","setSubDetail","sendPut","sendDelete","App","path","exact","CreateProblem","JudgeServerDetail","configureStore","reducer","ReactDOM","StrictMode","store"],"mappings":"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","file":"static/js/main.593776a6.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst axiosClient = axios.create({\r\nbaseURL: process.env.REACT_APP_API_URL,\r\nheaders: {\r\n    'content-type': 'application/json',\r\n    // 'Access-Control-Allow-Origin': '*',\r\n},\r\n\r\nparamsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n    // Handle token here ...\r\n    return config;\r\n})\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    // console.log(\"Error\", error.response)\r\n    const invalidTokenMsgs = [\"Invalid token\", \"Token has expired\"];\r\n    // console.log(invalidTokenMsgs.includes(error.response.data.detail))\r\n\r\n    if (error.response.status === 401){\r\n        if (invalidTokenMsgs.includes(error.response.data.detail)){\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('role');\r\n            localStorage.removeItem('userInformation');\r\n            localStorage.setItem('force-logout', true);\r\n\r\n            window.location.href=\"/\";\r\n            return;\r\n        }\r\n    }\r\n    var error_messsage = error.response.data.data;\r\n    if (typeof error.response.data.data === 'object'){\r\n        for (let key in error_messsage){\r\n            toast.error(error_messsage[key], {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 2500,\r\n            })\r\n        }\r\n    } else {\r\n        var error_messsage = error.response.data.data;\r\n        toast.error(error_messsage, {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n            autoClose: 2500,\r\n        })\r\n    }\r\n    throw error;\r\n});\r\nexport default axiosClient;","import axiosClient from'./axiosClient';\r\n\r\nconst loginAPI = {\r\n    login: (data) => {\r\n        const url = 'login/';\r\n        return axiosClient.post(url, data, {\r\n        });\r\n    }\r\n}\r\n\r\nexport default loginAPI;","import axiosClient from './axiosClient';\r\n\r\nconst registerAPI = {\r\n    register: (data) => {\r\n        const url = 'register/';\r\n        return axiosClient.post(url,data);\r\n    }\r\n};\r\n\r\nexport default registerAPI;","import axiosClient from './axiosClient';\r\n\r\nconst logoutAPI = {\r\n    logout: () => {\r\n        const url = 'logout/';\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('role');\r\n        localStorage.removeItem('userInformation');\r\n        return axiosClient.get(url,config);\r\n    }\r\n}\r\nexport default logoutAPI;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport loginAPI from '../api/loginAPI';\r\nimport registerAPI from '../api/registerAPI';\r\nimport logoutAPI from '../api/logoutAPI';\r\nexport const loginUser = createAsyncThunk(\r\n    '/login',\r\n    async ({username, password }, thunkAPI) => {\r\n        try {\r\n            const response = await loginAPI.login({username, password});\r\n            if(response.token !== null){\r\n                localStorage.setItem('token', response.data.token);\r\n                localStorage.setItem('role', response.data.user.admin_type);\r\n                localStorage.setItem('username', response.data.user.username);\r\n                localStorage.setItem('userId', response.data.user.id);\r\n                localStorage.setItem('userInformation', JSON.stringify(response.data.user));\r\n                return response;\r\n            }else{\r\n                alert(\"fail to fetch tokem Login\")\r\n            }\r\n        } catch (error) {\r\n            console.log('Fail to login: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n    '/register',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const response = await registerAPI.register(data);\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.log('Fail to register: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const logoutUser = createAsyncThunk(\r\n    '/logout',\r\n    async (thunkAPI) => {\r\n        try {\r\n            const response = await logoutAPI.logout();\r\n            if(response){\r\n                localStorage.removeItem('token');\r\n                localStorage.removeItem('role');\r\n                localStorage.removeItem('userInformation');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log('Fail to logout: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        username: '',\r\n        email: '',\r\n        isLoginSuccess: false,\r\n        isLoginError: false,\r\n        isRegisterSuccess: false,\r\n        isRegisterError: false,\r\n        isFeching: false,\r\n        errorMessage: '',\r\n\r\n    },\r\n    reducers:{\r\n        clearState: (state) => {\r\n            state.isLoginSuccess = false;\r\n            state.isLoginError = false;\r\n            state.isRegisterSuccess = false;\r\n            state.isRegisterError = false;      \r\n            return state;\r\n        },\r\n        userClear: (state) =>{\r\n            state.userInformation = {};\r\n        }\r\n    },\r\n\r\n    extraReducers:{\r\n        //login feching status\r\n        [loginUser.fulfilled]: (state, {payload}) =>{\r\n            state.username = payload.data.user.username;\r\n            state.isFeching = false;\r\n            state.isLoginSuccess = true;\r\n            return state;\r\n        },\r\n        [loginUser.pending]: (state) =>{\r\n            state.isFeching = true;\r\n        },\r\n        [loginUser.rejected]: (state, {payload}) => {\r\n            state.isLoginError = true;\r\n            state.isFeching = false;\r\n            state.errorMessage = 'Username or password is wrong';\r\n        },\r\n        //register fetching status\r\n        [registerUser.fulfilled]: (state , {payload}) => {\r\n            state.isFeching = false;\r\n            state.isRegisterSuccess = true;\r\n        },\r\n        [registerUser.rejected]: (state) => {\r\n            state.isFeching = false;\r\n            state.isRegisterError = true;\r\n            state.errorMessage = 'Register fail';\r\n        },\r\n        [registerUser.pending]: (state) => {\r\n            state.isFeching = true;\r\n        },\r\n        //logout\r\n        [logoutUser.fulfilled]: (state) => {\r\n            state.isFeching = false;\r\n            state.isSuccess = true;\r\n        },\r\n        [logoutUser.rejected]: (state) => {\r\n            state.isFeching = false;\r\n            state.isError = true;\r\n        },\r\n        [logoutUser.pending]: (state) => {\r\n            state.isFeching = true;\r\n        },\r\n\r\n\r\n\r\n    },\r\n})\r\nexport const { clearState, userClear } = userSlice.actions;\r\n\r\nexport const userSelector = (state) => state.user;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userSelector, clearState, registerUser } from '../../UserSlice';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n    //Modal handling\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    //redux \r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isRegisterSuccess, isRegisterError } = useSelector(userSelector);\r\n\r\n    //form handling\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        if (data.password == data.password_again)\r\n            dispatch(registerUser(data));\r\n        else{\r\n            toast.error('Your password and confirmation password does not match', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 2000\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearState());\r\n        }\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (isRegisterError) {\r\n            // toast.error(errorMessage, {\r\n            //     position: toast.POSITION.BOTTOM_CENTER,\r\n            //     autoClose: 1500\r\n            // });\r\n            dispatch(clearState());\r\n        }\r\n        if (isRegisterSuccess) {\r\n            toast.success('Register successful', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500\r\n            });\r\n            handleClose();\r\n            history.push('/');\r\n            dispatch(clearState());\r\n            \r\n        }\r\n    }, [isRegisterError, isRegisterSuccess, dispatch, history]);\r\n    const registerModal = (<div>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Register</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group controlId=\"formBasicUsername\">\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" {...register(\"username\")} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" {...register(\"email\")} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\")} />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword1\">\r\n                        <Form.Control type=\"password\" placeholder=\"Confirm your Password\" {...register(\"password_again\")} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                <Button variant=\"outline-primary\" onClick={() => (setShowRegis(false))} >\r\n                    Already registed? Login now!\r\n                </Button>\r\n            </Modal.Footer> */}\r\n        </Modal>\r\n    </div>);\r\n    return (\r\n        <>\r\n            <Button variant=\"light\" style={{ lineheight: '1.5' }}  onClick={handleShow}>Register</Button>\r\n            {registerModal}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport Register from '../Register/Register';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { userSelector, clearState, loginUser } from '../../UserSlice';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Login(props) {\r\n    //toast \r\n    toast.configure();\r\n    //for Modal\r\n    const [show, setShow] = useState(false);\r\n    const [showRegis, setShowRegis] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => { \r\n        setShow(true);\r\n    };\r\n\r\n    //for redux\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isLoginSuccess, isLoginError, errorMessage } = useSelector(userSelector);\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatch(loginUser(data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearState());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isLoginError) {\r\n            // toast.error(errorMessage, {\r\n            //     position: toast.POSITION.BOTTOM_CENTER,\r\n            //     autoClose: 1500\r\n            // });\r\n            dispatch(clearState());\r\n        }\r\n        if (isLoginSuccess){\r\n            toast.success('Welcome back!', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 3000 \r\n            });\r\n            dispatch(clearState());\r\n            history.push('/home/');\r\n        }\r\n    }, [isLoginSuccess, isLoginError]);\r\n\r\n    const LoginModal = (\r\n        <div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" {...register(\"username\")} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\")} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Login\r\n                            </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n\r\n                {/* <Modal.Footer>\r\n                    <Button onClick={handleOnClickRegister}>No account? Register now!</Button>\r\n                </Modal.Footer> */}\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Button  variant=\"light\" style={{lineheight: '1.5'}}onClick={handleShow}>Login</Button>\r\n            {showRegis ? <Register setShowRegis={setShowRegis}/> : LoginModal}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/Logo_dhbkdn.bccf89bd.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaBars, FaTimes } from 'react-icons/fa';\r\nimport { FcNightPortrait } from 'react-icons/fc'\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport Login from './Pages/Login/Login';\r\nimport './Navbar.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logoutUser, userSelector } from './UserSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Register from './Pages/Register/Register';\r\nimport logo from '../public/Logo_dhbkdn.jpg'\r\n\r\nfunction Navbar() {\r\n    const [check, setCheck] = useState(false);\r\n    const { isSuccess } = useSelector(userSelector);\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token') !== null) setCheck(true);\r\n        else setCheck(false);\r\n    }, [localStorage.getItem('token')])\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const handleClick = () => setClick(!click);\r\n    const showButton = () => {\r\n        if (window.innerHeight <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    }\r\n    window.addEventListener('resize', showButton)\r\n    //logout process\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const onLogout = () => {\r\n        dispatch(logoutUser());\r\n        // if(isSuccess){\r\n        //     history.push(\"/\");\r\n        //     toast.success('See you later!', {\r\n        //         position: toast.POSITION.BOTTOM_CENTER,\r\n        //         autoClose: 3000\r\n        //     });\r\n        // }\r\n        history.push(\"/\");\r\n        toast.success('See you later!', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n            autoClose: 3000\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-container container\">\r\n                    <Link to='/home' className=\"navbar-logo\">\r\n                        <img className=\"navbar-logo__item\" src={logo} alt=\"logo\"/>\r\n                        <h2 className=\"navbar-logo__item\">DOnlineJudge</h2>\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        {click ? <FaTimes /> : <FaBars />}\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link to='/home' className='nav-links'> Home</Link>\r\n                        </li> */}\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/news' className='nav-links'> News</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/problem' className='nav-links'> Problem</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/status' className='nav-links'> Status</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/about' className='nav-links'> About</Link>\r\n                        </li>\r\n                        <li className=\"nav-btn \">\r\n                            {!check ? (\r\n                                <Login />\r\n                            ) : <DropdownButton  variant=\"secondary\" title={localStorage.getItem('username')}>\r\n                                <Dropdown.Item href='/profile' className=\"dropdown-items\">Settings</Dropdown.Item>\r\n                                {localStorage.getItem('role') === \"Super Admin\" || localStorage.getItem('role') === \"Admin\" ?\r\n                                    <Dropdown.Item href='/admin' className=\"dropdown-items \">Admin Page</Dropdown.Item> : <></>}\r\n                                <Dropdown.Divider />\r\n                                <Dropdown.Item className=\"dropdown-items\" onClick={onLogout} >Logout</Dropdown.Item>\r\n                            </DropdownButton>}\r\n                        </li>\r\n                        <li className=\"nav-btn\">\r\n                            {!check ? (\r\n                                <Register />\r\n                            ) : <></>}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport Navbar from '../../Navbar';\r\nimport { Card } from 'react-bootstrap';\r\nimport Collapsible from 'react-collapsible'\r\nimport './About.scss';\r\nimport { BsChevronDown } from \"react-icons/bs\"; //react-icon\r\nimport { GoPrimitiveDot } from \"react-icons/go\";\r\n\r\nfunction RenderAnswer({ ans }) {\r\n    if (ans.length == 0) return <p></p>;\r\n    if (ans.charAt(0) === '{') {\r\n        let tmp = ans.substring(1).split(',');\r\n        return (\r\n            <ul>\r\n                {tmp.map((op) => (<li>{op}</li>))}\r\n            </ul>\r\n        );\r\n    } else {\r\n        return (\r\n            <p>\r\n                {ans}\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nfunction FaqCollapsible({ question, answer }) {\r\n    var lines = answer.split('\\n');\r\n    console.log(lines);\r\n    return (\r\n        <>\r\n            <Collapsible trigger={[question, <BsChevronDown />]} easing='ease'>\r\n                {\r\n                    lines.map((line) => (<RenderAnswer ans={line} />))\r\n                }\r\n            </Collapsible>\r\n            <div className=\"faq-collapsible-footer\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"pages-container\">\r\n                <div className=\"aboutus-container\">\r\n                    <Card className=\"aboutus-card\">\r\n                        <Card.Header as=\"h3\" className=\"aboutus-header\">\r\n                            About us\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h5>Về nhóm và sản phẩm</h5>\r\n                            <hr></hr>\r\n                            {/* Question 1: Chúng tôi là ai?*/}\r\n                            <Collapsible trigger={[\"Chúng tôi là ai?\", <BsChevronDown />]} easing='ease'>\r\n                                <p>Chúng tôi là sinh viên K18 của trường Đại học Bách Khoa Đà Nẵng bao gồm 4 người.</p>\r\n                                <ul>\r\n                                    <li>Ngô Văn Anh Tuấn (lead project)</li>\r\n                                    <li>Nguyễn Đăng Thông (back-end dev)</li>\r\n                                    <li>Trần Đình Quang Huy (lead front-end)</li>\r\n                                    <li>Trần Xuân Phúc (front-end dev)</li>\r\n                                </ul>\r\n                            </Collapsible>\r\n\r\n                            {/* Question 2: DOnlineJudge là gì?*/}\r\n                            <Collapsible trigger={[\"DOnlineJudge là gì?\", <BsChevronDown />]} easing='ease'>\r\n                                <p>DOnlineJudge là một trình chấm code trực tuyến (online judge) được thiết kế để biên dịch (compile) và chấm kết quả (grading) một bài code của người dùng một cách tự động, thông qua các kiểm thử được thiết kế từ trước bởi người ra đề.</p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question 3: Mục đích của DOnlineJudge?*/}\r\n                            <Collapsible trigger={[\"Mục đích của DOnlineJudge?\", <BsChevronDown />]} easing='ease'>\r\n                                <p>Tự động hóa quá trình chấm code (tính đúng đắn của thuật toán) thông qua kiểm tra output. Hỗ trợ người dùng luyện tập khả năng tư duy thuật toán của họ.</p>\r\n                            </Collapsible>\r\n\r\n                            <br />\r\n                            <h5>Chi tiết triển khai (Implementation details)</h5>\r\n                            <hr></hr>\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Front-end\", <BsChevronDown />]} easing='ease'>\r\n                                <p>Front-end được sử dụng framework ReactJS để phát triển.</p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Back-end\", <BsChevronDown />]} easing='ease'>\r\n                                <p>Back-end cho web server là một API server, sử dụng Django REST framework.</p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Back-end giao tiếp với Server chấm như thế nào?\", <BsChevronDown />]} easing='ease'>\r\n                                <p>\r\n                                    Khi nhận code của người dùng nộp lên sẽ được đưa vào một hàng chờ, và backend sẽ tìm\r\n                                    một server chấm thích hợp. Nếu chưa tìm được, backend sẽ chờ một khoảng thời gian trước khi tìm tiếp.\r\n                                </p>\r\n                                <p>\r\n                                    Sau khi tìm được, nó sẽ khởi tạo một tiến trình background để chuẩn bị gửi thông tin biên dịch/chấm bài\r\n                                    qua judge server. Sau khi gửi, tiến trình đó sẽ chờ đợi phản hồi từ server chấm để cập nhập thông tin\r\n                                    của bài chấm lên /status.\r\n                                </p>\r\n                                <p>\r\n                                    Back-end có một danh sách các server chấm cùng địa chỉ websocket của chúng. Back-end chọn server chấm\r\n                                    theo tiêu chí tham lam là số lượng task còn tồn động ít nhất trên số nhân CPU.\r\n                                </p>\r\n                            </Collapsible>\r\n\r\n                            {/* Question*/}\r\n                            <Collapsible trigger={[\"Server chấm code như thế nào?\", <BsChevronDown />]} easing='ease'>\r\n                                <p>\r\n                                    Server chấm sử dụng công nghệ Docker để biên dịch và thực thi code trong cô lập.\r\n                                    Trong container Docker, có một script dùng để bắt đầu và kết thúc quá trình này.\r\n                                    Sau khi hoàn tất (thành công hoặc thất bại), script sẽ báo cáo thông tin về từ\r\n                                    bên trong Docker ra bên ngoài server chấm. Server chấm sẽ lọc những thông tin quan trọng,\r\n                                    phản hồi về lại với Back-end thông qua địa chỉ đã gửi request.\r\n                                </p>\r\n                                <p>\r\n                                    Nếu server chấm không có tác vụ, nó sẽ thỉnh thoảng ping đến back-end để xác nhận còn sống (heartbeat).\r\n                                </p>\r\n                            </Collapsible>\r\n                            \r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <p><em>\r\n                                Mọi thông tin hay yêu cầu khác, xin hãy liên lạc đến admin@doj.com\r\n                            </em></p>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import axiosClient from './axiosClient';\r\nimport queryString from 'query-string';\r\n\r\nconst oj_announcementAPI = {\r\n    getAll: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `/announcement/?${paramString}`;\r\n        if(token === null) return axiosClient.get(url);\r\n        return axiosClient.get(url, config);\r\n    },\r\n}\r\nexport default oj_announcementAPI;","import { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport React from 'react'\r\nimport './Announcement.scss'\r\nimport {AiFillEyeInvisible} from 'react-icons/ai'\r\n\r\nfunction Announcement(props) {\r\n    const { title, author, creation_time, content, id } = props;\r\n    const hanldeTime = (time) => {\r\n        return new Date(time).toDateString();\r\n    }\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleShow = () => setShow(true);\r\n    const contentModal = (\r\n        <div>\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n                size=\"xl\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        {title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p className=\"announcement-ta\">\r\n                        {content}\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"modal__footer\">\r\n                    <div className=\"creation_time\">{new Date(creation_time).toString().replace(\"Indochina\", \"Hanoi\")}</div>\r\n                    <div className=\"author\">By: <strong>{author}</strong></div>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"announcement-container\">\r\n            <article>\r\n                <div className=\"annou_head\">\r\n                    <h5>From: {author}</h5>\r\n                    <div className=\"creation_time\">\r\n                        <p>{hanldeTime(creation_time)}</p>\r\n                    </div>\r\n                    <div className='visible_indicator'>\r\n                        {props.is_visible ? '' : <AiFillEyeInvisible/>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"annou_detail\">\r\n                    <h2>{title}</h2>\r\n                </div>\r\n\r\n                <div className=\"more-button\">\r\n                    <Button onClick={handleShow}>More...</Button>\r\n                    {contentModal}\r\n                </div>\r\n            </article>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Announcement\r\n","export default __webpack_public_path__ + \"static/media/Background.6c9a40e8.mp4\";","import axiosClient from './axiosClient';\r\n\r\nconst oj_profileAPI = {\r\n    getUserInformation: () =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/';\r\n        return axiosClient.get(url,config);\r\n    },\r\n    getById: (id) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `/profile/${id}`;\r\n        return axiosClient.get(url,config);\r\n    },\r\n    editUserInformation: (data) =>{\r\n        Object.assign(data, { email: \"\", \"profile_pic\": \"\",});\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/';\r\n        return axiosClient.put(url,data,config);\r\n    },\r\n    uploadAvatar: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/';\r\n        return axiosClient.put(url,data,config);\r\n    },\r\n    changePassword: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/profile/change-password/';\r\n        return axiosClient.put(url,data,config);\r\n    }\r\n}\r\nexport default oj_profileAPI;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport oj_profileAPI from '../../../api/oj_profileAPI';\r\nimport { userSlice } from \"../../UserSlice\";\r\n\r\nexport const userProfile = createAsyncThunk(\r\n    '/profile',\r\n    async(thunkAPI) => {\r\n        try{\r\n            const response = await oj_profileAPI.getUserInformation();\r\n            return response;\r\n        }catch( error ){\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n);\r\n\r\nexport const profileSlice = createSlice({\r\n    name: 'profile',\r\n    initialState: {\r\n        id: '',\r\n        profile_pic: '',\r\n        authored_problem: [],\r\n        username: '',\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        admin_type: '',\r\n        last_login: '',\r\n        solved_problem: [],\r\n    },\r\n    reducers:{\r\n        clearState: (state) =>{\r\n            state.id = '';\r\n            state.profile_pic = '';\r\n            state.authored_problem = [];\r\n            state.username = '';\r\n            state.email = '';\r\n            state.first_name = '';\r\n            state.last_name = '';\r\n            state.admin_type = '';\r\n            state.last_login = '';\r\n            state.solved_problem = [];\r\n            return state;\r\n        }\r\n    },\r\n    extraReducers:{\r\n        [userProfile.fulfilled]: (state, { payload }) =>{\r\n            state.id = payload.data.id;\r\n            state.profile_pic = payload.data.profile_pic;\r\n            state.authored_problem = payload.data.authored_problem;\r\n            state.username = payload.data.username;\r\n            state.email = payload.data.email;\r\n            state.first_name = payload.data.first_name;\r\n            state.last_name = payload.data.last_name;\r\n            state.admin_type = payload.data.admin_type;\r\n            state.last_login = payload.data.last_login\r\n            state.solved_problem = payload.data.solved_problem;\r\n        },\r\n        [userProfile.rejected]: () => {\r\n\r\n        }\r\n    }\r\n})\r\n\r\nexport const { clearState } = userSlice.actions;\r\nexport const profileSelector = (state) => state.profile;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport '../Page.scss';\r\nimport './Home.scss';\r\nimport oj_announcementAPI from '../../../api/oj_announcementAPI';\r\nimport Announcement from './Announcement';\r\nimport Background from '../../../public/Background.mp4';\r\nimport { userProfile } from '../Profile/profileSlice';\r\nfunction Home() {\r\n    const [announcement, setAnnouncement] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAnnouncement = async () => {\r\n            try {\r\n                const response = await oj_announcementAPI.getAll();\r\n                setAnnouncement(response.data);\r\n            } catch (error) {\r\n                console.log('fail to announcement: ', error);\r\n            }\r\n        }\r\n        fetchAnnouncement();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <video autoPlay loop muted className=\"myVideo\">\r\n                <source src={Background} type=\"video/mp4\" />\r\n            </video>\r\n\r\n            <div className=\"pages-container\">\r\n                <div className=\"home-container\">\r\n                    <div className=\"left-part home-container__items\">\r\n                        <h1>Welcome to DOnlineJudge</h1>\r\n                        <hr/>\r\n                        <h5>An Automatic Code Grading System</h5>\r\n                    </div>\r\n                    <div className=\"right-part home-container__items\">\r\n                        <h1>News</h1>\r\n                        <div className=\"annoucement-container\">\r\n                            {\r\n                                announcement.map(annou => {\r\n                                    return <Announcement title={annou.title}\r\n                                        content={annou.content}\r\n                                        creation_time={annou.creation_time}\r\n                                        author={annou.author_name} key={annou.id}\r\n                                        id={annou.id} \r\n                                        is_visible={annou.is_visible}\r\n                                    />\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axiosClient from './axiosClient';\r\nimport queryString from 'query-string';\r\n\r\nconst oj_problemAPI = {\r\n    getAll: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `problem/?${paramString}`;\r\n        if (token === null) return axiosClient.get(url);\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `problem/${id}`;\r\n        if (token === null) return axiosClient.get(url);\r\n        return axiosClient.get(url, config);\r\n    }\r\n    \r\n}\r\n\r\nexport default oj_problemAPI","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport './Problem.scss';\r\nimport oj_problemAPI from '../../../api/oj_problemAPI';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../../Components/Pagination/Paginate.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Collapsible from 'react-collapsible';\r\nimport { BsChevronDown } from \"react-icons/bs\"; //react-icon\r\nimport {AiOutlineEyeInvisible} from \"react-icons/ai\";\r\nimport {Button} from 'react-bootstrap';\r\n\r\nfunction formatDate(date) {\r\n    return (new Date(date)).toLocaleDateString();\r\n}\r\n\r\nfunction Problem() {\r\n    const [problems, setProblems] = useState([])\r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '',\r\n        page: 1,\r\n    });\r\n\r\n    // -- paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    // -- sorting\r\n    const [sortBy, setSortBy] = useState('');\r\n    const setSortByCriteria = (crit) => {\r\n        if (sortBy === '') setSortBy(crit);\r\n        else\r\n        if (sortBy.charAt[0] === '-') {\r\n            setSortBy(crit);\r\n        } else {\r\n            if (sortBy === crit) setSortBy('-'+crit);\r\n            else setSortBy(crit);\r\n        }\r\n    }\r\n    // Update filters when sortBy is changed\r\n    useEffect(() => {\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortBy\r\n        })\r\n    }, [sortBy])\r\n\r\n    // -- ReactPaginate: handle page change\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n    // Fetching data when filters is changed\r\n    useEffect(() => {\r\n        const fetchProblems = async () => {\r\n            try {\r\n                const response = await oj_problemAPI.getAll(filters);\r\n                setProblems(response.data);\r\n                setMaxPage(response.maxpage);\r\n            } catch (error) {\r\n               console.log('Fail to fetch status: ', error); \r\n            }\r\n        }\r\n        fetchProblems();\r\n    }, [filters])\r\n\r\n    // -- Filtering\r\n    const [searchContent, setSearchContent] = useState('')\r\n    const [searchAuthor, setSearchAuthor] = useState('')\r\n    const [searchDifficulty, setSearchDifficulty] = useState('')\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormSubmit = (e) => {\r\n        if (e !== undefined) e.preventDefault()\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['difficulty']\r\n\r\n        if (searchContent !== '') {\r\n            newFilter = {...newFilter, contains: searchContent}\r\n        }\r\n        if (searchAuthor !== '') {\r\n            newFilter.filter_by.push('author_name')\r\n            newFilter = {...newFilter, author_name: searchAuthor}\r\n        } \r\n        if (searchDifficulty !== '') {\r\n            newFilter.filter_by.push('difficulty')\r\n            newFilter = {...newFilter, difficulty: searchDifficulty}\r\n        }\r\n        setFilters(newFilter);\r\n    }\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormReset = (e) => {\r\n        setSearchContent(''); setSearchAuthor(''); setSearchDifficulty('');\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['difficulty']\r\n        setFilters(newFilter);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"problems-container pages-container\">\r\n                <Collapsible trigger={[\"Search/Filter\", <BsChevronDown key={'chevron-down'}/>]} easing='ease'>\r\n                    <Form className=\"filter_form\">\r\n                        <div className=\"filter_form_items\">\r\n                            <Form.Group className=\"search-content\">\r\n                                <Form.Label>Search content</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Content\" onChange={(e)=>{setSearchContent(e.target.value)}}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"search-authorname\">\r\n                                <Form.Label>Search for author</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Author name\" onChange={(e)=>{setSearchAuthor(e.target.value)}}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"filter-difficulty\">\r\n                                <Form.Label>Difficulty</Form.Label>\r\n                                <Form.Control as=\"select\" className=\"diff_filter_by\" onChange={(e)=>{setSearchDifficulty(e.target.value)}}>\r\n                                    <option value=\"\">All</option>\r\n                                    <option value=\"Easy\">Easy</option>\r\n                                    <option value=\"Medium\">Medium</option>\r\n                                    <option value=\"Hard\">Hard</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleFilterFormSubmit}>Submit</Button>\r\n                        <Button variant=\"light\" type=\"reset\" onClick={handleFilterFormReset}>Reset</Button>\r\n                    </Form>\r\n                </Collapsible>\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"problem-header\">\r\n                        Problem\r\n                    </Card.Header>\r\n                    <Card.Body >\r\n                        < table >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th onClick={() => setSortByCriteria('display_id')}>Display ID</th>\r\n                                    <th onClick={() => setSortByCriteria('title')}>Title</th>\r\n                                    <th onClick={() => setSortByCriteria('author_name')}>Author</th>\r\n                                    <th onClick={() => setSortByCriteria('difficulty')}>Level</th>\r\n                                    <th onClick={() => setSortByCriteria('created')}>Created</th>\r\n                                    <th onClick={() => setSortByCriteria('total_submission')}>Tries</th>\r\n                                    <th onClick={() => setSortByCriteria('correct_submission')}>Correct</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"pages-container\">\r\n                                {\r\n                                    problems.length === 0 \r\n                                    ? <tr><td className='empty-result-msg'> Nothing to show.. </td></tr>\r\n                                    : (\r\n                                        problems.map((problem) => (\r\n                                            <tr key={problem.id} className={!problem.is_visible?\"p-hidden\":\"p-public\"}>\r\n                                                <td>{problem.display_id} {!problem.is_visible?<AiOutlineEyeInvisible/>:<></>}</td>\r\n                                                <td><Link to={`/problem/${problem.id}`}>{problem.title}</Link></td>\r\n                                                <td>{problem.author_name}</td>\r\n                                                <td>\r\n                                                    <div className=\"table-cell\">\r\n                                                        <div className={`difficulty-container ${problem.difficulty}`}>\r\n                                                            <div className=\"difficulty-text\">\r\n                                                                {problem.difficulty}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{formatDate(problem.created)}</td>\r\n                                                <td>{problem.total_submission}</td>\r\n                                                <td>{problem.correct_submission}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table >\r\n\r\n                        <div className='pagination-container'> \r\n                            {\r\n                                maxPage === 0\r\n                                ? <></>\r\n                                : <ReactPaginate \r\n                                    pageCount={maxPage}\r\n                                    pageRangeDisplayed={5}\r\n                                    marginPagesDisplayed={2}\r\n                                    onPageChange={handlePageClick}\r\n                                    containerClassName={'pagination'}\r\n                                    activeClassName={'active'}\r\n                                    breakLabel={'...'}\r\n                                    breakClassName={'break-me'}>\r\n                                </ReactPaginate> \r\n                            }\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Problem;","import axiosClient from './axiosClient';\r\nimport queryString from 'query-string';\r\nconst oj_statusAPI = {\r\n    getAll: (data) => {\r\n        const paramString = queryString.stringify(data);\r\n        const url = `admin/status/?${paramString}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    postProblem: (data) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = 'status/';\r\n        return axiosClient.post(url, data, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `status/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getByAuthor: (authorId) => {\r\n        const url = `status/${authorId}}`;\r\n        return axiosClient.get(url);\r\n    }\r\n\r\n}\r\n\r\nexport default oj_statusAPI;","export const VERDICT_TO_CLASSNAME = {\r\n\t\"Accepted\": \"accepted\",\r\n\t\"Wrong Answer\": \"wrong-answer\",\r\n\t\"Runtime Error\": \"runtime-error\",\r\n\r\n\t\"Time Limit Exceeded\": \"time-limit-exceeded\",\r\n\t\"Memory Limit Exceeded\": \"memory-limit-exceeded\",\r\n\r\n\t\"Compilation Error\": \"compile-error\",\r\n\r\n\t\"New\": \"new\",\r\n\t\"Judging\": \"judging\",\r\n\t\"System Error\": \"system-error\",\r\n\t\"Rejected\": \"rejected\",\r\n\t\"Rejudging\": \"rejudging\",\r\n\r\n\t\"Waiting\": \"waiting\",\r\n\t\"Skipped\": \"skipped\",\r\n\t\"Judged\": \"judged\",\r\n};\r\nexport const V2C = (v) => {\r\n\treturn (VERDICT_TO_CLASSNAME[v] || 'other')\r\n}\r\n\r\nexport const VERDICT_SHORT = {\r\n\t\"Accepted\": \"AC\",\r\n\t\"Wrong Answer\": \"WA\",\r\n\t\"Runtime Error\": \"RE\",\r\n\r\n\t\"Time Limit Exceeded\": \"TLE\",\r\n\t\"Memory Limit Exceeded\": \"MLE\",\r\n\r\n\t\"Compilation Error\": \"CE\",\r\n\r\n\t\"New\": \"NEW\",\r\n\t\"Judging\": \"JDG\",\r\n\t\"System Error\": \"SE\",\r\n\t\"Rejected\": \"RJT\",\r\n\t\"Rejudging\": \"RJDG\",\r\n\r\n\t\"Waiting\": \"QUEUED\",\r\n\t\"Skipped\": \"SKIPPD\",\r\n\t\"Judged\": \"JUDGED\",\r\n};\r\nexport const VS = (v) => {\r\n\treturn (VERDICT_SHORT[v] || v)\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Card, Form } from 'react-bootstrap';\r\nimport { Link} from 'react-router-dom';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport Navbar from '../../Navbar';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Collapsible from 'react-collapsible';\r\nimport { BsChevronDown } from \"react-icons/bs\"; //react-icon\r\nimport {Button} from 'react-bootstrap';\r\nimport { V2C, VS } from '../../../constant/SubmissionVerdict';\r\nimport {AiOutlineEyeInvisible} from 'react-icons/ai';\r\nimport './status.scss';\r\nimport '../../Components/Pagination/Paginate.css';\r\nimport \"../../../css/SubmissionVerdict.css\"\r\n\r\nfunction Status() {\r\n    let href = window.location.href;\r\n    var url = new URL(href);\r\n    var problem_title = url.searchParams.get('problem');\r\n    var username = url.searchParams.get('username');\r\n    const [status, setStatus] = useState([]);\r\n    const [filters, setFilters] = useState(() => {\r\n        let filter = []\r\n        if(username !== null) filter.push('author_name');\r\n        if(problem_title !== null && problem_title !== ''){\r\n            filter.push('problem_title');\r\n        }\r\n        return {\r\n            sort_by: '-submit_time',\r\n            filter_by: filter,\r\n            author_name: username,\r\n            problem_title: problem_title,\r\n            page: 1,\r\n        }\r\n    })\r\n\r\n    // -- paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    // -- sorting\r\n    const [sortBy, setSortBy] = useState('-submit_time');\r\n    const setSortByCriteria = (crit) => {\r\n        if (sortBy === '') setSortBy(crit);\r\n        else\r\n        if (sortBy.charAt[0] === '-') {\r\n            setSortBy(crit);\r\n        } else {\r\n            if (sortBy === crit) setSortBy('-'+crit);\r\n            else setSortBy(crit);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortBy\r\n        })\r\n    }, [sortBy])\r\n    // ReactPaginate: handle page change\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n\r\n    // -- Fetch data : Fetch when fitlers changes\r\n    useEffect(() => {\r\n        const fetchStatus = async () => {\r\n            try {\r\n                const response = await oj_statusAPI.getAll(filters);\r\n                setStatus(response.data);\r\n                setMaxPage(response.maxpage);\r\n            } catch (error) {\r\n               console.log('Fail to fetch status: ', error); \r\n            }\r\n        }\r\n        fetchStatus();\r\n    }, [filters])\r\n\r\n    // Filtering\r\n    const [searchContent, setSearchContent] = useState('')\r\n    const [searchAuthor, setSearchAuthor] = useState('')\r\n    const [searchVerdict, setSearchVerdict] = useState('')\r\n    const [searchLanguage, setSearchLanguage] = useState('')\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormSubmit = (e) => {\r\n        if (e !== undefined) e.preventDefault()\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['verdict']\r\n        delete newFilter['language']\r\n\r\n        if (searchContent !== ''){\r\n            newFilter = {...newFilter, contains: searchContent}\r\n        }\r\n        if (searchAuthor !== '') {\r\n            newFilter.filter_by.push('author_name')\r\n            newFilter = {...newFilter, author_name: searchAuthor}\r\n        } \r\n        if (searchVerdict !== '') {\r\n            newFilter.filter_by.push('verdict')\r\n            newFilter = {...newFilter, verdict: searchVerdict}\r\n        }\r\n        if (searchLanguage !== '') {\r\n            newFilter.filter_by.push('language')\r\n            newFilter = {...newFilter, language: searchLanguage}\r\n        }\r\n        setFilters(newFilter);\r\n    }\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormReset = (e) => {\r\n        setSearchContent(''); setSearchAuthor(''); setSearchVerdict(''); setSearchLanguage('');\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['verdict']\r\n        delete newFilter['language']\r\n        setFilters(newFilter);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"status-container pages-container\">\r\n                <Collapsible trigger={[\"Search/Filter\", <BsChevronDown key={'chevron-down-status'}/>]} easing='ease'>\r\n                    <Form className=\"filter_form\">\r\n                        <div className=\"filter_form_items\">\r\n                            <Form.Group className=\"search-content\">\r\n                                <Form.Label>Search content</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Content\" onChange={(e)=>setSearchContent(e.target.value)}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"search-authorname\">\r\n                                <Form.Label>Search for author</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Author name\" onChange={(e)=>setSearchAuthor(e.target.value)}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"search-verdict\">\r\n                                <Form.Label>Verdict</Form.Label>\r\n                                <Form.Control as=\"select\" className=\"verdict_filter_by\" onChange={(e)=>setSearchVerdict(e.target.value)}>\r\n                                    <option value=\"\">All</option> \r\n                                    <option value=\"Accepted\">Accepted</option>\r\n                                    <option value=\"Wrong Answer\">Wrong Answer</option>\r\n                                    <option value=\"Runtime Error\">Runtime Error</option>\r\n                                    <option value=\"Time Limit Exceeded\">Time Limit Exceeded</option>\r\n                                    <option value=\"Memory Limit Exceeded\">Memory Limit Exceeded</option>\r\n                                    <option value=\"Compilation Error\">Compile Error</option>\r\n                                    <option value=\"System Error\">System error</option>\r\n                                    <option value=\"Skipped\">Skipped</option>\r\n                                    <option value=\"Rejected\">Rejected</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"search-language\">\r\n                                <Form.Label>Language</Form.Label>\r\n                                <Form.Control as=\"select\" className=\"lang_filter_by\" onChange={(e)=>setSearchLanguage(e.target.value)}>\r\n                                    <option value=\"\">All</option>\r\n                                    <option value=\"Python3\">Python3</option>\r\n                                    <option value=\"Python2\">Python2</option>\r\n                                    <option value=\"C\">C</option>\r\n                                    <option value=\"Cpp\">C++</option>\r\n                                    <option value=\"Java\">Java</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={handleFilterFormSubmit}>Submit</Button>\r\n                        <Button variant=\"light\" type=\"reset\" onClick={handleFilterFormReset}>Reset</Button>\r\n                    </Form>\r\n                </Collapsible>\r\n                <Card>\r\n                <Card.Header as=\"h3\" className=\"status-header\">\r\n                    Status\r\n                </Card.Header>\r\n                <Card.Body className=\"status-table-card\">\r\n                    <table className=\"status-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th onClick={() => setSortByCriteria('id')}>ID</th>\r\n                                <th onClick={() => setSortByCriteria('problem_title')}>Problem</th>\r\n                                <th onClick={() => setSortByCriteria('author_name')}>Author</th>\r\n                                <th onClick={() => setSortByCriteria('verdict')}>Status</th>\r\n                                <th onClick={() => setSortByCriteria('language')}>Language</th>\r\n                                <th onClick={() => setSortByCriteria('time')}>Time</th>\r\n                                <th onClick={() => setSortByCriteria('memory')}>Memory</th>\r\n                                <th onClick={() => setSortByCriteria('submit_time')}>When</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                status.length === 0\r\n                                ? <tr><td><p className=\"empty-result-msg\">Nothing to show..</p></td></tr>\r\n                                : status.map(stat => {\r\n                                    return (\r\n                                        <tr key={stat.id} className={!stat.is_visible?\"s-hidden\":\"s-public\"}>\r\n                                            <td>{stat.id} {!stat.is_visible?<AiOutlineEyeInvisible/>:<></>}</td>\r\n                                            <td>\r\n                                                <div className=\"table-cell\">\r\n                                                    <Link to={`/problem/${stat.problem_id}`} >{stat.problem_title}</Link>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{stat.author_name}</td>\r\n                                            <td>\r\n                                                <div className=\"table-cell\">\r\n                                                    <div className={`result-container ${V2C(stat.verdict)}`}>\r\n                                                        <div className=\"result-text\">\r\n                                                            {VS(stat.verdict)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{stat.language}</td>\r\n                                            <td>{stat.time} ms</td>\r\n                                            <td>{Math.floor(stat.memory/1000)} MB</td>\r\n                                            <td>{(new Date(stat.submit_time)).toDateString()}</td>\r\n                                            <td><Link to={`/status/${stat.id}`}>Detail</Link></td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <div className='pagination-container'>\r\n                        {maxPage === 0\r\n                        ? <></>\r\n                        : <ReactPaginate \r\n                            pageCount={maxPage}\r\n                            pageRangeDisplayed={5}\r\n                            marginPagesDisplayed={2}\r\n                            onPageChange={handlePageClick}\r\n                            containerClassName={'pagination'}\r\n                            activeClassName={'active'}\r\n                            breakLabel={'...'}\r\n                            breakClassName={'break-me'}\r\n                        ></ReactPaginate>}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Status;","import React from 'react'\r\nimport {Button} from 'react-bootstrap';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { AiFillHome } from 'react-icons/ai'\r\nimport { useHistory } from 'react-router';\r\nimport logoutAPI from '../api/logoutAPI';\r\nimport './AdminNavbar.scss';\r\n\r\nfunction AdminNavbar() {\r\n    const history = useHistory();\r\n    function handlelogout(){\r\n        const logout = async () => {\r\n            const response = await logoutAPI.logout();\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('role');\r\n            history.push('/');\r\n            if(response){\r\n            }\r\n        }\r\n        logout();\r\n    }\r\n    const uname = localStorage.getItem('username');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-container\">\r\n                    <div className=\"btn-item\">\r\n                        {uname===null?<></>\r\n                        :<Button variant=\"light\" disabled>\r\n                            <span className='icon-w-text'>\r\n                                <span className='text'>Hello, <strong>{uname}</strong>!</span>\r\n                            </span>\r\n                        </Button>\r\n                        }\r\n                    </div>\r\n                    <div className=\"btn-item\">\r\n                        <Button variant=\"light\"  onClick={() => {history.push('/')}}>\r\n                            <span className='icon-w-text'>\r\n                                <span className='icon'><AiFillHome/></span>\r\n                                <span className='text'>Homepage</span>\r\n                            </span>\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"btn-item\">\r\n                        <Button variant=\"light\"  onClick={() => handlelogout()}>\r\n                            <span className='icon-w-text'>\r\n                                <span className='icon'><FiLogOut/></span>\r\n                                <span className='text'>Log out</span>\r\n                            </span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nAdminNavbar.propTypes = {\r\n\r\n}\r\n\r\nexport default AdminNavbar\r\n\r\n","export default __webpack_public_path__ + \"static/media/sidebar.b08cd86e.png\";","export default __webpack_public_path__ + \"static/media/logo.e1965f80.jpg\";","import axiosClient from './axiosClient'\r\nconst adminJudgeServerAPI = {\r\n    getAll:  () =>{\r\n        const url = 'admin/judgeserver/';\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `admin/judgeserver/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    deleteById:(id) => {\r\n        const url = `admin/judgeserver/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.delete(url,config);\r\n    },\r\n    updateById: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `admin/judgeserver/${data.id}/`;\r\n        return axiosClient.put(url, data.formData ,config)\r\n    },\r\n    addJudgeServer: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = 'admin/judgeserver/';\r\n        return axiosClient.post(url, data, config);\r\n    },\r\n}\r\n\r\nexport default adminJudgeServerAPI;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport '../Table.scss';\r\nimport './JudgeServer.scss'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\n\r\nimport adminJudgeServerAPI from '../../api/adminJudgeServerAPI';\r\n\r\n\r\nfunction JudgeServer(props) {\r\n\tconst [jservers, setJServers] = useState([])\r\n\tuseEffect(() => {\r\n\t\tconst fetch = async() => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await adminJudgeServerAPI.getAll();\r\n\t\t\t\tsetJServers(response.data)\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetch();\r\n\t}, [])\r\n\r\n    const dispatch = useDispatch();\r\n    const OnDeleteHandler = async (id) => {\r\n        if (window.confirm(`Are you sure you want to delete Judge Server#${id}?`)) {\r\n            const resp = await adminJudgeServerAPI.deleteById(id);\r\n\t\t\tif (resp.status==204) {\r\n\t\t\t\tsetJServers(jservers.filter((jserver) => {return jserver.id !== id}))\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Error when Deleting a Judge Server:', resp)\r\n\t\t\t}\r\n        }\r\n    }\r\n\r\n\treturn (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card className=\"jserver-list\">\r\n                    <Card.Header as=\"h3\" className=\"problemList-header\">\r\n\t\t\t\t\t\tJudge Server\r\n                        <div className=\"create_button\">\r\n                            <Link to={`/admin/judgeserver/new`}  className=\"alter_announcement\"> <BsFillPlusCircleFill /> Add </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\t\t\t\t\t\t{jservers.length === 0 \r\n\t\t\t\t\t\t? <p> Nothing to show at the moment </p>\r\n\t\t\t\t\t\t: <table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>ID</th>\r\n\t\t\t\t\t\t\t\t\t<th>Hostname</th>\r\n\t\t\t\t\t\t\t\t\t<th>Socket Address</th>\r\n\t\t\t\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t\t\t\t<th>Pending Tasks</th>\r\n\t\t\t\t\t\t\t\t\t<th>Options</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tjservers.map((jserver) => (\r\n\t\t\t\t\t\t\t\t\t\t<tr key={`jserver-list-tr-${jserver.id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{jserver.id}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{jserver.hostname}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{jserver.socketaddress}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tjserver.status===\"Normal\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t?<div className=\"jserver-status-normal\">Normal</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t:<div className=\"jserver-status-abnormal\">{jserver.status}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>{jserver.pending_tasks}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"js-option-cell\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"option-button__items\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/admin/judgeserver/${jserver.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='op-btn'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AiOutlineEdit/></Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"option-button__items\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"light\" onClick={() => {OnDeleteHandler(jserver.id)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AiOutlineDelete />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table >\r\n\t\t\t\t\t\t}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n\t)\r\n}\r\n\r\nexport default JudgeServer;\r\n\r\n","import { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport sidebarImage from './sidebar.png';\r\nimport './Sidebar.scss';\r\nimport { AiFillAppstore, AiOutlineBars, AiOutlineCode, AiFillHome, AiOutlineUser} from 'react-icons/ai';\r\nimport {BiServer} from 'react-icons/bi'\r\nimport {CgNotes} from 'react-icons/cg'\r\n\r\nimport Logo from '../public/logo.jpg'\r\nimport JudgeServer from './JudgeServer/JudgeServer';\r\n\r\nfunction Sidebar() {\r\n  const [collapsed, setCollapsed] = useState(() => {\r\n    if (window.innerWidth <= 960) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  });\r\n  const handleCollapsed = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setCollapsed(true);\r\n    }\r\n    else {\r\n      setCollapsed(false);\r\n    }\r\n\r\n  }\r\n  window.addEventListener('resize', handleCollapsed)\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <ProSidebar className=\"menu-sidebar\" collapsed={collapsed} image={sidebarImage}>\r\n        <div className=\"logo\" >\r\n          <img src={Logo} alt=\"\" className=\"sidebar__logo\" />\r\n        </div>\r\n        <Menu iconShape=\"circle\" >\r\n          <MenuItem icon={<AiOutlineCode />}>\r\n            Dashboard\r\n            <Link to='/admin/dashboard' />\r\n          </MenuItem>\r\n          \r\n          {\r\n            localStorage.getItem('role') === 'Super Admin' ? \r\n              <MenuItem icon={<AiOutlineUser/>}>\r\n                Users\r\n                <Link to=\"/admin/user\" />\r\n              </MenuItem>\r\n              :\r\n              <></>\r\n          }\r\n\r\n          <MenuItem icon={<AiFillAppstore />}>\r\n            Posts\r\n            <Link to=\"/admin/announcement\" />\r\n          </MenuItem>\r\n\r\n          <MenuItem icon={<AiOutlineBars />}>\r\n            Problems \r\n            <Link to=\"/admin/problem\" />\r\n          </MenuItem>\r\n\r\n          <MenuItem icon={<CgNotes/>}>\r\n            Submissions \r\n            <Link to=\"/admin/Submission\" />\r\n          </MenuItem>\r\n\r\n          <MenuItem icon={<BiServer/>}>\r\n            Judge Servers <Link to=\"/admin/judgeserver\" />\r\n          </MenuItem>\r\n\r\n        </Menu>\r\n      </ProSidebar>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n\r\n}\r\n\r\nexport default Sidebar\r\n\r\n","import axiosClient from \"./axiosClient\";\r\nimport queryString from 'query-string';\r\n\r\nconst admin_problemAPI = {\r\n    getAll: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `problem/?${paramString}`;\r\n        if (token === null) return axiosClient.get(url);\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `admin/problem/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    deleteById: (id) => {\r\n        const url = `admin/problem/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.delete(url, config);\r\n    },\r\n    updateById: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `admin/problem/${data.id}/`;\r\n        return axiosClient.put(url, data.formData, config)\r\n    },\r\n    createProblem: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = 'admin/problem/';\r\n        return axiosClient.post(url, data, config);\r\n    },\r\n    updateVisible: (id) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `admin/problem/${id}/`;\r\n        const payload = {'toggle_visibility':'true'}\r\n        return axiosClient.put(url, payload,config);\r\n    },\r\n\r\n    getAllProblemTags: () => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = 'problem_tag/';\r\n        return axiosClient.get(url,config);\r\n    }\r\n}\r\n\r\nexport default admin_problemAPI\r\n","import axiosClient from './axiosClient'\r\nimport queryString from 'query-string';\r\n\r\nconst admin_usersAPI = {\r\n    getAll: (data) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `admin/users/?${paramString}`;\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id)=>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `admin/users/${id}`;\r\n        return axiosClient.get(url,config);\r\n    },\r\n    deleteById: (id) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `admin/users/${id}`;\r\n        return axiosClient.delete(url,config);\r\n    },\r\n    createUser: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = '/admin/users/';\r\n        return axiosClient.post(url,data,config);\r\n    },\r\n    editUser: (data, id) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = `/admin/users/${id}`;\r\n        return axiosClient.put(url,data,config)\r\n    }\r\n}\r\nexport default admin_usersAPI;","import axiosClient from './axiosClient'\r\nimport queryString from 'query-string';\r\n\r\nconst admin_announcementAPI = {\r\n    getAll: (data) =>{\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const paramString = queryString.stringify(data);\r\n        const url = `/announcement/?${paramString}`;\r\n        if(token === null) return axiosClient.get(url);\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `admin/announcement/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    deleteById:(id) => {\r\n        const url = `admin/announcement/${id}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.delete(url,config);\r\n    },\r\n    updateById: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        const url = `admin/announcement/${data.id}/`;\r\n        return axiosClient.put(url, data.formData, config)\r\n    },\r\n    createAnnouncemt: (data) => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(data);\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        };\r\n        const url = 'admin/announcement/';\r\n        return axiosClient.post(url,data,config);\r\n    },\r\n    updateVisible: (id, visible) => {\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            },\r\n        }\r\n        const url = `/admin/announcement/${id}/`;\r\n        const setVisible = { \"is_visible\": !visible, };\r\n        return axiosClient.put(url, setVisible,config);\r\n    }\r\n}\r\n\r\nexport default admin_announcementAPI;\r\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport admin_usersAPI from '../api/admin_usersAPI';\r\nimport admin_announcementAPI from '../api/admin_announcementAPI';\r\nimport admin_problemAPI from '../api/admin_problemAPI'\r\n\r\nexport const UserList = createAsyncThunk(\r\n    '/admin/users',\r\n    async(thunkAPI) => {\r\n        try {\r\n            const response = await admin_usersAPI.getAll();\r\n            return response;\r\n        } catch (error) {\r\n            console.log(\"Failed to get user list\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n);\r\n\r\nexport const AnnouncementList = createAsyncThunk(\r\n    '/admin/announcements',\r\n    async(thunkAPI) =>{\r\n        try {\r\n            const response = await admin_announcementAPI.getAll();\r\n            return response;\r\n        } catch (error) {\r\n            console.log(\"Failed to get announcement list\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const deleteAnnouncement = createAsyncThunk(\r\n    '/deleteAnnouncement',\r\n    async(id,thunkAPI) => {\r\n        try {\r\n            await admin_announcementAPI.deleteById(id);\r\n        } catch (error) {\r\n            console.log(\"fail to get user list\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n    '/deleteUser',\r\n    async(id, thunkAPI) => {\r\n        try {\r\n            await admin_usersAPI.deleteById(id);\r\n        } catch (error) {\r\n            console.log(\"fail to delete user\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const deleteProblem = createAsyncThunk(\r\n    '/deleteProblem',\r\n    async(id, thunkAPI) => {\r\n        try {\r\n            await admin_problemAPI.deleteById(id);\r\n        } catch (error) {\r\n            console.log(\"fail to delete problem\");\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const adminSlice = createSlice({\r\n    name: 'admin',\r\n    initialState: {\r\n        admin_announcements: {},\r\n        admin_users: {},\r\n        admin_problems: {},\r\n        //users\r\n        isFetchUsersSuccess: false,\r\n        //annoucement\r\n        isFetchAnnouncementsSuccess: false,\r\n            //delete\r\n        deleteSusscess: false,\r\n    },\r\n    reducers:{\r\n        clearState: (state) => {\r\n            state.deleteSusscess = false;\r\n            state.isFetchAnnouncementsSuccess = false;\r\n            state.isFetchUsersSuccess = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [UserList.fulfilled]: (state, {payload}) =>{\r\n            // state.users = payload;\r\n            state.isFetchUsersSuccess = true;\r\n            state.admin_users = payload.data;\r\n        },\r\n        [UserList.rejected]: () =>{\r\n            console.log(\"Failed to fetch userList\");\r\n           \r\n        },\r\n            //delete user\r\n        [deleteUser.fulfilled] : (state) =>{\r\n            state.deleteSusscess = true;\r\n        },\r\n        [deleteUser.rejected] : (state) => {\r\n            state.deleteSusscess = false;\r\n            console.log('Faild to delete the user');\r\n        },\r\n        //announcements\r\n        [AnnouncementList.fulfilled]: (state, {payload}) =>{\r\n            state.admin_announcements = payload.data;\r\n            state.isFetchAnnouncementsSuccess = true;\r\n        },\r\n        [AnnouncementList.rejected]: (state) =>{\r\n            state.isFetchAnnouncementsSuccess = false;\r\n            console.log(\"Failed to fetch announcements\");\r\n        },\r\n        //delete announcement\r\n        [deleteAnnouncement.fulfilled]: (state) =>{\r\n            state.deleteSusscess = true;\r\n        },\r\n        [deleteAnnouncement.rejected]: (state) =>{\r\n            state.deleteSusscess = false;\r\n            console.log(\"Failed to delete announcement\");\r\n        },  \r\n        //delete Problem\r\n        [deleteProblem.fulfilled] : (state) =>{\r\n            state.deleteSusscess = true;\r\n        },\r\n        [deleteProblem.rejected] : (state) =>{\r\n            state.deleteSusscess = false;\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport const { clearState } = adminSlice.actions;\r\nexport const adminSelector = (state) => state.admin;","import React, { useState, useEffect } from 'react'\r\nimport '../../Table.scss';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDownload, AiOutlineDelete } from 'react-icons/ai';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport admin_problemAPI from '../../../api/admin_problemAPI';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adminSelector, deleteProblem, clearState } from '../../AdminSlice';\r\nimport Switch from 'react-switch';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport './ProblemList.scss';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\nimport Collapsible from 'react-collapsible';\r\nimport { BsChevronDown } from \"react-icons/bs\"; //react-icon\r\n\r\nfunction ProblemList(props) {\r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '',\r\n        page: 1,\r\n    });\r\n\r\n    const [problems, setProblems] = useState([]);\r\n    const handleVisible = (id) => {\r\n        const update = async () =>{\r\n            try {\r\n                const response = await admin_problemAPI.updateVisible(id);\r\n                console.log(response)\r\n                if (response) {\r\n                    const newProblem = response.data;\r\n                    setProblems(\r\n                        problems.map(\r\n                            (problem) => {return newProblem.id === problem.id ? {...problem, is_visible: newProblem.is_visible} : problem}\r\n                        )\r\n                    )\r\n                }\r\n            } catch (err) {\r\n                return;\r\n            }\r\n        };\r\n        update();\r\n    }\r\n    // -- paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    // -- sorting\r\n    const [sortBy, setSortBy] = useState('-id');\r\n    const setSortByCriteria = (crit) => {\r\n        if (sortBy === '') setSortBy(crit);\r\n        else\r\n        if (sortBy.charAt[0] === '-') {\r\n            setSortBy(crit);\r\n        } else {\r\n            if (sortBy === crit) setSortBy('-'+crit);\r\n            else setSortBy(crit);\r\n        }\r\n    }\r\n    // Update filters when sortBy is changed\r\n    useEffect(() => {\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortBy\r\n        })\r\n    }, [sortBy])\r\n\r\n    // -- ReactPaginate: handle page change\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n\r\n    // -- Filtering\r\n    const [searchContent, setSearchContent] = useState('')\r\n    const [searchAuthor, setSearchAuthor] = useState('')\r\n    const [searchDifficulty, setSearchDifficulty] = useState('')\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormSubmit = (e) => {\r\n        if (e !== undefined) e.preventDefault()\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['difficulty']\r\n\r\n        if (searchContent !== '') {\r\n            newFilter = {...newFilter, contains: searchContent}\r\n        }\r\n        if (searchAuthor !== '') {\r\n            newFilter.filter_by.push('author_name')\r\n            newFilter = {...newFilter, author_name: searchAuthor}\r\n        } \r\n        if (searchDifficulty !== '') {\r\n            newFilter.filter_by.push('difficulty')\r\n            newFilter = {...newFilter, difficulty: searchDifficulty}\r\n        }\r\n        setFilters(newFilter);\r\n    }\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormReset = (e) => {\r\n        setSearchContent(''); setSearchAuthor(''); setSearchDifficulty('');\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['difficulty']\r\n        setFilters(newFilter);\r\n    }\r\n\r\n    //redux \r\n    const dispatch = useDispatch();\r\n    const { deleteSusscess } = useSelector(adminSelector);\r\n\r\n    //delete problem\r\n    const handleDeleteProblem = (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete Problem#\"+id+\"?\")) {\r\n            dispatch(deleteProblem(id));\r\n            dispatch(clearState)\r\n        }\r\n    }\r\n\r\n    // Fetching data when filters is changed\r\n    useEffect(() => {\r\n        const fetchProblems = async () => {\r\n            try {\r\n                const response = await admin_problemAPI.getAll(filters);\r\n                setProblems(response.data);\r\n                setMaxPage(response.maxpage);\r\n            } catch (error) {\r\n               console.log('Fail to fetch status: ', error); \r\n            }\r\n        }\r\n        fetchProblems();\r\n    }, [filters, deleteSusscess])\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card className='admin-card'>\r\n                    <div className=\"admin-problem-container pages-container\">\r\n                        <Collapsible trigger={[\"Search/Filter\", <BsChevronDown/>]} easing='ease'>\r\n                            <Form className=\"filter_form\">\r\n                                <div className=\"filter_form_items\">\r\n                                    <Form.Group className=\"search-content\">\r\n                                        <Form.Label>Search content</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Content\" onChange={(e)=>{setSearchContent(e.target.value)}}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"search-authorname\">\r\n                                        <Form.Label>Search for author</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Author name\" onChange={(e)=>{setSearchAuthor(e.target.value)}}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"filter-difficulty\">\r\n                                        <Form.Label>Difficulty</Form.Label>\r\n                                        <Form.Control as=\"select\" className=\"diff_filter_by\" onChange={(e)=>{setSearchDifficulty(e.target.value)}}>\r\n                                            <option value=\"\">All</option>\r\n                                            <option value=\"Easy\">Easy</option>\r\n                                            <option value=\"Medium\">Medium</option>\r\n                                            <option value=\"Hard\">Hard</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <Button variant=\"primary\" type=\"submit\" onClick={handleFilterFormSubmit}>Submit</Button>\r\n                                <Button variant=\"light\" type=\"reset\" onClick={handleFilterFormReset}>Reset</Button>\r\n                            </Form>\r\n                        </Collapsible>\r\n                        <Card>\r\n                            <Card.Header as=\"h3\" className=\"problemList-header\">\r\n                                Problem List\r\n                                <div className=\"create_button\">\r\n                                    <Link to={`/admin/problem/create`}  className=\"alter_announcement\"> <BsFillPlusCircleFill /> New</Link>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                < table >\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th onClick={() => setSortByCriteria('id')}>ID</th>\r\n                                            <th onClick={() => setSortByCriteria('title')}>Title</th>\r\n                                            <th onClick={() => setSortByCriteria('display_id')}>Display ID</th>\r\n                                            <th onClick={() => setSortByCriteria('author_name')}>Author</th>\r\n                                            <th onClick={() => setSortByCriteria('difficulty')}>Level</th>\r\n                                            <th onClick={() => setSortByCriteria('created')}>Create Time</th>\r\n                                            <th onClick={() => setSortByCriteria('is_visible')}>Visibility</th>\r\n                                            <th>Options</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            problems.length > 0 ? (\r\n                                                problems.map((problem) => (\r\n                                                    <tr key={problem.id}>\r\n                                                        <td>{problem.id}</td>\r\n                                                        <td>{problem.title}</td>\r\n                                                        <td>{problem.display_id}</td>\r\n                                                        <td>{problem.author_name}</td>\r\n                                                        <td>{problem.difficulty}</td>\r\n                                                        <td>{problem.created}</td>\r\n                                                        <td>\r\n                                                            <Switch \r\n                                                                checked={problem.is_visible}\r\n                                                                height={20} width={40}\r\n                                                                onChange={() => handleVisible(problem.id, problem.is_visible)}\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div className=\"option-cell\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <div className=\"option-button\">\r\n                                                                        <Link to={`/admin/problem/${problem.id}`} >\r\n                                                                            <Button variant=\"light\">\r\n                                                                                <AiOutlineEdit />\r\n                                                                            </Button>\r\n                                                                        </Link>\r\n\r\n                                                                    </div>\r\n                                                                    {/* <div className=\"option-button\">\r\n                                                                        <Button variant=\"light\">\r\n                                                                            <AiOutlineDownload />\r\n                                                                        </Button>\r\n                                                                    </div> */}\r\n                                                                    <div className=\"option-button\">\r\n                                                                        <Button variant=\"light\" onClick={() => handleDeleteProblem(problem.id)}>\r\n                                                                            <AiOutlineDelete />\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            ) : (\r\n                                                <tr>\r\n                                                    <td colSpan={5}>Nothing</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table >\r\n                                <div className='pagination-container'> \r\n                                    {\r\n                                        maxPage === 0\r\n                                        ? <></>\r\n                                        : <ReactPaginate \r\n                                            pageCount={maxPage}\r\n                                            pageRangeDisplayed={5}\r\n                                            marginPagesDisplayed={2}\r\n                                            onPageChange={handlePageClick}\r\n                                            containerClassName={'pagination'}\r\n                                            activeClassName={'active'}\r\n                                            breakLabel={'...'}\r\n                                            breakClassName={'break-me'}>\r\n                                        </ReactPaginate> \r\n                                    }\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Card>\r\n           </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nProblemList.propTypes = {\r\n\r\n}\r\n\r\nexport default ProblemList\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport '../../Table.scss';\r\nimport './User.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsChevronDown, BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport ReactPaginate from 'react-paginate';\r\nimport admin_usersAPI from '../../../api/admin_usersAPI';\r\nimport {Form} from 'react-bootstrap';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nfunction User(props) {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    //delete\r\n    const handleDeleteUser = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this User?\")) {\r\n            const resp = await admin_usersAPI.deleteById(id);\r\n            if (resp) {\r\n                setUsers(users.filter((user) => {return user.id !==id}))\r\n            }\r\n        }\r\n    }\r\n    // ---------------------------------------------------------------------\r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '-id',\r\n        page: 1,\r\n    });\r\n    // -- paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n    // -- sorting\r\n    const [sortBy, setSortBy] = useState('-id');\r\n    const setSortByCriteria = (crit) => {\r\n        if (sortBy === '') setSortBy(crit);\r\n        else\r\n        if (sortBy.charAt[0] === '-') {\r\n            setSortBy(crit);\r\n        } else {\r\n            if (sortBy === crit) setSortBy('-'+crit);\r\n            else setSortBy(crit);\r\n        }\r\n    }\r\n    // Update filters when sortBy is changed\r\n    useEffect(() => {\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortBy\r\n        })\r\n    }, [sortBy])\r\n\r\n    // -- ReactPaginate: handle page change\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n\r\n    // --------------- useEffect to fetch users list\r\n    useEffect(() => {\r\n        const fetchAll = async() => {\r\n            try {\r\n                const resp = await admin_usersAPI.getAll(filters)\r\n                setUsers(resp.data)\r\n                setMaxPage(resp.maxpage)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchAll()\r\n    }, [filters])\r\n\r\n    // \r\n    const [searchContent, setSearchContent] = useState('')\r\n    const [searchUserType, setSearchUserType] = useState('')\r\n\r\n    // Search&Filter form event hanlder\r\n    const handleFilterFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        let newFilter = {...filters, filter_by: []};\r\n        delete newFilter['contains'];\r\n        delete newFilter['admin_type'];\r\n        if (searchContent !== '') \r\n            newFilter['contains'] = searchContent\r\n        if (searchUserType !== '') {\r\n            newFilter.filter_by.push('admin_type')\r\n            newFilter.admin_type = searchUserType\r\n        }\r\n        setFilters(newFilter)\r\n    }\r\n    const handleFilterFormReset = () => {\r\n        setSearchContent(''); setSearchUserType('');\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['admin_type']\r\n        setFilters(newFilter);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"admin-user table-view\">\r\n                <Card className='admin-card'>\r\n                    <Collapsible trigger={[\"Search/Filter\", <BsChevronDown key='chevron-admin-user'/>]} easing='ease'>\r\n                        <Form className=\"filter_form\">\r\n                            <div className=\"filter_form_items\">\r\n                                <Form.Group className=\"search-content\">\r\n                                    <Form.Label>Search</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Content\" onChange={(e)=>{setSearchContent(e.target.value)}}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"filter-user-type\">\r\n                                    <Form.Label>User Type</Form.Label>\r\n                                    <Form.Control as=\"select\" className=\"user-type-filter-by\" onChange={(e)=>{setSearchUserType(e.target.value)}}>\r\n                                        <option value=\"\">All</option>\r\n                                        <option value=\"Regular User\">User</option>\r\n                                        <option value=\"Admin\">Admin</option>\r\n                                        <option value=\"Super Admin\">Super Admin</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <Button variant=\"primary\" type=\"submit\" onClick={handleFilterFormSubmit}>Submit</Button>\r\n                            <Button variant=\"light\" type=\"reset\" onClick={handleFilterFormReset}>Reset</Button>\r\n                        </Form>\r\n                    </Collapsible>\r\n                    <Card.Header as=\"h4\" className=\"user-header\">\r\n                        Users\r\n                        <div className=\"create_button\">\r\n                            <Link to={`/admin/user/create`} className=\"alter_announcement\"> <BsFillPlusCircleFill /> Create </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th onClick={() => setSortByCriteria('id')}>ID</th>\r\n                                        <th onClick={() => setSortByCriteria('username')}>Username</th>\r\n                                        <th onClick={() => setSortByCriteria('create_time')}>Created</th>\r\n                                        <th onClick={() => setSortByCriteria('last_login')}>Last Login</th>\r\n                                        <th onClick={() => setSortByCriteria('admin_type')}>User Type</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.length > 0 ? (\r\n                                            users.map((user) => (\r\n                                                <tr key={user.id}>\r\n                                                    <td>{user.id}</td>\r\n                                                    <td>{user.username}</td>\r\n                                                    <td>{user.create_time}</td>\r\n                                                    <td>{user.last_login}</td>\r\n                                                    <td>{user.admin_type}</td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button__items\">\r\n                                                                        <Link to={`/admin/user/${user.id}`} className=\"alter-user-button\"><AiOutlineEdit /></Link>\r\n                                                                </div>\r\n                                                                <div className=\"option-button__items\">\r\n                                                                    <Button variant=\"light\" onClick={() => { handleDeleteUser(user.id)}}>\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>No user</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        <div className='pagination-container'> \r\n                            {\r\n                                maxPage === 0\r\n                                ? <></>\r\n                                : <ReactPaginate \r\n                                    pageCount={maxPage}\r\n                                    pageRangeDisplayed={5}\r\n                                    marginPagesDisplayed={2}\r\n                                    onPageChange={handlePageClick}\r\n                                    containerClassName={'pagination'}\r\n                                    activeClassName={'active'}\r\n                                    breakLabel={'...'}\r\n                                    breakClassName={'break-me'}>\r\n                                </ReactPaginate> \r\n                            }\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n\r\n","import React, { useState } from 'react';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiLeftArrowAlt } from 'react-icons/bi';\r\n\r\nimport {BiLinkExternal} from 'react-icons/bi'\r\nimport {FiSend} from 'react-icons/fi'\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport admin_usersAPI from '../../../api/admin_usersAPI';\r\n\r\nconst LS_ACC_CREATION_DATA = 'admin-usercreation-data'\r\nconst LS_PREFIX_LIST = 'admin-cu-ltcf-'\r\n\r\nfunction ListTypeCreationForm ({formSubmitHandler}) {\r\n\tconst formUnListChange = (e) => {\r\n\t\tlocalStorage.setItem(LS_PREFIX_LIST+'unlist', e.target.value)\r\n\t}\r\n\r\n\tconst formEmListChange = (e) => {\r\n\t\tlocalStorage.setItem(LS_PREFIX_LIST+'emlist', e.target.value)\r\n\t}\r\n\r\n\tconst formFnListChange = (e) => {\r\n\t\tlocalStorage.setItem(LS_PREFIX_LIST+'fnlist', e.target.value)\r\n\t}\r\n\r\n\tconst formLnListChange = (e) => {\r\n\t\tlocalStorage.setItem(LS_PREFIX_LIST+'lnlist', e.target.value)\r\n\t}\r\n\r\n\tconst getFormData = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst splitByLine = (string) => {return string.split(/\\r\\n|\\r|\\n/)};\r\n\t\tconst splitByLineNoEmpty = (string) => {\r\n\t\t\tvar arr = string.split(/[\\r\\n]+/)\r\n\t\t\treturn arr.filter((a) => {return a!==''})\r\n\t\t};\r\n\t\tconst data = {\r\n\t\t\tuser_gen_type: 'list',\r\n\t\t\tusername_list: splitByLineNoEmpty((localStorage.getItem(LS_PREFIX_LIST+'unlist') || '')),\r\n\t\t\temail_list: splitByLine((localStorage.getItem(LS_PREFIX_LIST+'emlist') || '')),\r\n\t\t\tfname_list: splitByLine((localStorage.getItem(LS_PREFIX_LIST+'fnlist') || '')),\r\n\t\t\tlname_list: splitByLine((localStorage.getItem(LS_PREFIX_LIST+'lnlist') || '')),\r\n\t\t};\r\n\r\n\t\t['unlist', 'emlist', 'fnlist', 'lnlist'].forEach((x) => (\r\n\t\t\tlocalStorage.removeItem(LS_PREFIX_LIST+x)\r\n\t\t))\r\n\r\n\t\treturn data\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form>\r\n\t\t\t<Form.Group className='user-list-info'>\r\n\t\t\t\t<Form.Label className='user-list-lbl'>Username List</Form.Label>\r\n\t\t\t\t<Form.Control className='user-list-ta' as='textarea' rows={3} cols={100}\r\n\t\t\t\t\tonChange={(e)=>formUnListChange(e)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className='user-list-info'>\r\n\t\t\t\t<Form.Label className='user-list-lbl'>Corresponding Email List (can be empty line)</Form.Label>\r\n\t\t\t\t<Form.Control className='user-list-ta' as='textarea' rows={3} cols={100}\r\n\t\t\t\t\tonChange={(e)=>formEmListChange(e)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className='user-list-info'>\r\n\t\t\t\t<Form.Label className='user-list-lbl'>Corresponding First name List (can be empty line)</Form.Label>\r\n\t\t\t\t<Form.Control className='user-list-ta' as='textarea' rows={3} cols={100}\r\n\t\t\t\t\tonChange={(e)=>formFnListChange(e)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group className='user-list-info'>\r\n\t\t\t\t<Form.Label className='user-list-lbl'>Corresponding Last name List (can be empty line)</Form.Label>\r\n\t\t\t\t<Form.Control className='user-list-ta' as='textarea' rows={3} cols={100}\r\n\t\t\t\t\tonChange={(e)=>formLnListChange(e)}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className='user-list-control'>\r\n\t\t\t\t<Button className='user-list-submit-btn' onClick={(e) => formSubmitHandler(getFormData(e))}>Submit <FiSend/></Button>\r\n\t\t\t</Form.Group>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nfunction getRandomInteger(a, b) {\r\n\tconst mn = Math.min(a, b);\r\n\tconst mx = Math.max(a, b);\r\n\treturn Math.round(mn + (Math.random() * (mx-mn)))\r\n}\r\n\r\nfunction MacroTypeCreationForm({formSubmitHandler}) {\r\n\tconst [prefix, setPrefix] = useState('')\r\n\tconst [postfix, setPostfix] = useState('')\r\n\tconst [userCnt, setUserCnt] = useState(1)\r\n\tconst formUserCntChange = (e) => {\r\n\t\ttry {\r\n\t\t\tconst i = parseInt(e.target.value)\r\n\t\t\tif (i < 1) return;\r\n\t\t\tsetUserCnt(i);\r\n\t\t} catch (err) {\r\n\t\t\t// console.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\tconst getFormData = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst data = {\r\n\t\t\tuser_gen_type: 'macro',\r\n\t\t\tusername_prefix: prefix,\r\n\t\t\tusername_postfix: postfix,\r\n\t\t\tcreate_count: userCnt,\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Form>\r\n\t\t\t<Form.Group className='user-prefix'>\r\n\t\t\t\t<Form.Label className='user-prefix-lbl'>Username Prefix</Form.Label>\r\n\t\t\t\t<Form.Control className='user-prefix-txt' type='text'\r\n\t\t\t\t\tonChange={(e)=>(setPrefix(e.target.value))}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className='user-postfix'>\r\n\t\t\t\t<Form.Label className='user-postfix-lbl'>Username Postfix</Form.Label>\r\n\t\t\t\t<Form.Control className='user-postfix-txt' type='text'\r\n\t\t\t\t\tonChange={(e)=>(setPostfix(e.target.value))}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className='user-cnt'>\r\n\t\t\t\t<Form.Label className='user-cnt-lbl'>How many users do you want to create?</Form.Label>\r\n\t\t\t\t<Form.Control className='user-cnt-txt' type='number'\r\n\t\t\t\t\tvalue={userCnt}\r\n\t\t\t\t\tonChange={formUserCntChange}\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className='user-preview'>\r\n\t\t\t\t<Form.Label className='user-preview-lbl'>One of the Username will look something like this:</Form.Label>\r\n\t\t\t\t<span><pre className='user-preview-pre'>{prefix+getRandomInteger(0, userCnt-1)+postfix}</pre></span>\r\n\t\t\t</Form.Group>\r\n\r\n\t\t\t<Form.Group className='user-list-control'>\r\n\t\t\t\t<Button className='user-list-submit-btn' onClick={(e) => formSubmitHandler(getFormData(e))}>Submit <FiSend/></Button>\r\n\t\t\t</Form.Group>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nfunction getCreationLogFromLocalStorage() {\r\n\tvar arr = [];\r\n\ttry {\r\n\t\tarr = JSON.parse(localStorage.getItem(LS_ACC_CREATION_DATA))\r\n\t\tarr.reverse();\r\n\t} catch (err) {\r\n\t\tarr = [];\r\n\t}\r\n\treturn arr;\r\n}\r\n\r\nfunction CreateUser({ match }) {\r\n    const id = match.params.id;\r\n\tconst useForceUpdate = () => {\r\n\t\tconst [value, setValue] = useState(0); // integer state\r\n\t\treturn () => setValue(value => value + 1); // update the state to force render\r\n\t}\r\n\r\n\t// Event Handler\r\n\tconst [uselessValue, setUselessValue] = useState(0)\r\n\tconst formSubmitHandler = async (data) => {\r\n\t\ttry {\r\n\t\t\tconst resp = await admin_usersAPI.createUser(data)\r\n\t\t\tif (resp) {\r\n\t\t\t\t// console.log(\"OK\", resp)\r\n\t\t\t\tif (localStorage.getItem(LS_ACC_CREATION_DATA) === null) {\r\n\t\t\t\t\tlocalStorage.setItem(LS_ACC_CREATION_DATA, JSON.stringify([]))\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar arr = []\r\n\t\t\t\ttry {\r\n\t\t\t\t\tarr = JSON.parse(localStorage.getItem(LS_ACC_CREATION_DATA))\r\n\t\t\t\t} catch (error) { // JSON parse error\r\n\t\t\t\t\tarr = []\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst tmpid = arr.length;\r\n\t\t\t\tarr.push({\r\n\t\t\t\t\tid: tmpid,\r\n\t\t\t\t\tdata: resp.data,\r\n\t\t\t\t\twhen: (new Date()),\r\n\t\t\t\t})\r\n\t\t\t\tlocalStorage.setItem(LS_ACC_CREATION_DATA, JSON.stringify(arr))\r\n\t\t\t\ttoast.success(\r\n\t\t\t\t\t\"Success! Log #\"+tmpid+\" added.\", {\r\n\t\t\t\t\t\tposition: toast.POSITION.BOTTOM_CENTER,\r\n\t\t\t\t\t\tautoClose: 3000,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tsetUselessValue(uselessValue+1)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\t// console.log(\"ERR\", error)\r\n\t\t}\r\n\t}\r\n\tconst eraseLocalStorageLogs = () => {\r\n\t\tif (window.confirm(\"ALL LOGS will be DELETED and the data CANNOT BE RECOVERED. Are you sure?\")) {\r\n\t\t\tlocalStorage.removeItem(LS_ACC_CREATION_DATA)\r\n\t\t\tsetUselessValue(uselessValue+1)\r\n\t\t}\r\n\t}\r\n\r\n\t// user_gen_type\r\n\tconst [genType, setGenType] = useState('list')\r\n\r\n\t// Form \r\n\tconst getFormComponentFromType = {\r\n\t\t'list': <ListTypeCreationForm formSubmitHandler={formSubmitHandler}/>,\r\n\t\t'macro': <MacroTypeCreationForm formSubmitHandler={formSubmitHandler}/>,\r\n\t}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"user-creation-card\">\r\n\t\t\t\t\t\tAccount Creation Tool\r\n                        <div className=\"\">\r\n                            <Link to={`/admin/user`}  className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t<Form.Label className='user-creation-type-lbl'>Create method</Form.Label>\r\n\t\t\t\t\t\t\t<Form.Control className='user-creation-type-select' as='select' size='sm'\r\n\t\t\t\t\t\t\t\tonChange={(e)=>setGenType(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value='list'>From a list of Username</option>\r\n\t\t\t\t\t\t\t\t<option value='macro'>Generate by Numbering</option>\r\n\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t<div className='form-container'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgetFormComponentFromType[genType]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"user-creation-card-log\">\r\n\t\t\t\t\t\tCreation Log\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t<div className='log-container'>\r\n\t\t\t\t\t\t\t\t<div className='logs'>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tgetCreationLogFromLocalStorage().map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<p key={'log-'+item.id}><Link to={`/admin/user/create/log/${item.id}`}  target=\"_blank\">{item.id}# {new Date(item.when).toLocaleString()} <BiLinkExternal/></Link></p>\r\n\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<input type='hidden' className='useless-input' value={uselessValue}></input>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='controls'>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={eraseLocalStorageLogs}>DELETE ALL</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CreateUser;","import './UserCreationLog.scss'\r\nconst LS_ACC_CREATION_DATA = 'admin-usercreation-data'\r\n\r\nfunction UserCreateionLog ({match}) {\r\n\tconst id = match.params.id\r\n\tvar arr = [];\r\n\ttry {\r\n\t\tarr = JSON.parse(localStorage.getItem(LS_ACC_CREATION_DATA));\r\n\t} catch (err) {\r\n\t\tarr = [];\r\n\t}\r\n\tconsole.log('Array', arr)\r\n\r\n\treturn (\r\n\t\tarr.length > id \r\n\t\t?   <div className='log-page'>\r\n\t\t\t\t<h1>Log #{id}</h1>\r\n\t\t\t\t<em>At {new Date(arr[id].when).toLocaleString()}</em>\r\n\t\t\t\t<hr/>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEach row is seperated by a comma character (',')\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='log-content'>\r\n\t\t\t\t\t<p>username,password,email,firstname,lastname</p>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tarr[id].data.map((obj) => (\r\n\t\t\t\t\t\t\t<p key={'user-creationlog-log-'+id}>{obj.username},{obj.password},{obj.email},{obj.first_name},{obj.last_name}</p>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t: \t<div className='log-page'>\r\n\t\t\t\t<h1> Log could not be found. </h1>\r\n\t\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UserCreateionLog;","import React, { useState, useEffect } from 'react'\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport '../../Table.scss';\r\nimport './Announcement.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { adminSelector, deleteAnnouncement} from '../../AdminSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport Switch from \"react-switch\";\r\nimport admin_announcementAPI from '../../../api/admin_announcementAPI';\r\nimport Collapsible from 'react-collapsible';\r\nimport {BsChevronDown} from 'react-icons/bs';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nfunction Announcement(props) {\r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '-id',\r\n        page: 1,\r\n    });\r\n    const [announcements, setAnnouncements] = useState([]);\r\n    //for redux\r\n    const dispatch = useDispatch();\r\n    const { deleteSusscess } = useSelector(adminSelector);\r\n    //delete announcement\r\n    const HandleDeleteAnnouncement = (id) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deleteAnnouncement(id));\r\n        }\r\n    }\r\n\r\n    // -- paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    // -- sorting\r\n    const [sortBy, setSortBy] = useState('-id');\r\n    const setSortByCriteria = (crit) => {\r\n        if (sortBy === '') setSortBy(crit);\r\n        else\r\n        if (sortBy.charAt[0] === '-') {\r\n            setSortBy(crit);\r\n        } else {\r\n            if (sortBy === crit) setSortBy('-'+crit);\r\n            else setSortBy(crit);\r\n        }\r\n    }\r\n    // Update filters when sortBy is changed\r\n    useEffect(() => {\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortBy\r\n        })\r\n    }, [sortBy])\r\n\r\n    // -- ReactPaginate: handle page change\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n\r\n    useEffect (() => {\r\n        const fetchProblemByFilters = async() => {\r\n            try {\r\n                const resp = await admin_announcementAPI.getAll(filters);\r\n                setAnnouncements(resp.data)\r\n                setMaxPage(resp.maxpage)\r\n            } catch (error) {\r\n                // console.log(error);\r\n            }\r\n        }\r\n        fetchProblemByFilters();\r\n    }, [filters, deleteSusscess])\r\n\r\n    //set Visible\r\n    const handleVisible = async (id, is_visible) => {\r\n        try {\r\n            const res = await admin_announcementAPI.updateVisible(id, is_visible);\r\n            const newann = res.data;\r\n            setAnnouncements(\r\n                announcements.map(\r\n                    (ann) => ann.id === newann.id ? { ...ann, is_visible: newann.is_visible } : ann\r\n                )\r\n            )\r\n            // console.log(\"Update announcements\")\r\n        } catch (error) {\r\n            // console.log(\"Fail to set visibility:\", error);\r\n        }\r\n    }\r\n\r\n    const [searchContent, setSearchContent] = useState('')\r\n    const [searchAuthor, setSearchAuthor] = useState('')\r\n    const handleFilterFormSubmit = (e) => {\r\n        if (e !== undefined) e.preventDefault()\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n\r\n        if (searchContent !== '') {\r\n            newFilter = {...newFilter, contains: searchContent}\r\n        }\r\n        if (searchAuthor !== '') {\r\n            newFilter.filter_by.push('author_name')\r\n            newFilter = {...newFilter, author_name: searchAuthor}\r\n        } \r\n        setFilters(newFilter);\r\n    }\r\n    const handleFilterFormReset = (e) => {\r\n        setSearchContent(''); setSearchAuthor('');\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        setFilters(newFilter);\r\n    }\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"announcements-container\">\r\n                <div className=\"table-view admin-announcement\">\r\n                    <Card className='admin-card'>\r\n                        <Collapsible trigger={[\"Search/Filter\", <BsChevronDown key='chevron-admin-post'/>]} easing='ease'>\r\n                            <Form className=\"filter_form\">\r\n                                <div className=\"filter_form_items\">\r\n                                    <Form.Group className=\"search-content\">\r\n                                        <Form.Label>Search content</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Content\" onChange={(e)=>{setSearchContent(e.target.value)}}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"search-authorname\">\r\n                                        <Form.Label>Search for author</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Author name\" onChange={(e)=>{setSearchAuthor(e.target.value)}}/>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <Button variant=\"primary\" type=\"submit\" onClick={handleFilterFormSubmit}>Submit</Button>\r\n                                <Button variant=\"light\" type=\"reset\" onClick={handleFilterFormReset}>Reset</Button>\r\n                            </Form>\r\n                        </Collapsible>\r\n                        <Card>\r\n                            <Card.Header as=\"h3\" className=\"announcement-header\">\r\n                                Announcements\r\n                                <div className=\"create_button\">\r\n                                    <Link to={`/admin/announcement/new`} className=\"alter_announcement\"> <BsFillPlusCircleFill /> New</Link>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                < table >\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th onClick={() => setSortByCriteria('id')}>ID</th>\r\n                                            <th onClick={() => setSortByCriteria('title')}>Title</th>\r\n                                            <th onClick={() => setSortByCriteria('creation_time')}>Create Time</th>\r\n                                            <th onClick={() => setSortByCriteria('author_name')}>Author</th>\r\n                                            <th onClick={() => setSortByCriteria('is_visible')}>Visibility</th>\r\n                                            <th>Option</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            announcements.length > 0 ? (\r\n                                                announcements.map((announcement) => (\r\n                                                    <tr key={announcement.id}>\r\n                                                        <td>{announcement.id}</td>\r\n                                                        <td>{announcement.title}</td>\r\n                                                        <td>{announcement.creation_time}</td>\r\n                                                        <td>{announcement.author_name}</td>\r\n                                                        <td>\r\n                                                            <Switch onChange={() => handleVisible(announcement.id, announcement.is_visible)} checked={announcement.is_visible} height={20} width={40} />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <div className=\"option-cell\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <div className=\"option-button__items\">\r\n                                                                        <Link to={`/admin/announcement/${announcement.id}`} className=\"alter_announcement\"> <AiOutlineEdit /></Link>\r\n                                                                    </div>\r\n                                                                    <div className=\"option-button__items\">\r\n                                                                        <Button variant=\"light\" onClick={() => { HandleDeleteAnnouncement(announcement.id) }}>\r\n                                                                            <AiOutlineDelete />\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))\r\n                                            ) : (\r\n                                                <tr>\r\n                                                    <td colSpan={6}>Nothing</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table >\r\n                                <div className='pagination-container'> \r\n                                    {\r\n                                        maxPage === 0\r\n                                        ? <></>\r\n                                        : <ReactPaginate \r\n                                            pageCount={maxPage}\r\n                                            pageRangeDisplayed={5}\r\n                                            marginPagesDisplayed={2}\r\n                                            onPageChange={handlePageClick}\r\n                                            containerClassName={'pagination'}\r\n                                            activeClassName={'active'}\r\n                                            breakLabel={'...'}\r\n                                            breakClassName={'break-me'}>\r\n                                        </ReactPaginate> \r\n                                    }\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAnnouncement.propTypes = {\r\n\r\n}\r\n\r\nexport default Announcement\r\n\r\n","import React, { useEffect } from 'react';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport './Dashboard.scss';\r\nimport { AiOutlineUser, AiOutlineLogin, AiOutlineDashboard } from \"react-icons/ai\";\r\nimport { HiOutlineIdentification } from 'react-icons/hi';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { profileSelector, userProfile } from '../../users/Pages/Profile/profileSlice';\r\nimport { RiAdminLine } from \"react-icons/ri\";\r\nfunction Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const { id, username, admin_type, profile_pic, last_login, authored_problem, solved_problem } = useSelector(profileSelector);\r\n    useEffect(() => {\r\n        dispatch(userProfile());\r\n    }, [dispatch])\r\n\r\n    const hanldeTime = (time) => {\r\n        return new Date(time).toString().replace(\"Indochina\", \"Hanoi\");\r\n    }\r\n    return (\r\n        <div className=\"admin-content\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"admin-dashboard pages-container\">\r\n\r\n                <h2 className=\"dashboard__title\"> \r\n                    <AiOutlineDashboard className=\"dashboard__title-icon\"></AiOutlineDashboard> Dashboard\r\n                </h2>\r\n                <hr/>\r\n\r\n                <div className=\"dashboard__list\">\r\n                    <div className=\"dashboard__item dashboard__item--admin-name\">\r\n                        <div className=\"item__icon item__icon--first\">\r\n                            <AiOutlineUser className=\"item__icon-font\"></AiOutlineUser>\r\n                        </div>\r\n                        <div className=\"item__title\">Admin Name</div>\r\n                        <div className=\"item__content\">{username}</div>\r\n                    </div>\r\n                    <div className=\"dashboard__item dashboard__item--admin-type\">\r\n                        <div className=\"item__icon item__icon--second\">\r\n                            <RiAdminLine className=\"item__icon-font\"></RiAdminLine>\r\n                        </div>\r\n                        <div className=\"item__title\">Admin Type</div>\r\n                        <div className=\"item__content\">{admin_type}</div>\r\n                    </div>\r\n                    <div className=\"dashboard__item dashboard__item--last-login\">\r\n                        <div className=\"item__icon item__icon--third\">\r\n                            <AiOutlineLogin className=\"item__icon-font\"></AiOutlineLogin>\r\n                        </div>\r\n                        <div className=\"item__title\">Last Login</div>\r\n                        <div className=\"item__content item__last-login\">{hanldeTime(last_login)}</div>\r\n                    </div>\r\n                    <div className=\"dashboard__item dashboard__item--problems\">\r\n                        <div className=\"item__icon item__icon--fourth\">\r\n                            <HiOutlineIdentification className=\"item__icon-font\"></HiOutlineIdentification>\r\n                        </div>\r\n                        <div className=\"item__title\">ID</div>\r\n                        <div className=\"item__content\">{id}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Admin_profile\">\r\n                    <div className=\"admin_header\">\r\n                        <img src={profile_pic} className=\"admin_image\" alt=\"error\" />\r\n                    </div>\r\n                    <div className=\"admin_information\">\r\n                        <h4>Introduction</h4>\r\n                        <hr />\r\n                        {/* <p>Thuốc đắng giả tật, nhạc giật lên luôn</p> */}\r\n                        <p><em>This user doesn't have any information</em></p>\r\n                    </div>\r\n                </div >\r\n                <div className=\"admin__section\">\r\n                    <div className=\"admin__my-problems\">\r\n                        <h4>Authored Problems</h4>\r\n                        < table >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Display ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>difficulty</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    authored_problem.length > 0 ? (\r\n                                        authored_problem.map((problem) => (\r\n                                            <tr key={problem.id}>\r\n                                                <td>{problem.id}</td>\r\n                                                <td>{problem.display_id}</td>\r\n                                                <td>{problem.title}</td>\r\n                                                <td>{problem.difficulty}</td>\r\n\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan={5}>Nothing</td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table >\r\n                    </div>\r\n\r\n                    <div className=\"admin__my-problems\">\r\n                        <h4>Solved problems</h4>\r\n                        < table >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Display ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>difficulty</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    solved_problem.length > 0 ? (\r\n                                        solved_problem.map((problem) => (\r\n                                            <tr key={problem.id}>\r\n                                                <td>{problem.id}</td>\r\n                                                <td>{problem.display_id}</td>\r\n                                                <td>{problem.title}</td>\r\n                                                <td>{problem.difficulty}</td>\r\n\r\n                                            </tr>\r\n                                        ))\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan={5}>Nothing</td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dashboard\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, Button, Form } from 'react-bootstrap';\r\nimport './Createproblem.scss';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { BiLeftArrowAlt } from 'react-icons/bi';\r\nimport {AiFillDelete} from 'react-icons/ai'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\nimport {FiSave} from 'react-icons/fi'\r\nimport admin_problemAPI from '../../../api/admin_problemAPI';\r\n\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction isAlphaNumeric(str) {\r\n    var code, i, len;\r\n\r\n    for (i = 0, len = str.length; i < len; i++) {\r\n        code = str.charCodeAt(i);\r\n        if (!(code > 47 && code < 58) && // numeric (0-9)\r\n            !(code > 96 && code < 123)) { // lower alpha (a-z)\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nfunction Createproblem({ match }) {\r\n    const id = match.params.id;\r\n    var cardTitle = \"Create New Problem\";\r\n    var formType = \"CREATE\";\r\n    if (id !== undefined) {\r\n        formType = \"EDIT\";\r\n        cardTitle = \"Edit Problem#\"+id\r\n    }\r\n\r\n    const [display_id, setDisplay_id] = useState(() => {\r\n        const initDisplay_id = localStorage.getItem('display_id') || '';\r\n        return initDisplay_id;\r\n    });\r\n    const [title, setTitle] = useState(() => {\r\n        const initTitle = localStorage.getItem('title') || '';\r\n        return initTitle;\r\n    });\r\n    const [description, setDescription] = useState(() => {\r\n        const initDescription = localStorage.getItem('description') || '';\r\n        return initDescription;\r\n    });\r\n    const [input_description, setInput_description] = useState(() => {\r\n        const initInput_description = localStorage.getItem('input_description') || '';\r\n        return initInput_description;\r\n    });\r\n    const [output_description, setOutput_description] = useState(() => {\r\n        const initOutput_description = localStorage.getItem('output_description') || '';\r\n        return initOutput_description;\r\n    });\r\n    const [time_limit, setTime_limit] = useState(() => {\r\n        const initTime_limit = localStorage.getItem('time_limit') || '1000';\r\n        return initTime_limit;\r\n    });\r\n    const [memory_limit, setMemory_limit] = useState(() => {\r\n        const initMemory_limit = localStorage.getItem('memory_limit') || '64';\r\n        return initMemory_limit;\r\n    });\r\n    const [is_visible, setVisible] = useState(() => {\r\n        const initVisible = localStorage.getItem('is_visible') || true;\r\n        return initVisible;\r\n    });\r\n    const [difficulty, setDifficulty] = useState(() => {\r\n        const initDifficulty = localStorage.getItem('difficulty') || 'Easy';\r\n        return initDifficulty;\r\n    });\r\n    const [sample_test, setSample_test] = useState([]);\r\n\r\n    const history = useHistory();\r\n    const handleDisplay_id = (e) => {\r\n        const value = e.target.value;\r\n        setDisplay_id(value);\r\n        localStorage.setItem('display_id', value);\r\n    }\r\n    const handleTitle = (e) => {\r\n        const value = e.target.value;\r\n        setTitle(value);\r\n        localStorage.setItem('title', value);\r\n    }\r\n    const handleDescription = (e) => {\r\n        const value = e.target.value;\r\n        setDescription(value);\r\n        localStorage.setItem('description', value);\r\n    }\r\n    const handleInput_description = (e) => {\r\n        const value = e.target.value;\r\n        setInput_description(value);\r\n        localStorage.setItem('input_description', value);\r\n    }\r\n    const handleOutput_description = (e) => {\r\n        const value = e.target.value;\r\n        setOutput_description(value);\r\n        localStorage.setItem('output_description', value);\r\n    }\r\n    const handleVisible = (e) => {\r\n        const value = e.target.value;\r\n        setVisible(value);\r\n        localStorage.setItem('is_visible', value);\r\n    }\r\n    const handleTime_limit = (e) => {\r\n        const value = e.target.value;\r\n        setTime_limit(value);\r\n        localStorage.setItem('time_limit', value);\r\n    }\r\n    const handleMemory_limit = (e) => {\r\n        const value = e.target.value;\r\n        setMemory_limit(value);\r\n        localStorage.setItem('memory_limit', value);\r\n    }\r\n    const handleDifficulty = (e) => {\r\n        const value = e.target.value;\r\n        setDifficulty(value);\r\n        localStorage.setItem('difficulty', value);\r\n    }\r\n\r\n    /** Hidden test zip file */\r\n    const [currentTestZipFile, setCurrentTestZipFile] = useState(null)\r\n    const [hiddenTestZip, setHiddenTestZip] = useState(null)\r\n    const handleFileChange = (e) => {\r\n        setHiddenTestZip(e.target.files[0])\r\n    }\r\n    function getDescription(str) {\r\n        const i = str.indexOf('\\nInput\\n')\r\n        if (i >= 0) {\r\n            return str.slice(0, i)\r\n        }\r\n        else return str\r\n    }\r\n    function getInput_description(str) {\r\n        const i = str.indexOf('\\nInput\\n')\r\n        const o = str.indexOf('\\nOutput\\n')\r\n        if (i >= 0 && o > i) {\r\n            return str.slice(i + 7, o)\r\n        }\r\n        else return ''\r\n    }\r\n    function getOutput_description(str) {\r\n        const o = str.indexOf('\\nOutput\\n')\r\n        if (o >= 0) {\r\n            return str.slice(o + 8)\r\n        }\r\n        else return ''\r\n    }\r\n    useEffect(() => {\r\n        if (formType === 'EDIT') {\r\n            const fetchProblem = async () => {\r\n                try {\r\n                    const response = await admin_problemAPI.getById(id);\r\n                    setDisplay_id(response.data.display_id)\r\n                    setTitle(response.data.title);\r\n                    setDescription(getDescription(response.data.statement))\r\n                    setInput_description(getInput_description(response.data.statement))\r\n                    setOutput_description(getOutput_description(response.data.statement))\r\n                    setTime_limit(response.data.time_limit)\r\n                    setMemory_limit(response.data.memory_limit)\r\n                    setVisible(response.data.visible)\r\n                    setDifficulty(response.data.difficulty)\r\n                    setCurrentTestZipFile(response.data.test_zip)\r\n\r\n                    // set tags\r\n                    var tagIDs = response.data.tags;\r\n                    var currTags = []\r\n                    tagIDs.forEach((tag) => {\r\n                        currTags.push({id: tag.tag_name, tag_name: tag.tag_name})\r\n                    })\r\n                    setTags(currTags)\r\n\r\n                    // set sample_test\r\n                    if (Array.isArray(response.data.sample_test)) {\r\n                        setSample_test(response.data.sample_test)\r\n                    } else {\r\n                        setSample_test([])\r\n                    }\r\n                } catch (error) {\r\n                    console.log(\"fail to alter problem: \", error);\r\n                }\r\n            };\r\n            fetchProblem();\r\n        }\r\n        const fetchProblemTag = async() => {\r\n            try {\r\n                const response = await admin_problemAPI.getAllProblemTags();\r\n                var tg = []\r\n                response.data.forEach((suggestion) => {\r\n                    tg.push({...suggestion, id: String(suggestion.id)})\r\n                })\r\n                setTagSuggestions(tg)\r\n            } catch (error) {\r\n                console.log(\"fail to alter problem: \", error);\r\n            }\r\n        }\r\n        fetchProblemTag()\r\n    }, [])\r\n\r\n    function handleInput(i, event) {\r\n        const values = [...sample_test];\r\n        values[i].input = event.target.value;\r\n        setSample_test(values);\r\n    }\r\n    function handleOutput(i, event) {\r\n        const values = [...sample_test];\r\n        values[i].output = event.target.value;\r\n        setSample_test(values);\r\n    }\r\n\r\n    function handleAdd() {\r\n        const values = [...sample_test];\r\n        values.push({ input: null, output: null });\r\n        setSample_test(values);\r\n    }\r\n\r\n    function handleRemove(i) {\r\n        const values = [...sample_test];\r\n        values.splice(i, 1);\r\n        setSample_test(values);\r\n    }\r\n\r\n    const [tags, setTags] = useState([])\r\n    const [tagSuggestions, setTagSuggestions] = useState([])\r\n    const handleTagDelete = (i) => {\r\n        setTags(tags.filter((tag, index) => index !== i));\r\n    };\r\n    \r\n    const handleTagAddition = (tag) => {\r\n        tag = {...tag, tag_name: tag.tag_name.toLowerCase()};\r\n        if (isAlphaNumeric(tag.tag_name)) {\r\n            setTags([...tags, tag]);\r\n        } else {\r\n            toast.error(\"Tag should contain alphanumeric characters only\", {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 3000,\r\n            });\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    const handleTagDrag = (tag, currPos, newPos) => {\r\n        const newTags = [...tags].slice();\r\n    \r\n        newTags.splice(currPos, 1);\r\n        newTags.splice(newPos, 0, tag);\r\n    \r\n        setTags(newTags);\r\n    };\r\n    \r\n    const handleOnClearAll = () => {\r\n        setTags([]);\r\n    };\r\n\r\n    const [deleteFileCheckbox, setDeleteFileCheckBox] = useState(false)\r\n    const handleDeleteFileCheckbox = () => {\r\n        setDeleteFileCheckBox(!deleteFileCheckbox)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData()\r\n        if (id !== undefined)\r\n            formData.append('id', id);\r\n        formData.append('display_id', display_id);\r\n        formData.append('title', title);\r\n        formData.append('is_visible', is_visible);\r\n        formData.append('time_limit', time_limit);\r\n        formData.append('memory_limit', memory_limit);\r\n        formData.append('difficulty', difficulty);\r\n        formData.append('statement', description + '\\nInput\\n' + input_description + '\\nOutput\\n' + output_description);\r\n\r\n        // Prepare tag\r\n        var taggings = []\r\n        tags.forEach((tag) => {\r\n            taggings.push(tag.tag_name)\r\n        });\r\n        formData.append('tags', JSON.stringify(taggings));\r\n\r\n        // Prepare sample_test\r\n        var sendingSampleTests = [];\r\n        sample_test.forEach((sample) => {\r\n            console.log(sample)\r\n            sendingSampleTests.push(\r\n                {\"input\": sample.input, \"output\": sample.output}\r\n            )\r\n        })\r\n        formData.append('sample_test', JSON.stringify(sendingSampleTests));\r\n\r\n        // FormData\r\n        if (formType==='EDIT')\r\n            formData.append('delete-test-zip', deleteFileCheckbox)\r\n        \r\n        if (hiddenTestZip !== null) // A file is selected\r\n            formData.append('test_zip', hiddenTestZip);\r\n\r\n        if (formType==='EDIT') { // PUT to /problem\r\n            try {\r\n                const response = await admin_problemAPI.updateById({ formData, id });\r\n\r\n                console.log('Update:', response)\r\n                window.location.reload()\r\n            } catch (error) {\r\n                console.log(\"Fail to put problem: \", error);\r\n            }\r\n        } else { // POST to /problem\r\n            try {\r\n                const response = await admin_problemAPI.createProblem(formData);\r\n                if (response) {\r\n                    history.push('/admin/problem/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to post problem: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"Edit-container\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\">{cardTitle}\r\n                        <div className=\"\">\r\n                            <Link to={`/admin/problem`}  className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item className=\"cp-list cp-first\">\r\n                                <Form.Label className='lbl-required'>Display ID</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Problem's unique name id\"\r\n                                    required value={display_id} onChange={(e)=>{handleDisplay_id(e)}}\r\n                                />\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"cp-list\">\r\n                                <Form.Label className='lbl-required'>Title</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Problem's Title\"\r\n                                    required value={title} onChange={(e)=>{handleTitle(e)}}\r\n                                />\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"cp-list\">\r\n                                <Form.Label className='lbl-required'>Statement</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={10} cols={150} required\r\n                                    value={description} onChange={(e) => { handleDescription(e) }}>\r\n                                </Form.Control>\r\n                                {/* <Editor></Editor> */}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"cp-list\">\r\n                                <Form.Label className='lbl-required'>Input Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={10} cols={150} required\r\n                                    value={input_description} onChange={(e) => { handleInput_description(e) }}>\r\n                                </Form.Control>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"cp-list\">\r\n                                <Form.Label className='lbl-required'>Output Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={10} cols={150} required\r\n                                    value={output_description} onChange={(e) => { handleOutput_description(e) }}>\r\n                                </Form.Control>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"cp-list cp-first constraint-list\">\r\n                                <ListGroup.Item className=\"cp-list\">\r\n                                    <Form.Label className='lbl-required'>Time Limit (ms)</Form.Label>\r\n                                    <Form.Control type=\"number\" placeholder=\"Problem's Time Limit\"\r\n                                        required value={time_limit} onChange={(e)=>{handleTime_limit(e)}}\r\n                                    />\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item className=\"cp-list\">\r\n                                    <Form.Label className='lbl-required'>Memory Limit (MB)</Form.Label>\r\n                                    <Form.Control type=\"number\" placeholder=\"Problem's Time Limit\"\r\n                                        required value={memory_limit} onChange={(e)=>{handleMemory_limit(e)}}\r\n                                    />\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item className=\"cp-list\">\r\n                                    <Form.Label>Difficulty</Form.Label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom value={difficulty} onChange={(e) => { handleDifficulty(e) }} >\r\n                                        <option value=\"Easy\">Easy</option>\r\n                                        <option value=\"Medium\">Medium</option>\r\n                                        <option value=\"Hard\">Hard</option>\r\n                                    </Form.Control>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item className=\"cp-list\">\r\n                                    <Form.Label>Visibility</Form.Label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom value={is_visible} onChange={(e) => { handleVisible(e) }} >\r\n                                        <option value={true}>true</option>\r\n                                        <option value={false}>false</option>\r\n                                    </Form.Control>\r\n                                </ListGroup.Item>\r\n                            </ListGroup.Item> {/* Time Mem Diff Visible */}\r\n\r\n                            <ListGroup.Item className=\"cp-list\">\r\n                                <Form.Label>Sample Tests</Form.Label>\r\n                                <div className=\"Sample\" >\r\n                                    {\r\n                                        sample_test.map((sample, idx) => {\r\n                                            return (\r\n                                                <div key={`sample-test-${idx}`} className=\"cp-second\">\r\n                                                    <div className=\"cp-first\">\r\n                                                        <div className=\"textArea-2\">\r\n                                                            <Form.Label className='lbl-required'>Input #{idx+1}</Form.Label>\r\n                                                            <Form.Control as=\"textarea\" rows={5} cols={150}\r\n                                                                className=\"textArea\"\r\n                                                                value={sample.input || \"\"}\r\n                                                                onChange={e => handleInput(idx, e)}\r\n                                                            >\r\n                                                            </Form.Control>\r\n                                                        </div>\r\n                                                        <div className=\"textArea-2\">\r\n                                                            <Form.Label className='lbl-required'>Output #{idx+1}</Form.Label>\r\n                                                            <Form.Control as=\"textarea\" rows={5} cols={150}\r\n                                                                className=\"textArea\"\r\n                                                                value={sample.output || \"\"}\r\n                                                                onChange={e => handleOutput(idx, e)}\r\n                                                            >\r\n                                                            </Form.Control>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"textArea-2\">\r\n                                                        <Button className=\"removeButton\" onClick={() => handleRemove(idx)}>\r\n                                                            <AiFillDelete/>\r\n                                                        </Button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    <Button className=\"addButton\" onClick={() => handleAdd()}>\r\n                                        Add <BsPlusCircle/>\r\n                                    </Button>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"cp-list\">\r\n                                <Form.Group className=\"hidden-test\">\r\n                                    <Form.Label>Hidden Test Zip</Form.Label>\r\n                                    <Form.Control type=\"file\" onChange={handleFileChange} name=\"test-zip\"/>\r\n                                    <div className='div-test-in-use-zip'>Current zip file: <span>{currentTestZipFile?currentTestZipFile:'None'}</span></div>\r\n\r\n                                    <Form.Check type='checkbox' className={formType==='EDIT'?\"chkbox-nothidden\":\"chkbox-hidden\"} id=\"test-zip-chkbox\"\r\n                                        onChange={handleDeleteFileCheckbox}\r\n                                        checked={deleteFileCheckbox} label=\"Delete current zip file?\"/>\r\n                                </Form.Group>\r\n                            </ListGroup.Item>\r\n                                \r\n                            <ListGroup.Item className=\"cp-list cp-first\">\r\n                                <Form.Group className=\"tagging\">\r\n                                    <Form.Label>Tags</Form.Label>\r\n                                    <div className='tag-container'>\r\n                                        <ReactTags \r\n                                            tags={tags} handleDelete={handleTagDelete} handleAddition={handleTagAddition} handleDrag={handleTagDrag}\r\n                                            onClearAll={handleOnClearAll} \r\n                                            labelField={'tag_name'}\r\n                                            suggestions={tagSuggestions}\r\n                                            minQueryLength={3}\r\n                                            maxLength={32}\r\n                                            autofocus={false}\r\n                                            readOnly={false}\r\n                                            allowUnique={true}\r\n                                            allowDragDrop={true}\r\n                                            inline={true}\r\n                                            allowAdditionFromPaste={true}\r\n                                            clearAll={true}\r\n                                        />\r\n                                        <Button className='tag-clearall-btn' onClick={handleOnClearAll}>Clear All</Button>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </ListGroup.Item>\r\n                            <hr/>\r\n                            <Button type=\"submit\" className=\"cp-btn\">Save <FiSave/></Button>\r\n                        </ListGroup>\r\n                    </Form >\r\n                    </Card.Body>\r\n                </Card>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Createproblem;","import React, { useState, useEffect } from 'react'\r\nimport { Card, ListGroup, Button, Form, FormControl } from 'react-bootstrap';\r\nimport './EditAnnouncement.scss';\r\nimport admin_announcementAPI from '../../../api/admin_announcementAPI';\r\nimport { useForm } from 'react-hook-form';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Switch from 'react-switch';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiLeftArrowAlt } from 'react-icons/bi';\r\n\r\n//\r\nfunction EditAnnouncement({ match }) {\r\n    const id = match.params.id;\r\n    var cardTitle = (id===undefined?'New Announcement':'Edit Announcement #'+id)\r\n\r\n    const [title, setTitle] = useState(() => {\r\n        const initTitle = localStorage.getItem('ann_title') || '';\r\n        return initTitle;\r\n    });\r\n    const [content, setContent] = useState(() => {\r\n        const initCotent = localStorage.getItem('ann_content') || '';\r\n        return initCotent;\r\n    });\r\n    const [visible, setVisible] = useState(true);\r\n    const { register, handleSubmit } = useForm();\r\n    const history = useHistory();\r\n\r\n    const handleTitle = (e) => {\r\n        const value = e.target.value;\r\n        setTitle(value);\r\n        localStorage.setItem('ann_title', value)\r\n    }\r\n    const handleContent = (e) => {\r\n        const value = e.target.value;\r\n        setContent(value);\r\n        localStorage.setItem('ann_content', value)\r\n    }\r\n    const onSubmit = async (formData) => {\r\n        formData.title = title;\r\n        formData.content = content;\r\n        formData.is_visible = visible;\r\n        if (!isNaN(id)) {\r\n            try {\r\n                const response = await admin_announcementAPI.updateById({ formData, id });\r\n\r\n                if (response) {\r\n                    history.push('/admin/announcement/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to put problem: \", error);\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                const response = await admin_announcementAPI.createAnnouncemt(formData);\r\n                if (response) {\r\n                    history.push('/admin/announcement/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to post problem: \", error);\r\n            }\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (!isNaN(id)) {\r\n            const fetchAnnouncement = async () => {\r\n                try {\r\n                    const response = await admin_announcementAPI.getById(id);\r\n                    setTitle(response.data.title);\r\n                    setContent(response.data.content);\r\n                    setVisible(response.data.is_visible);\r\n                } catch (error) {\r\n                    console.log(\"fail to alter announcement: \", error);\r\n                }\r\n            };\r\n            fetchAnnouncement();\r\n        }\r\n    }, [id])\r\n    const updateVisibility = () => {\r\n        setVisible(!visible);\r\n    }\r\n    return (\r\n        <div className=\"announcements-container\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"edit_form\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\">\r\n                        {cardTitle}\r\n                        <div className=\"\">\r\n                            <Link to={`/admin/announcement`}  className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form onSubmit={handleSubmit(onSubmit)} className=\"announForm\">\r\n                            <ListGroup.Item className=\"announForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>Title</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    {...register(\"title\")}\r\n                                    value={title}\r\n                                    onChange={(e) => { handleTitle(e) }}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"announForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span> Content</span> <br /> <br />\r\n                                <Form.Control as=\"textarea\" rows={10} cols={150} {...register(\"content\")}\r\n                                    value={content} onChange={(e) => { handleContent(e) }}>\r\n                                </Form.Control>\r\n                            </ListGroup.Item>\r\n                            <br />\r\n                            <label htmlFor=\"\">Visible</label>\r\n                            <br />\r\n                            <Switch checked={visible} onChange={() => updateVisibility()} />\r\n                            <br />\r\n                            <hr />\r\n                            <Button type=\"submit\" className=\"save_button\">Save</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EditAnnouncement;\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Form, ListGroup } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport './Problem_detail.scss';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport oj_problemAPI from '../../../api/oj_problemAPI';\r\nimport Navbar from '../../Navbar'\r\nimport { AiOutlineAlignLeft } from 'react-icons/ai'\r\nimport { GrCircleInformation } from 'react-icons/gr'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport 'katex/dist/katex.min.css'\r\nimport Latex from 'react-latex-next'\r\nimport { toast } from 'react-toastify';\r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\nrequire('codemirror/mode/xml/xml.js');\r\nrequire('codemirror/mode/python/python.js');\r\nrequire('codemirror/mode/clike/clike.js');\r\nrequire('codemirror/mode/javascript/javascript.js');\r\n\r\nconst LCSTORAGE_CODE_EDITOR_PROBLEM = \"lcsCodeEditorProblem\";\r\n\r\nfunction Problem_detail({ match }) {\r\n    const id = match.params.id;\r\n    const [problem, setProblem] = useState({\r\n        notfound: true,\r\n    });\r\n    const history = useHistory();\r\n    // check login\r\n    const [checkLogin, setCheckLogin] = useState(false);\r\n\r\n    // check content\r\n    const { register, handleSubmit, error } = useForm();\r\n    const [sample_test, setSample_test] = useState([])\r\n\r\n    const [language, setLanguage] = useState('Python3');\r\n\r\n    // Methods: Use LocalStorage to store Code editor content\r\n    function saveEditorContentToLocalStorage(value) {\r\n        localStorage.setItem(LCSTORAGE_CODE_EDITOR_PROBLEM + id, value);\r\n    }\r\n    function getEditorContentFromLocalStorage() {\r\n        return localStorage.getItem(LCSTORAGE_CODE_EDITOR_PROBLEM+id);\r\n    }\r\n    function removeEditorContentFromLocalStorage() {\r\n        localStorage.removeItem(LCSTORAGE_CODE_EDITOR_PROBLEM+id);\r\n    }\r\n\r\n    // ===\r\n    function onChangeUploadFile(e) {\r\n        let files = e.target.files;\r\n        let reader = new FileReader();\r\n        reader.readAsText(files[0]);\r\n        reader.onload = (e) => {\r\n            saveEditorContentToLocalStorage(e.target.result);\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n        data.content = getEditorContentFromLocalStorage();\r\n        data.problem_id = parseInt(data.problem_id);\r\n        try {\r\n            //removeEditorContentFromLocalStorage();\r\n            const response = await oj_statusAPI.postProblem(data);\r\n            if (response) {\r\n                history.push('/status/');\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Fail to post problem: \", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchProblem_detail = async () => {\r\n            const response = await oj_problemAPI.getById(id);\r\n            setProblem(response.data);\r\n            if (JSON.stringify(response.data.sample_test) === JSON.stringify({})) {\r\n                setSample_test([])\r\n            } else {\r\n                if (response.data.sample_test instanceof Array)\r\n                    setSample_test(response.data.sample_test)\r\n                else\r\n                    setSample_test([])\r\n            }\r\n            // check login\r\n            if (localStorage.getItem('token') !== null) setCheckLogin(true);\r\n            else setCheckLogin(false);\r\n\r\n        };\r\n        fetchProblem_detail();\r\n    }, [])\r\n\r\n    function getDescription(str) {\r\n        str = String(str)\r\n        let i = str.indexOf('Input')\r\n        if (i >= 0) {\r\n            return str.slice(0, i)\r\n        }\r\n        else return str\r\n    }\r\n    function getInput_description(str) {\r\n        str = String(str)\r\n        let i = str.indexOf('Input')\r\n        let o = str.indexOf('Output')\r\n        if (i >= 0 && o > i) {\r\n            return str.slice(i + 6, o)\r\n        }\r\n        else return ''\r\n    }\r\n    function getOutput_description(str) {\r\n        str = String(str)\r\n        let o = str.indexOf('Output')\r\n        if (o >= 0) {\r\n            return str.slice(o + 7)\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    function copyToClipboard(element) {\r\n        let copyText = document.getElementById(element);\r\n        copyText.select();\r\n        document.execCommand(\"copy\");\r\n        toast.success('Copied', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n            autoClose: 1000,\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"problem_detail-flex-container pages-container\">\r\n                <div className=\"problem-main\">\r\n                    <Card className=\"problem-main__item\">\r\n                        {/* <Card.Header as=\"h3\">{problem.title}</Card.Header> */}\r\n                        {\r\n                        problem.notfound\r\n                        ?   <Card.Body>This problem doesn't exist</Card.Body>\r\n                        :   <Card.Body>\r\n                                <div className=\"problem-description-header\">\r\n                                    <h2 className=\"title\">{problem.title}</h2>\r\n                                    <strong>Time limit:</strong> {problem.time_limit} ms \r\n                                    <br/>\r\n                                    <strong>Memory limit:</strong> {problem.memory_limit} MB\r\n                                    <hr/>\r\n                                </div>\r\n                                {/* END PROBLEM DESCRIPTION HEADER */}\r\n\r\n                                <div className=\"problem-description-body\">\r\n                                <p className=\"pdbody-item\">Problem Description:</p>\r\n                                <Latex className=\"description\">{getDescription(problem.statement)}</Latex>\r\n\r\n                                <p className=\"pdbody-item\">Input Description:</p>\r\n                                <Latex className=\"input_description\">{getInput_description(problem.statement)}</Latex>\r\n\r\n                                <p className=\"pdbody-item\">Output Description:</p>\r\n                                <Latex className=\"latex output_description\">{getOutput_description(problem.statement)}</Latex>\r\n\r\n                                <p className=\"pdbody-item\">Sample Test:</p>\r\n\r\n                                {\r\n                                    sample_test.length === 0\r\n                                    ? <p> This problem doesn't have any Sample tests..</p>\r\n                                    : sample_test.map((sample, idx) => {\r\n                                        return (\r\n                                            <div className=\"pd__sample\" key={`${sample}-${idx}`}>\r\n                                                <div className=\"sample-row\">\r\n                                                    <div className=\"sample-row-item\">\r\n                                                        <div>Input {idx + 1}</div>\r\n                                                        <Form.Control id={`input_${idx}`} as=\"textarea\" readOnly\r\n                                                            className=\"textArea\"\r\n                                                            value={sample.input || \"\"}\r\n                                                        >\r\n                                                        </Form.Control>\r\n                                                        <button className=\"copy-btn\" onClick={() => copyToClipboard(`input_${idx}`)}>copy</button>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"sample-row-item\">\r\n                                                        <div>Output {idx + 1}</div>\r\n                                                        <Form.Control id={`output_${idx}`} as=\"textarea\" readOnly\r\n                                                            className=\"textArea\"\r\n                                                            value={sample.output || \"\"}\r\n                                                        >\r\n                                                        </Form.Control>\r\n                                                        <button className=\"copy-btn\" onClick={() => copyToClipboard(`output_${idx}`)}>copy</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div> \r\n                                {/* END PROBLEM DESCRIPTION BODY */}\r\n\r\n                            </Card.Body>\r\n                        }\r\n                    </Card>\r\n                    <Card className=\"problem-main__item\">\r\n                        <Card.Body>\r\n                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className='submit-nav'>\r\n                                    <div className=\"dropdown-languege submit-nav__item\">\r\n                                        <label htmlFor=\"languege\">Language: </label>\r\n                                        <Form.Control as=\"select\" size=\"sm\" custom {...register(\"language\")}\r\n                                            onChange={(e) => setLanguage(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Python3\">Python3</option>\r\n                                            <option value=\"Python2\">Python2</option>\r\n                                            <option value=\"Java\">Java</option>\r\n                                            <option value=\"Cpp\">C++</option>\r\n                                            <option value=\"C\">C</option>\r\n                                        </Form.Control>\r\n                                        <br /><br />\r\n                                    </div>\r\n                                    <div className=\"problem-id submit-nav__item\">\r\n                                        <Form.Label></Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"hidden\"\r\n                                            size=\"sm\"\r\n                                            value={id}\r\n                                            {...register(\"problem_id\")}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"upload_file\">\r\n                                        <Form.File id=\"formcheck-api-regular\">\r\n                                            <Form.File.Input onChange={(e) => { onChangeUploadFile(e) }} />\r\n                                        </Form.File>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"editor-container\">\r\n                                    <CodeMirror\r\n                                        value={getEditorContentFromLocalStorage()}\r\n                                        onChange={(editor, data, value) => { saveEditorContentToLocalStorage(value) }}\r\n                                        options={{\r\n                                            matchBrackets: true,\r\n                                            styleActiveLine: true,\r\n                                            theme: \"material\",\r\n                                            mode: {\r\n                                                'Python3': 'python',\r\n                                                'Python2': 'python',\r\n                                                'Java': 'text/x-java',\r\n                                                'C': 'text/x-csrc',\r\n                                                'Cpp': 'text/x-c++src',\r\n                                            }[language],\r\n                                            lineNumbers: true,\r\n                                            lineWrapping: false,\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <br />\r\n                                <div className=\"problem-main__footer\">\r\n                                    {checkLogin === true && !problem.notfound ? (\r\n                                        <Button variant=\"primary\" type=\"submit\" id=\"submit-button\" >Submit</Button>\r\n                                    ) :\r\n                                        (\r\n                                            <Button href=\"#\" variant=\"secondary\" disabled id=\"disable-button\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        )}\r\n                                </div>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"right-column\">\r\n                    <Card className=\"submit-card right-column__item\">\r\n                        <Card.Body>\r\n                            <Link to={`/status/?filter_by=problem&problem=${problem.title}`} className='to_statusPage_card'>\r\n                                <AiOutlineAlignLeft className=\"to_statusPage_card-item \" />\r\n                                <p>Submissions</p>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"problem-information\">\r\n                        <Card className=\"right-column__item\">\r\n                            <Card.Header className=\"problem-information_header\"> \r\n                                <div className=\"title\"><GrCircleInformation/><span>Information</span></div>\r\n                            </Card.Header>\r\n                            <ListGroup variant=\"flush\">\r\n                                {/* <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Id</p>\r\n                                    <p>{problem.id}</p>\r\n                                </ListGroup.Item> */}\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Time Limit</p>\r\n                                    <p>{problem.time_limit} ms</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Memory Limit</p>\r\n                                    <p>{problem.memory_limit} MB</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Create by</p>\r\n                                    <p>{problem.author_name}</p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item className=\"problem-information__item\">\r\n                                    <p>Level</p>\r\n                                    <p>{problem.difficulty}</p>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Problem_detail\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap';\r\nfunction Search(props) {\r\n    const { onSubmit } = props;\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    function handleSearchTerm(e) {\r\n        const value = e.target.value\r\n        setSearchTerm(value);\r\n    }\r\n    function handleSearch(e){\r\n        if(!onSubmit) return;\r\n        onSubmit(searchTerm);\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div>\r\n            <Form inline onSubmit={handleSearch}>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={handleSearchTerm}/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\nimport { Form, FormControl } from 'react-bootstrap';\r\n\r\nfunction TextFieldForm({onSubmit, placeHolder}) {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    function handleSearchTerm(e) {\r\n        const value = e.target.value\r\n        setSearchTerm(value);\r\n    }\r\n    function handleSearch(e){\r\n        if(!onSubmit) return;\r\n        onSubmit(searchTerm);\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div>\r\n            <Form inline onSubmit={handleSearch}>\r\n                <FormControl type=\"text\" placeholder={placeHolder} className=\"mr-sm-2\" onChange={handleSearchTerm}/>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextFieldForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport '../Page.scss';\r\nimport './News.scss';\r\nimport { Card } from 'react-bootstrap';\r\nimport oj_announcementAPI from '../../../api/oj_announcementAPI';\r\nimport Announcement from '../Home/Announcement';\r\nimport Search from '../../Components/Search';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../../Components/Pagination/Paginate.css'\r\nimport TextFieldForm from '../../Components/TextFieldForm';\r\n\r\nfunction News() {\r\n    // ## useState: announcement\r\n    const [announcement, setAnnouncement] = useState([]);\r\n    // ## useState: announcement filters \r\n    const [filters, setFilters] = useState({\r\n        filter_by: [],\r\n        sort_by: '-id',\r\n        page: 1,\r\n    });\r\n\r\n    // ## USE EFFECT\r\n    useEffect(() => {\r\n        const fetchAnnouncement = async () => {\r\n            try {\r\n                const response = await oj_announcementAPI.getAll(filters);\r\n                setAnnouncement(response.data);\r\n                setMaxPage(response.maxpage);\r\n            } catch (error) {\r\n                console.log('Fail to fetch announcement: ', error);\r\n            }\r\n        }\r\n        fetchAnnouncement();\r\n    }, [filters])\r\n\r\n    // ## useState: paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    // Paginate: Page click handler\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n\r\n    // search process\r\n    function handleSearchContentForm(newValue) {\r\n        var newFilter = {...filters}\r\n        delete newFilter['contains']\r\n        if (newValue!=='') {\r\n            newFilter.contains=newValue\r\n        }\r\n        setFilters(newFilter)\r\n    };\r\n    function handleSearchAuthorForm(newValue) {\r\n        var newFilter = {...filters}\r\n        delete newFilter['author_name']\r\n        if (newValue!=='') {\r\n            newFilter.filter_by=['author_name']\r\n            newFilter.author_name=newValue\r\n        }\r\n        setFilters(newFilter)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"pages-container\">\r\n                <div className=\"news-container\">\r\n                    <Card className=\"news-card\">\r\n                        <Card.Header as=\"h3\" className=\"announcement-header\">\r\n                            Announcement\r\n                            <div className=\"news-features\">\r\n                                <div className=\"news-features__items\">\r\n                                    <Search onSubmit={handleSearchContentForm} />\r\n                                </div>\r\n                                <div className=\"news-features__items\">\r\n                                    <TextFieldForm onSubmit={handleSearchAuthorForm} placeHolder={\"Author\"}/>\r\n                                </div>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <div className=\"card-container\">\r\n                                {\r\n                                    announcement.length === 0 \r\n                                    ? <p>Nothing</p>\r\n                                    : announcement.map(annou => {\r\n                                        return <Announcement title={annou.title}\r\n                                            content={annou.content}\r\n                                            creation_time={annou.creation_time}\r\n                                            author={annou.author_name} key={annou.id}\r\n                                            id={annou.id}\r\n                                            is_visible={annou.is_visible}\r\n                                        />\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className='pagination-container'>\r\n                            {\r\n                                maxPage === 0\r\n                                ? <></>\r\n                                : <ReactPaginate \r\n                                    pageCount={maxPage}\r\n                                    pageRangeDisplayed={5}\r\n                                    marginPagesDisplayed={2}\r\n                                    onPageChange={handlePageClick}\r\n                                    containerClassName={'pagination'}\r\n                                    activeClassName={'active'}\r\n                                    breakLabel={'...'}\r\n                                    breakClassName={'break-me'}\r\n                                ></ReactPaginate> \r\n                            }</div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                localStorage.getItem('role') === \"Admin\" || localStorage.getItem('role') === \"Super Admin\" ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to={{ pathname: '404', state: { from: props.location } }} />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nexport const PrivateRouteSAdmin = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                localStorage.getItem('role') === \"Super Admin\" ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to={{ pathname: '404', state: { from: props.location } }} />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n","import { Card } from 'react-bootstrap';\r\nimport { UnControlled  as CodeMirror } from 'react-codemirror2';\r\n\r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\n\r\nfunction StatusDetailSource({content, language}) {\r\n    const getCodeMirrorModeFromLanguage = (lang) => {\r\n        return {\r\n            'PyPy3': 'python',\r\n            'PyPy': 'python',\r\n            'Python3': 'python',\r\n            'Python2': 'python',\r\n            'Java': 'text/x-java',\r\n            'C': 'text/x-csrc',\r\n            'Cpp': 'text/x-c++src',\r\n        }[lang]\r\n    };\r\n\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"source-code status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\">Source Code</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className=\"editor-container\">\r\n\t\t\t\t\t\t\t<CodeMirror\r\n\t\t\t\t\t\t\t\tvalue={content}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tmatchBrackets: true,\r\n\t\t\t\t\t\t\t\t\tstyleActiveLine: true,\r\n\t\t\t\t\t\t\t\t\ttheme: \"material\",\r\n\t\t\t\t\t\t\t\t\tmode: getCodeMirrorModeFromLanguage(language),\r\n\t\t\t\t\t\t\t\t\tlineNumbers: true,\r\n\t\t\t\t\t\t\t\t\treadOnly: 'nocursor'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"source-code status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\">Source code</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default StatusDetailSource;\r\n","import { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { V2C, VS } from '../../../../constant/SubmissionVerdict';\r\n\r\n\r\nfunction StatusDetailSummary({ submission }) {\r\n\r\n\tconst timeFormatter = (timestring) => {\r\n\t\tif (typeof timestring === undefined) return \"\";\r\n\t\t// var d = new Date(timestring);\r\n\t\t// var dformat = [d.getMonth()+1, d.getDate(), d.getFullYear()].join('/')+' '+[d.getHours(),d.getMinutes(),d.getSeconds()].join(':');\r\n\t\t// return dformat;\r\n\t\treturn (new Date(timestring)).toLocaleString();\r\n\t};\r\n\r\n\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission-info status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Submission Info</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Submission Time</td>\r\n\t\t\t\t\t\t\t\t\t<td>{timeFormatter(submission.submit_time)}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Author</td>\r\n\t\t\t\t\t\t\t\t\t<td>{submission.author_name}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Problem</td>\r\n\t\t\t\t\t\t\t\t\t<td><Link to={`/problem/${submission.problem_id}`}>{submission.problem_title}</Link></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Language</td>\r\n\t\t\t\t\t\t\t\t\t<td>{submission.language}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Status</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div className={`verdict-text ${V2C(submission.verdict)}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{submission.verdict}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Execution Time</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{submission.time} ms\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Memory Usage</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{submission.memory} KB\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission-info status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Submission Info</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default StatusDetailSummary;\r\n","import Collapsible from 'react-collapsible'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction StatusDetailSample({ samples }) {\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_sample status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Sample Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsamples.length === 0 \r\n\t\t\t\t\t\t\t? <p> This problem does not have any sample tests.</p>\r\n\t\t\t\t\t\t\t: samples.map((sample, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Collapsible key={'sdsample-c'+idx} trigger={[`Sample Test #${idx+1}: ${sample.verdict} (CPU:${sample['cpu time']}ms, MEM:${sample['memory used']}KB)`]} easing='ease'>\r\n\t\t\t\t\t\t\t\t\t\t<table className='test-result'>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stderr</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-value'><pre>{sample['stderr']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stdout</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-value'><pre>{sample['stdout']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</Collapsible>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_sample status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Sample Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction StatusDetailHidden({ hiddens }) {\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_hidden status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Hidden Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\thiddens.length === 0 \r\n\t\t\t\t\t\t\t\t? <p> This problem does not have any hidden tests.</p>\r\n\t\t\t\t\t\t\t\t: hiddens.map((hidden, idx) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Collapsible key={'sdhidden-c'+idx} trigger={[`Hidden Test #${idx+1}: ${hidden.verdict} (CPU:${hidden['cpu time']}ms, MEM:${hidden['memory used']}KB)`]} easing='ease'>\r\n\t\t\t\t\t\t\t\t\t\t\t<table className='test-result'>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stderr</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-value'><pre>{hidden['stderr']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stdout</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-value'><pre>{hidden['stdout']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</Collapsible>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_hidden status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Hidden Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {\r\n\tStatusDetailSample,\r\n\tStatusDetailHidden,\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../../Navbar';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport './Status_detail.scss';\r\n\r\n// StatusDetailComponent\r\nimport StatusDetailSource from './StatusDetailComponent/SDSource.js'\r\nimport StatusDetailSummary from './StatusDetailComponent/SDSummary.js';\r\nimport {StatusDetailSample, StatusDetailHidden} from './StatusDetailComponent/SDTestcase.js';\r\nimport { Card } from 'react-bootstrap';\r\n\r\n//code mirror editor \r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\n\r\nfunction Status_detail({ match }) {\r\n    const id = match.params.id;\r\n    const [status_detail, setStatus_detail] = useState({\r\n        \"id\": -1,\r\n        \"content\": \"\",\r\n        \"language\": \"\",\r\n        \"output\": {\r\n            \"sample_test\": [],\r\n            \"hidden_test\": [],\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchStatus_detail = async () => {\r\n            const response = await oj_statusAPI.getById(id);\r\n            setStatus_detail(response.data);\r\n        };\r\n        fetchStatus_detail();\r\n    },[id])\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            {\r\n                status_detail.id===-1\r\n                ? <div className=\"status_details-container pages-container\">\r\n                    <h2>Submission not found.</h2>\r\n                    <hr />\r\n                </div>\r\n                : <div className=\"status_details-container pages-container\">\r\n                    <h2>Submission #{status_detail.id}</h2>\r\n                    <hr />\r\n\r\n                    <StatusDetailSource key={'sdsource'+status_detail.id} content={status_detail.content} language={status_detail.language}/>\r\n                    <StatusDetailSummary key={'sdsummary'+status_detail.id} submission={status_detail}/>\r\n                    <StatusDetailSample key={'sdsample'+status_detail.id} samples={status_detail.output.sample_test}/>\r\n                    <StatusDetailHidden key={'sdhidden'+status_detail.id} hiddens={status_detail.output.hidden_test}/>\r\n                </div>\r\n            }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Status_detail\r\n","import React from 'react'\r\nimport './Social_icons.scss';\r\nfunction Social_icon() {\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-facebook-f\"></i></div>\r\n                    <span>Facebook</span>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-twitter\"></i></div>\r\n                    <span>Twitter</span>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-github\"></i></div>\r\n                    <span>Instagram</span>\r\n                </div>\r\n\r\n\r\n                <div className=\"button\">\r\n                    <div className=\"icon\"><i className=\"fab fa-youtube\"></i></div>\r\n                    <span>YouTube</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Social_icon\r\n","import React, { useEffect } from 'react';\r\nimport Social_icon from '../../Components/Social_icons/Social_icon';\r\nimport './Profile.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { profileSelector, userProfile } from './profileSlice';\r\nfunction Profile() {\r\n    const dispatch = useDispatch();\r\n    const { username, email, first_name, last_name } = useSelector(profileSelector);\r\n    useEffect(() => {\r\n        dispatch(userProfile());\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper pages-container\">\r\n                <div className=\"right\">\r\n                    <div className=\"info\">\r\n                        <h3>Information</h3>\r\n                        <div className=\"info_data\">\r\n                            <div className=\"data\">\r\n                                <h4>Email</h4>\r\n                                <p>{email}</p>\r\n                            </div>\r\n                            <div className=\"data\">\r\n                                <h4>Username</h4>\r\n                                <p>{username}</p>\r\n                            </div>\r\n                            <div className=\"data\">\r\n                                <h4>First name</h4>\r\n                                <p>{first_name}</p>\r\n                            </div>\r\n                            <div className=\"data\">\r\n                                <h4>Last name</h4>\r\n                                <p>{last_name}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Social\">\r\n                        <h3>Social</h3>\r\n                        <div className=\"social_media\">\r\n                            <Social_icon/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form , Button} from 'react-bootstrap'\r\nimport oj_profileAPI from '../../../api/oj_profileAPI';\r\nimport './EditProfile.scss';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { logoutUser } from '../../UserSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction EditProfile() {\r\n    const [user, setUser] = useState([]);\r\n    const { register, handleSubmit } = useForm();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchUserData = async () =>{\r\n            const response = await oj_profileAPI.getUserInformation();\r\n            setUser(response.data);\r\n        }\r\n        fetchUserData();\r\n    }, [])\r\n    const onSubmit = (data) =>{\r\n        try {\r\n            const fetchUserData = async () => {\r\n                const response = await oj_profileAPI.editUserInformation(data);\r\n                setUser(response.data);\r\n                if(response){\r\n                    localStorage.setItem('userInformation', JSON.stringify(response.data));\r\n                    window.location.reload();\r\n                }\r\n            }\r\n            fetchUserData();\r\n        } catch (error) {\r\n            console.log(\"fail to change user data\", error);\r\n        }\r\n    }\r\n    \r\n    const onSubmitPassword = data =>{\r\n        try {\r\n            const fetchUserData = async () => {\r\n                const response = await oj_profileAPI.changePassword(data);\r\n                if (response) {\r\n                    dispatch(logoutUser());\r\n                    toast.success('goodbye!', {\r\n                        position: toast.POSITION.BOTTOM_CENTER,\r\n                        autoClose: 1500\r\n                    });\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('role');\r\n                    history.push('/');\r\n                }\r\n            }\r\n            fetchUserData();\r\n        } catch (error) {\r\n            console.log(\"fail to change user data\", error.response);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"panel pages-container\">\r\n                <div className=\"setting-main\">\r\n                    <div className=\"setting-container\">\r\n                        <div className=\"left\">\r\n                            <div className=\"left-items\">\r\n                                <p className=\"section-title\">Change User Name</p>\r\n                                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <Form.Group >\r\n                                        <Form.Label>User name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={user.username} {...register(\"username\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>First name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={user.first_name} {...register(\"first_name\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                        <Form.Label>Last name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={user.last_name} {...register(\"last_name\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>  \r\n                        </div>\r\n                        <div className=\"middle\">\r\n\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            <div className=\"right-items\">\r\n                                <p className=\"section-title\">Change Password</p>\r\n                                <Form onSubmit={handleSubmit(onSubmitPassword)}>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Current password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"Current password\" {...register(\"old_password\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group >\r\n                                        <Form.Label>New Password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"New Password\" {...register(\"new_password1\")}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group >\r\n                                        <Form.Label>Confirm New Password</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"New Password\" {...register(\"new_password2\")}/>\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport { FaCloudUploadAlt } from 'react-icons/fa'\r\nimport Profile from '../Profile/Profile'\r\nimport './Setting.scss'\r\nimport { Link } from 'react-router-dom';\r\nimport EditProfile from '../EditProfile/EditProfile';\r\nimport oj_profileAPI from '../../../api/oj_profileAPI';\r\nimport { Button } from 'react-bootstrap';\r\nfunction Setting() {\r\n    const [userData, setUserData] = useState(JSON.parse(localStorage.getItem('userInformation')));\r\n    const [toAccount, setToAccount] = useState(false);\r\n    const [selectFile, setSelectFile] = useState(null);\r\n    const openAccountPage = () => {\r\n        setToAccount(true);\r\n    }\r\n    const openProfilePage = () => {\r\n        setToAccount(false);\r\n    }\r\n    const onChangeUploadFile = (e) => {\r\n        setSelectFile(e.target.files[0]);\r\n    }\r\n    const uploadFile = () => {\r\n        const formData = new FormData();\r\n        formData.append('profile_pic', selectFile);\r\n        const updateAvatar = async () => {\r\n            const response = await oj_profileAPI.uploadAvatar(formData);\r\n            if (response) {\r\n                setUserData(response.data);\r\n                setSelectFile(null);\r\n                window.location.reload();\r\n            }\r\n        }\r\n        updateAvatar();\r\n    }\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            const response = await oj_profileAPI.getUserInformation(selectFile);\r\n            setUserData(response.data);\r\n        }\r\n        fetchUserData();\r\n        return () => {\r\n        }\r\n    }, [userData.profile_pic, selectFile])\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"setting_container\">\r\n                <div className=\"card_container\">\r\n                    <div className=\"sidebar pages-container\">\r\n                        <div className=\"save-button\">\r\n                            {selectFile === null ? <div style={{ padding: \"10px 0\" }}></div> : <Button variant=\"light\" size=\"sm\" onClick={() => uploadFile()}>save</Button>}\r\n                        </div>\r\n                        <center>\r\n                            <div className=\"upload-img\">\r\n                                <div className=\"img-container\">\r\n                                    <div className=\"avatar-upload\">\r\n                                        <div className=\"avatar-edit\">\r\n                                            <input type='file' id=\"imageUpload\" accept=\".png, .jpg, .jpeg\" onChange={(e) => { onChangeUploadFile(e) }} />\r\n                                            <label htmlFor=\"imageUpload\"><FaCloudUploadAlt /></label>\r\n                                        </div>\r\n                                        <div className=\"avatar-preview\">\r\n                                            <img src={userData.profile_pic} className=\"profile_img\" style={{ style: \"background-image\" }} alt=\"error\" />\r\n                                        </div>\r\n                                        <br />\r\n                                        <h4>{localStorage.getItem(\"username\")}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </center>\r\n                        <a href=\"#\" onClick={() => { openProfilePage() }}><i className=\"far fa-id-badge\"></i><span>Profile</span></a>\r\n                        <a href=\"#\" onClick={() => { openAccountPage() }}><i className=\"fas fa-user-cog\"></i><span>Account</span></a>\r\n                        <div className=\"sidebar-item\">\r\n                            <Link className=\"profile_submission\" to={`status/?problem=&username=${userData.username}`}>\r\n                                <i className=\"fas fa-history\"></i>\r\n                                Submission\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right_container \">\r\n                        {toAccount ? <EditProfile /> : <Profile />}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React, { useEffect, useState } from 'react'\r\nimport AdminNavbar from '../../AdminNavbar'\r\nimport Sidebar from '../../Sidebar'\r\nimport { Card, ListGroup, Button, Form, FormControl } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport './EditUser.scss';\r\nimport admin_usersAPI from '../../../api/admin_usersAPI';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { BiLeftArrowAlt } from 'react-icons/bi';\r\n\r\nfunction EditUser({match}) {\r\n    const id = match.params.id;\r\n    const { register, handleSubmit } = useForm();\r\n    const [userData, setUserData] = useState([])\r\n    const history = useHistory();\r\n    //sent data\r\n    const onSubmit = async (data) => {\r\n        if(!isNaN(id)){\r\n            try {\r\n                const response = await admin_usersAPI.editUser(data, id);\r\n                if (response) {\r\n                    history.push('/admin/user/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to put problem: \", error);\r\n            }\r\n        }else{\r\n            try {\r\n                const response = await admin_usersAPI.createUser(data);\r\n                if (response) {\r\n                    history.push('/admin/users/');\r\n                }\r\n            } catch (error) {\r\n                console.log(\"Fail to post problem: \", error);\r\n            }\r\n        }\r\n    }\r\n    //\r\n    useEffect(() => {\r\n        if (!isNaN(id)) {\r\n            const fetchAnnouncement = async () => {\r\n                try {\r\n                    const response = await admin_usersAPI.getById(id);\r\n                    setUserData(response.data);\r\n                } catch (error) {\r\n                    console.log(\"fail to alter announcement: \", error);\r\n                }\r\n            };\r\n            fetchAnnouncement();\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"user-conatiner\">\r\n            <AdminNavbar/>\r\n            <Sidebar/>\r\n            <div className=\"edit-form\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\" >\r\n                        Editing User#{id}\r\n                        <div className=\"\">\r\n                            <Link to={`/admin/user`}  className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form className=\"UserForm\" onSubmit={handleSubmit(onSubmit)}>\r\n                            <ListGroup.Item className=\"UserForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>User name</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={userData.username}\r\n                                    {...register(\"username\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"UserForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>Email</span> <br /> <br />\r\n                                <FormControl\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    value={userData.email}\r\n                                    {...register(\"email\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item className=\"UserForm-items\">\r\n                                <i style={{ color: 'red' }}>*</i>\r\n                                <span>Password</span> <br /> <br />\r\n                                <FormControl\r\n                                    type=\"password\"\r\n                                    aria-label=\"Default\"\r\n                                    aria-describedby=\"inputGroup-sizing-default\"\r\n                                    {...register(\"password\")}\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <div className=\"UserForm-items\" >\r\n                                <div className=\"user-select\">\r\n                                    <label htmlFor=\"Admin type\">Admin type: </label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom {...register(\"admin_type\")} >\r\n                                        <option value=\"\" selected disabled hidden>{userData.admin_type}</option>\r\n                                        <option value=\"Regular User\">Regular User</option>\r\n                                        <option value=\"Admin\">Admin</option>\r\n                                        <option value=\"Super Admin\">Super Admin</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className=\"user-select\">\r\n                                    <label htmlFor=\"Is staff\">This user is a Staff: </label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom {...register(\"is_staff\")}>\r\n                                        <option value=\"\" selected disabled hidden>{`${userData.is_staff}`}</option>\r\n                                        <option value=\"true\">true</option>\r\n                                        <option value=\"false\">false</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n                                <div className=\"user-select\">\r\n                                    <label htmlFor=\"Problem permission\">Problem Permission: </label>\r\n                                    <Form.Control as=\"select\" size=\"sm\" custom {...register(\"problem_permission\")}>\r\n                                        <option value=\"\" selected disabled hidden>{userData.problem_permission}</option>\r\n                                        <option value=\"None\">None</option>\r\n                                        <option value=\"Own\">Only problem they authored</option>\r\n                                        <option value=\"All\">All problem</option>\r\n                                    </Form.Control>\r\n                                </div>\r\n           \r\n                            </div>\r\n            \r\n                            <br />\r\n                            <Button type=\"submit\" className=\"save_button UserForm-items\">Save</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditUser;\r\n// chưa css","import React from 'react'\r\nimport './NotFound.scss';\r\nimport {Link} from 'react-router-dom';\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"not_found_container\">\r\n            <div>\r\n                <svg width=\"1123\" height=\"837\" viewBox=\"0 0 1123 837\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect width=\"1123\" height=\"837\" fill=\"black\" />\r\n                    <g id=\"sky\" filter=\"url(#filter0_d)\">\r\n                        <rect id=\"background\" x=\"30\" y=\"26\" width=\"1063\" height=\"777\" rx=\"20\" fill=\"black\" />\r\n                        <g id=\"stars\">\r\n                            <path id=\"Vector\" d=\"M202.12 319.2C204.937 319.2 207.22 316.917 207.22 314.1C207.22 311.283 204.937 309 202.12 309C199.303 309 197.02 311.283 197.02 314.1C197.02 316.917 199.303 319.2 202.12 319.2Z\" fill=\"white\" />\r\n                            <path id=\"Vector_2\" d=\"M566.12 615.2C568.937 615.2 571.22 612.917 571.22 610.1C571.22 607.283 568.937 605 566.12 605C563.303 605 561.02 607.283 561.02 610.1C561.02 612.917 563.303 615.2 566.12 615.2Z\" fill=\"white\" />\r\n                            <path id=\"Vector_3\" d=\"M351.12 638.95C352.694 638.95 353.97 637.674 353.97 636.1C353.97 634.526 352.694 633.25 351.12 633.25C349.546 633.25 348.27 634.526 348.27 636.1C348.27 637.674 349.546 638.95 351.12 638.95Z\" fill=\"white\" />\r\n                            <path id=\"Vector_4\" d=\"M985.11 503.99C986.684 503.99 987.96 502.714 987.96 501.14C987.96 499.566 986.684 498.29 985.11 498.29C983.536 498.29 982.26 499.566 982.26 501.14C982.26 502.714 983.536 503.99 985.11 503.99Z\" fill=\"white\" />\r\n                            <path id=\"Vector_5\" d=\"M822.11 247.99C823.684 247.99 824.96 246.714 824.96 245.14C824.96 243.566 823.684 242.29 822.11 242.29C820.536 242.29 819.26 243.566 819.26 245.14C819.26 246.714 820.536 247.99 822.11 247.99Z\" fill=\"white\" />\r\n                            <path id=\"Vector_6\" d=\"M1053.11 372.99C1054.68 372.99 1055.96 371.714 1055.96 370.14C1055.96 368.566 1054.68 367.29 1053.11 367.29C1051.54 367.29 1050.26 368.566 1050.26 370.14C1050.26 371.714 1051.54 372.99 1053.11 372.99Z\" fill=\"white\" />\r\n                            <path id=\"Vector_7\" d=\"M292.12 152.2C294.937 152.2 297.22 149.917 297.22 147.1C297.22 144.283 294.937 142 292.12 142C289.303 142 287.02 144.283 287.02 147.1C287.02 149.917 289.303 152.2 292.12 152.2Z\" fill=\"white\" />\r\n                            <path id=\"Vector_8\" d=\"M151.95 492.17H147.41V487.63H145.56V492.17H141.02V494.02H145.56V498.55H147.41V494.02H151.95V492.17Z\" fill=\"white\" />\r\n                            <path id=\"Vector_9\" d=\"M265.95 490.17H261.41V485.63H259.56V490.17H255.02V492.02H259.56V496.55H261.41V492.02H265.95V490.17Z\" fill=\"white\" />\r\n                            <path id=\"Vector_10\" d=\"M428.95 582.17H424.41V577.63H422.56V582.17H418.02V584.02H422.56V588.55H424.41V584.02H428.95V582.17Z\" fill=\"white\" />\r\n                            <path id=\"Vector_11\" d=\"M776.98 344.67H774.91V342.6H774.07V344.67H772V345.51H774.07V347.58H774.91V345.51H776.98V344.67Z\" fill=\"white\" />\r\n                            <path id=\"Vector_12\" d=\"M68.98 422.67H66.91V420.6H66.07V422.67H64V423.51H66.07V425.58H66.91V423.51H68.98V422.67Z\" fill=\"white\" />\r\n                            <path id=\"Vector_13\" d=\"M153.98 592.67H151.91V590.6H151.07V592.67H149V593.51H151.07V595.58H151.91V593.51H153.98V592.67Z\" fill=\"white\" />\r\n                            <path id=\"Vector_14\" d=\"M297.97 357.71H295.9V355.64H295.06V357.71H292.99V358.55H295.06V360.62H295.9V358.55H297.97V357.71Z\" fill=\"white\" />\r\n                            <path id=\"Vector_15\" d=\"M321.98 268.67H319.91V266.6H319.07V268.67H317V269.51H319.07V271.58H319.91V269.51H321.98V268.67Z\" fill=\"white\" />\r\n                            <path id=\"Vector_16\" d=\"M956.9 333.07C957.916 333.07 958.74 332.246 958.74 331.23C958.74 330.214 957.916 329.39 956.9 329.39C955.884 329.39 955.06 330.214 955.06 331.23C955.06 332.246 955.884 333.07 956.9 333.07Z\" fill=\"white\" />\r\n                        </g>\r\n                        <g id=\"rocket\">\r\n                            <path id=\"Vector_17\" d=\"M635.46 400H466V406.78H635.46V400Z\" fill=\"#535461\" />\r\n                            <g id=\"body-rocket\">\r\n                                <path id=\"Vector_18\" d=\"M482.581 674.368H458.851L463.091 645.558H478.341L482.581 674.368Z\" fill=\"#535461\" />\r\n                                <path id=\"Vector_19\" d=\"M685.931 674.368H662.211L666.441 645.558H681.701L685.931 674.368Z\" fill=\"#535461\" />\r\n                                <g id=\"Group\" opacity=\"0.1\">\r\n                                    <path id=\"Vector_20\" opacity=\"0.1\" d=\"M665.261 656.998H682.881L681.701 648.948H666.441L665.261 656.998Z\" fill=\"black\" />\r\n                                </g>\r\n                                <path id=\"Vector_21\" d=\"M559.681 674.368H535.961L540.191 645.558H555.451L559.681 674.368Z\" fill=\"#535461\" />\r\n                                <path id=\"Vector_22\" d=\"M607.981 674.368H584.261L588.491 645.558H603.741L607.981 674.368Z\" fill=\"#535461\" />\r\n                                <g id=\"Group_2\" opacity=\"0.1\">\r\n                                    <path id=\"Vector_23\" opacity=\"0.1\" d=\"M587.311 656.998H604.931L603.741 648.948H588.491L587.311 656.998Z\" fill=\"black\" />\r\n                                </g>\r\n                                <path id=\"Vector_24\" d=\"M677.861 300.724L677.86 300.724L677.869 300.733C681.479 304.531 686.193 310.849 691.386 320.975C702.335 342.647 707.995 366.605 707.901 390.887V390.888V652.328H633.901L633.901 391.988L633.901 391.986C633.785 367.014 639.733 342.386 651.234 320.22C655.114 312.85 659.549 305.944 664.436 300.73L664.436 300.73L664.442 300.724C665.29 299.787 666.326 299.038 667.481 298.525C668.637 298.012 669.887 297.747 671.151 297.747C672.415 297.747 673.666 298.012 674.821 298.525C675.977 299.038 677.012 299.787 677.861 300.724Z\" fill=\"#E0E0E0\" stroke=\"black\" />\r\n                                <path id=\"Vector_25\" d=\"M463.524 300.733L463.524 300.733L463.532 300.724C464.38 299.787 465.416 299.038 466.571 298.525C467.727 298.012 468.977 297.747 470.241 297.747C471.505 297.747 472.755 298.012 473.911 298.525C475.067 299.038 476.102 299.787 476.95 300.724L476.95 300.724L476.957 300.731C481.853 305.944 486.278 312.85 490.168 320.22C501.665 342.388 507.612 367.014 507.501 391.986V391.988V652.328H433.501L433.501 390.888L433.501 390.887C433.408 366.605 439.067 342.647 450.017 320.975C455.2 310.849 459.913 304.531 463.524 300.733Z\" fill=\"#E0E0E0\" stroke=\"black\" />\r\n                                <path id=\"Vector_26\" d=\"M490.201 396.448L508.001 396.538V418.478H490.201V396.448Z\" fill=\"#535461\" />\r\n                                <path id=\"Vector_27\" d=\"M633.401 396.448L651.191 396.538V418.478H633.401V396.448Z\" fill=\"#535461\" />\r\n                                <g id=\"Group_3\" opacity=\"0.1\">\r\n                                    <path id=\"Vector_28\" opacity=\"0.1\" d=\"M490.611 319.648C486.711 312.258 482.261 305.308 477.321 300.048C475.926 298.502 474.062 297.456 472.016 297.071C469.969 296.686 467.852 296.984 465.991 297.918C467.063 298.453 468.032 299.175 468.851 300.048C473.781 305.308 478.241 312.258 482.131 319.648C493.671 341.887 499.638 366.595 499.521 391.648V652.468H508.001V391.658C508.115 366.602 502.147 341.892 490.611 319.648V319.648Z\" fill=\"black\" />\r\n                                </g>\r\n                                <g id=\"Group_4\" opacity=\"0.1\">\r\n                                    <path id=\"Vector_29\" opacity=\"0.1\" d=\"M657.571 320.368C661.461 312.978 665.921 306.028 670.851 300.768C671.773 299.772 672.889 298.976 674.131 298.428C672.298 297.626 670.26 297.421 668.304 297.841C666.348 298.261 664.573 299.285 663.231 300.768C658.291 306.028 653.831 312.978 649.941 320.368C638.407 342.609 632.44 367.315 632.551 392.368V653.228H640.181V392.388C640.061 367.328 646.029 342.613 657.571 320.368V320.368Z\" fill=\"black\" />\r\n                                </g>\r\n                                <path id=\"Vector_30\" d=\"M471.041 738.768H470.391C467.331 738.768 464.395 737.553 462.231 735.388C460.067 733.224 458.851 730.289 458.851 727.228V674.368H482.581V727.228C482.581 730.289 481.365 733.224 479.201 735.388C477.037 737.553 474.102 738.768 471.041 738.768Z\" fill=\"url(#paint0_linear)\" />\r\n                                <path id=\"Vector_31\" d=\"M548.371 738.518H547.721C544.661 738.518 541.725 737.303 539.561 735.138C537.397 732.974 536.181 730.039 536.181 726.978V674.118H559.911V726.978C559.911 730.039 558.695 732.974 556.531 735.138C554.367 737.303 551.432 738.518 548.371 738.518Z\" fill=\"url(#paint1_linear)\" />\r\n                                <path id=\"Vector_32\" d=\"M597.371 738.518H596.721C593.661 738.518 590.725 737.303 588.561 735.138C586.397 732.974 585.181 730.039 585.181 726.978V674.118H608.911V726.978C608.911 730.039 607.695 732.974 605.531 735.138C603.367 737.303 600.432 738.518 597.371 738.518Z\" fill=\"url(#paint2_linear)\" />\r\n                                <path id=\"Vector_33\" d=\"M674.371 738.518H673.721C670.661 738.518 667.725 737.303 665.561 735.138C663.397 732.974 662.181 730.039 662.181 726.978V674.118H685.911V726.978C685.911 730.039 684.695 732.974 682.531 735.138C680.367 737.303 677.432 738.518 674.371 738.518Z\" fill=\"url(#paint3_linear)\" />\r\n                                <path id=\"Vector_34\" d=\"M578.51 96.4834L578.52 96.4957L578.531 96.5076C583.685 102.221 590.434 111.588 597.797 126.726L597.798 126.73C613.465 158.638 621.544 194.732 621.655 231.32L622.93 650.608L517.93 650.927L516.661 233.319C516.547 195.664 524.762 158.515 541.048 125.774C546.594 114.716 552.917 104.371 559.813 96.561L559.822 96.5507L559.831 96.5402C560.972 95.1742 562.398 94.0744 564.009 93.3179C565.62 92.5615 567.377 92.1667 569.157 92.1613C570.937 92.1559 572.697 92.54 574.312 93.2866C575.928 94.0333 577.361 95.1244 578.51 96.4834Z\" fill=\"#EEEEEE\" stroke=\"black\" stroke-width=\"2\" />\r\n                                <path id=\"Vector_35\" d=\"M585.811 142.368H551.971C545.896 142.368 540.971 147.293 540.971 153.368V156.958C540.971 163.034 545.896 167.958 551.971 167.958H585.811C591.886 167.958 596.811 163.034 596.811 156.958V153.368C596.811 147.293 591.886 142.368 585.811 142.368Z\" fill=\"#535461\" />\r\n                                <path id=\"Vector_36\" d=\"M433.431 396.448L451.231 396.538V418.478H433.431V396.448Z\" fill=\"#535461\" />\r\n                                <path id=\"Vector_37\" d=\"M690.171 396.448L707.961 396.538V418.478H690.171V396.448Z\" fill=\"#535461\" />\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n                    <defs>\r\n                        <filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"1123\" height=\"837\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\r\n                            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\r\n                            <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n                            <feOffset dy=\"4\" />\r\n                            <feGaussianBlur stdDeviation=\"15\" />\r\n                            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.7 0\" />\r\n                            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n                            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n                        </filter>\r\n                        <linearGradient id=\"paint0_linear\" x1=\"470.721\" y1=\"674.368\" x2=\"470.721\" y2=\"738.768\" gradientUnits=\"userSpaceOnUse\">\r\n                            <stop stop-color=\"#E0E0E0\" />\r\n                            <stop offset=\"0.31\" stop-color=\"#FCCC63\" />\r\n                            <stop offset=\"0.77\" stop-color=\"#F55F44\" />\r\n                        </linearGradient>\r\n                        <linearGradient id=\"paint1_linear\" x1=\"548.051\" y1=\"674.118\" x2=\"548.051\" y2=\"738.518\" gradientUnits=\"userSpaceOnUse\">\r\n                            <stop stop-color=\"#E0E0E0\" />\r\n                            <stop offset=\"0.31\" stop-color=\"#FCCC63\" />\r\n                            <stop offset=\"0.77\" stop-color=\"#F55F44\" />\r\n                        </linearGradient>\r\n                        <linearGradient id=\"paint2_linear\" x1=\"597.051\" y1=\"674.118\" x2=\"597.051\" y2=\"738.518\" gradientUnits=\"userSpaceOnUse\">\r\n                            <stop stop-color=\"#E0E0E0\" />\r\n                            <stop offset=\"0.31\" stop-color=\"#FCCC63\" />\r\n                            <stop offset=\"0.77\" stop-color=\"#F55F44\" />\r\n                        </linearGradient>\r\n                        <linearGradient id=\"paint3_linear\" x1=\"674.051\" y1=\"674.118\" x2=\"674.051\" y2=\"738.518\" gradientUnits=\"userSpaceOnUse\">\r\n                            <stop stop-color=\"#E0E0E0\" />\r\n                            <stop offset=\"0.31\" stop-color=\"#FCCC63\" />\r\n                            <stop offset=\"0.77\" stop-color=\"#F55F44\" />\r\n                        </linearGradient>\r\n                    </defs>\r\n                </svg>\r\n            </div>\r\n            <div class=\"text\">\r\n                <h1>Error 404</h1>\r\n                <h2>Page Not Found - Let's Take You <Link to='/' onClick={() => window.history.back()}>Back</Link></h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Card, Button, ListGroup } from 'react-bootstrap';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport '../Table.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BiCog, BiSpreadsheet } from 'react-icons/bi';\r\n\r\nimport { Link} from 'react-router-dom';\r\nimport { BiLeftArrowAlt } from 'react-icons/bi';\r\n\r\nimport adminJudgeServerAPI from '../../api/adminJudgeServerAPI';\r\nimport './JudgeServerDetail.scss'\r\n\r\nfunction JudgeServer({match}) {\r\n\tconst id = match.params.id;\r\n\tconst [jserver, setJserver] = useState({})\r\n\tuseEffect(() => {\r\n\t\tconst fetch = async(id) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst resp = await adminJudgeServerAPI.getById(id);\r\n\t\t\t\tsetJserver(resp.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetch(id);\r\n\t}, [])\r\n\r\n\tconst history = useHistory();\r\n\tconst onSubmitHandler = async(e) => {\r\n\t\te.preventDefault();\r\n\t\tconst resp = await adminJudgeServerAPI.updateById({id:id,formData:jserver})\r\n\t\tif (resp.error==='none') {\r\n\t\t\thistory.push('/admin/judgeserver')\r\n\t\t} else {\r\n\t\t\tconsole.log(\"Err\",resp.error)\r\n\t\t\tconsole.log(\"ErrMsg\", resp.data)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h3\" className=\"judge-server-card\">\r\n\t\t\t\t\t\tJudge Server #{id}\r\n                        <div className=\"\">\r\n                            <Link to={`/admin/judgeserver`}  className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tjserver === {}\r\n\t\t\t\t\t\t\t? <div className=\"not-fetched\">Please wait...</div>\r\n\t\t\t\t\t\t\t: <div className=\"jserver-detail\">\r\n\t\t\t\t\t\t\t\t<Card id=\"readonly-card\">\r\n\t\t\t\t\t\t\t\t\t<Card.Header as=\"h4\" className=\"jserver-readonly\"><BiSpreadsheet/> Read-only</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup className=\"list-group-flush\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jserver-readonly-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tID <span>{jserver.id}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jserver-readonly-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tToken: <span>{jserver.token}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jserver-readonly-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tStatus: <span>{jserver.status} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jserver-readonly-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tPending Tasks: <span>{jserver.pending_tasks} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jserver-readonly-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tLast Heartbeat: <span>{jserver.last_heartbeat}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"jserver-readonly-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdded On: <span>{jserver.added_time}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t<Card id=\"form-card\">\r\n\t\t\t\t\t\t\t\t\t<Card.Header as=\"h4\" className=\"jserver-form\"><BiCog/> Config</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<Form id=\"jserver-form\" onSubmit={(e)=>(onSubmitHandler(e))}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-Hostname\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Hostname</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Judge Server's name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={jserver.hostname} onChange={(e)=>(setJserver({...jserver, hostname:e.target.value}))}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-address\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Judge Server's socket address\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={jserver.socketaddress} onChange={(e)=>(setJserver({...jserver, socketaddress:e.target.value}))}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-activation\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Activation</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={!jserver.is_disabled} label=\"Enable\" name=\"group1\" type=\"radio\" id={`radio-1`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={()=>(setJserver({...jserver, is_disabled:false}))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={jserver.is_disabled} label=\"Disable\" name=\"group2\" type=\"radio\" id={`radio-2`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={()=>(setJserver({...jserver, is_disabled:true}))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-mptask\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Max pending tasks allowed</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"number\" placeholder=\"Server's max number of pending tasks\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={jserver.max_pending_tasks}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e)=>(setJserver({...jserver, max_pending_tasks:e.target.value}))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" className='form-submit-btn'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tChange\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div >\r\n\t)\r\n}\r\n\r\nexport default JudgeServer;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Card, Button } from 'react-bootstrap';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport '../Table.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport adminJudgeServerAPI from '../../api/adminJudgeServerAPI';\r\nimport './NewJudgeServerForm.scss'\r\n\r\nfunction NewJudgeServerForm() {\r\n    const history = useHistory();\r\n\tconst [hostname, setHostname] = useState('')\r\n\tconst [saddress, setSAddress] = useState('')\r\n\tconst [mptasks, setMPTasks] = useState(8)\r\n\tconst [active, setActive] = useState(false)\r\n\r\n\tconst onSubmitHandler = () => {\r\n\t\tconst data = {\r\n\t\t\t'hostname': hostname,\r\n\t\t\t'socketaddress': saddress,\r\n\t\t\t'max_pending_tasks': mptasks,\r\n\t\t\t'is_disabled': !active\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst rsp = adminJudgeServerAPI.addJudgeServer(data)\r\n\t\t\tif (rsp) history.push('/admin/judgeserver')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('NewJudgeServerForm', error);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AdminNavbar />\r\n\t\t\t<Sidebar />\r\n\t\t\t<div className=\"table-view\">\r\n\t\t\t\t<Card className='njs-form'>\r\n\t\t\t\t\t<Card.Header as=\"h3\" className=\"judge-server-card\">\r\n\t\t\t\t\t\t*New Judge Server\r\n\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Form id=\"jserver-form\" onSubmit={onSubmitHandler}>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-Hostname\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Hostname</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Name for the server\" onChange={(e)=>{setHostname(e.target.value)}} required/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-address\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\" xxx.xxx.xxx.xxx:pppp\" \r\n\t\t\t\t\t\t\t\t\tonChange={(e)=>{setSAddress(e.target.value)}} required\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-activation\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Server Active Status</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\tlabel=\"Enable\" name=\"group1\" type=\"radio\" id={`radio-1`} onChange={()=>{setActive(true)}}\r\n\t\t\t\t\t\t\t\t\trequired checked={active}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\t\tlabel=\"Disable\" name=\"group1\" type=\"radio\" id={`radio-2`} onChange={()=>{setActive(false)}}\r\n\t\t\t\t\t\t\t\t\trequired checked={!active}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"jserver-form-mptask\">\r\n\t\t\t\t\t\t\t\t<Form.Label>Max pending tasks allowed</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"number\" value={mptasks} required onChange={(e)=>{setMPTasks(e.target.value)}}/>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t)\r\n}\r\n\r\nexport default NewJudgeServerForm;\r\n\r\n\r\n","import axiosClient from './axiosClient'\r\nimport queryString from 'query-string';\r\n\r\nconst adminStatusAPI = {\r\n    getAll: (data) => {\r\n        const paramString = queryString.stringify(data);\r\n        const url = `admin/status/?${paramString}`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    getById: (id) => {\r\n        const url = `admin/status/${id}/`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.get(url, config);\r\n    },\r\n    deleteById: (id) =>{\r\n        const url = `admin/status/${id}/`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.delete(url, config);\r\n    },\r\n    putById: (id, putType) =>{\r\n        const url = `admin/status/${id}/`;\r\n        const token = localStorage.getItem('token');\r\n        let config = {\r\n            headers: {\r\n                'Authorization': 'Token ' + token,\r\n            }\r\n        }\r\n        return axiosClient.put(url, {put_type: putType}, config);\r\n    },\r\n}\r\n\r\nexport default adminStatusAPI;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\n\r\nimport { BsChevronDown } from \"react-icons/bs\"; //react-icon\r\nimport { AiOutlineEyeInvisible, AiOutlineEdit, AiOutlineDelete, AiOutlineControl } from 'react-icons/ai';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\nimport Collapsible from 'react-collapsible';\r\n\r\nimport adminStatusAPI from '../../api/adminStatusAPI';\r\nimport './SubmissionList.scss'\r\n\r\nimport {V2C, VS} from '../../constant/SubmissionVerdict'\r\nimport '../../css/SubmissionVerdict.css'\r\n\r\nfunction AdminSubmissionList(props) {\r\n    let href = window.location.href;\r\n    var url = new URL(href);\r\n    var problem_title = url.searchParams.get('problem');\r\n    var username = url.searchParams.get('username');\r\n    const [status, setStatus] = useState([]);\r\n    const [filters, setFilters] = useState(() => {\r\n        let filter = []\r\n        if (username !== null) filter.push('author_name');\r\n        if (problem_title !== null) filter.push('problem_title');\r\n        return {\r\n            sort_by: '-id',\r\n            filter_by: filter,\r\n            author_name: username,\r\n            problem_title: problem_title,\r\n            page: 1,\r\n        }\r\n    })\r\n\r\n    // -- paginate\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    // -- sorting\r\n    const [sortBy, setSortBy] = useState('-id');\r\n    const setSortByCriteria = (crit) => {\r\n        if (sortBy === '') setSortBy(crit);\r\n        else\r\n        if (sortBy.charAt[0] === '-') {\r\n            setSortBy(crit);\r\n        } else {\r\n            if (sortBy === crit) setSortBy('-'+crit);\r\n            else setSortBy(crit);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setFilters({\r\n            ...filters,\r\n            sort_by: sortBy\r\n        })\r\n    }, [sortBy])\r\n    // ReactPaginate: handle page change\r\n    const handlePageClick = async (props) => {\r\n        setFilters({\r\n            ...filters,\r\n            page: props.selected+1,\r\n        })\r\n    };\r\n\r\n    // -- Fetch data : Fetch when fitlers changes\r\n    useEffect(() => {\r\n        const fetchStatus = async () => {\r\n            try {\r\n                const response = await adminStatusAPI.getAll(filters);\r\n                setStatus(response.data);\r\n                setMaxPage(response.maxpage);\r\n            } catch (error) {\r\n               console.log('Fail to fetch status: ', error); \r\n            }\r\n        }\r\n        fetchStatus();\r\n    }, [filters])\r\n\r\n    // Filtering\r\n    const [searchContent, setSearchContent] = useState('')\r\n    const [searchAuthor, setSearchAuthor] = useState('')\r\n    const [searchVerdict, setSearchVerdict] = useState('')\r\n    const [searchLanguage, setSearchLanguage] = useState('')\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormSubmit = (e) => {\r\n        if (e !== undefined) e.preventDefault()\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['verdict']\r\n        delete newFilter['language']\r\n\r\n        if (searchContent !== ''){\r\n            newFilter = {...newFilter, contains: searchContent}\r\n        }\r\n        if (searchAuthor !== '') {\r\n            newFilter.filter_by.push('author_name')\r\n            newFilter = {...newFilter, author_name: searchAuthor}\r\n        } \r\n        if (searchVerdict !== '') {\r\n            newFilter.filter_by.push('verdict')\r\n            newFilter = {...newFilter, verdict: searchVerdict}\r\n        }\r\n        if (searchLanguage !== '') {\r\n            newFilter.filter_by.push('language')\r\n            newFilter = {...newFilter, language: searchLanguage}\r\n        }\r\n        setFilters(newFilter);\r\n    }\r\n    // -- handleFilterFormSubmit : Form Submit button\r\n    const handleFilterFormReset = (e) => {\r\n        setSearchContent(''); setSearchAuthor(''); setSearchVerdict(''); setSearchLanguage('');\r\n        let newFilter = {...filters, filter_by:[]};\r\n        delete newFilter['contains']\r\n        delete newFilter['author_name']\r\n        delete newFilter['verdict']\r\n        delete newFilter['language']\r\n        setFilters(newFilter);\r\n    }\r\n\r\n    // -- handleSubmission\r\n    const handleDeleteSubmission = async (id) => {\r\n        try {\r\n            if (window.confirm(\"Are you sure you want to delete Submission#\"+id+\"?\")) {\r\n                const resp = await adminStatusAPI.deleteById(id);\r\n                if (resp) {\r\n                    setStatus(\r\n                        status.filter((stat) => {return stat.id!==id})\r\n                    )\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card className='admin-card'>\r\n                    <div className=\"admin-status-container pages-container\">\r\n                        <Collapsible trigger={[\"Search/Filter\", <BsChevronDown key='chevron-admin-status'/>]} easing='ease'>\r\n                            <Form className=\"filter_form\">\r\n                                <div className=\"filter_form_items\">\r\n                                    <Form.Group className=\"search-content\">\r\n                                        <Form.Label>Search content</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Content\" onChange={(e)=>setSearchContent(e.target.value)}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"search-authorname\">\r\n                                        <Form.Label>Search for author</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Author name\" onChange={(e)=>setSearchAuthor(e.target.value)}/>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"search-verdict\">\r\n                                        <Form.Label>Verdict</Form.Label>\r\n                                        <Form.Control as=\"select\" className=\"verdict_filter_by\" onChange={(e)=>setSearchVerdict(e.target.value)}>\r\n                                            <option value=\"\">All</option> \r\n                                            <option value=\"Accepted\">Accepted</option>\r\n                                            <option value=\"Wrong Answer\">Wrong answer</option>\r\n                                            <option value=\"Runtime Error\">Runtime error</option>\r\n                                            <option value=\"New\">New</option>\r\n                                            <option value=\"Compilation Error\">Compile Error</option>\r\n                                            <option value=\"System Error\">System error</option>\r\n                                            <option value=\"Skipped\">Skipped</option>\r\n                                            <option value=\"Judged\">Judged</option>\r\n                                            <option value=\"Judging\">Judging</option>\r\n                                            <option value=\"Rejected\">Rejected</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"search-language\">\r\n                                        <Form.Label>Language</Form.Label>\r\n                                        <Form.Control as=\"select\" className=\"lang_filter_by\" onChange={(e)=>setSearchLanguage(e.target.value)}>\r\n                                            <option value=\"\">All</option>\r\n                                            <option value=\"Python3\">Python3</option>\r\n                                            <option value=\"Python2\">Python2</option>\r\n                                            <option value=\"C\">C</option>\r\n                                            <option value=\"Cpp\">C++</option>\r\n                                            <option value=\"Java\">Java</option>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <Button variant=\"primary\" type=\"submit\" onClick={handleFilterFormSubmit}>Submit</Button>\r\n                                <Button variant=\"light\" type=\"reset\" onClick={handleFilterFormReset}>Reset</Button>\r\n                            </Form>\r\n                        </Collapsible>\r\n                        <Card>\r\n                        <Card.Header as=\"h3\" className=\"admin-status-header\">\r\n                            Submissions\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th onClick={() => setSortByCriteria('id')}>ID</th>\r\n                                        <th onClick={() => setSortByCriteria('problem_title')}>Problem</th>\r\n                                        <th onClick={() => setSortByCriteria('author_name')}>Author</th>\r\n                                        <th onClick={() => setSortByCriteria('verdict')}>Status</th>\r\n                                        <th onClick={() => setSortByCriteria('language')}>Language</th>\r\n                                        <th onClick={() => setSortByCriteria('time')}>Time</th>\r\n                                        <th onClick={() => setSortByCriteria('memory')}>Memory</th>\r\n                                        <th onClick={() => setSortByCriteria('submit_time')}>When</th>\r\n                                        <th>Options</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        status.length === 0\r\n                                        ? <tr><td colSpan={5}><p className=\"empty-result-msg\">Nothing to show..</p></td></tr>\r\n                                        : status.map(stat => {\r\n                                            return (\r\n                                                <tr key={\"table-row\"+stat.id}>\r\n                                                    <td>{stat.id} {!stat.is_visible?<AiOutlineEyeInvisible/>:<></>}</td>\r\n                                                    <td>\r\n                                                        <div className=\"table-cell\">\r\n                                                            <Link to={`problem/${stat.problem_id}`} >{stat.problem_title}</Link>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{stat.author_name}</td>\r\n                                                    <td>\r\n                                                        <div className=\"table-cell\">\r\n                                                            <div className={`result-container ${V2C(stat.verdict)}`}>\r\n                                                                <div className=\"result-text\">\r\n                                                                    {VS(stat.verdict)}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td>{stat.language}</td>\r\n                                                    <td>{stat.time} ms</td>\r\n                                                    <td>{Math.floor(stat.memory/1000)} MB</td>\r\n                                                    <td>{(new Date(stat.submit_time)).toDateString()}</td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Link to={`/admin/submission/${stat.id}`} >\r\n                                                                        <Button variant=\"light\">\r\n                                                                            <AiOutlineControl />\r\n                                                                        </Button>\r\n                                                                    </Link>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\" onClick={() => handleDeleteSubmission(stat.id)}>\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            <div className='pagination-container'>\r\n                                {maxPage === 0\r\n                                ? <></>\r\n                                : <ReactPaginate \r\n                                    pageCount={maxPage}\r\n                                    pageRangeDisplayed={5}\r\n                                    marginPagesDisplayed={2}\r\n                                    onPageChange={handlePageClick}\r\n                                    containerClassName={'pagination'}\r\n                                    activeClassName={'active'}\r\n                                    breakLabel={'...'}\r\n                                    breakClassName={'break-me'}\r\n                                ></ReactPaginate>}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminSubmissionList;\r\n\r\n","import { Card } from 'react-bootstrap';\r\nimport { UnControlled  as CodeMirror } from 'react-codemirror2';\r\n\r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\n\r\nfunction StatusDetailSource({content, language}) {\r\n    const getCodeMirrorModeFromLanguage = (lang) => {\r\n        return {\r\n            'PyPy3': 'python',\r\n            'PyPy': 'python',\r\n            'Python3': 'python',\r\n            'Python2': 'python',\r\n            'Java': 'text/x-java',\r\n            'C': 'text/x-csrc',\r\n            'Cpp': 'text/x-c++src',\r\n        }[lang]\r\n    };\r\n\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"source-code status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\">Source Code</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className=\"editor-container\">\r\n\t\t\t\t\t\t\t<CodeMirror\r\n\t\t\t\t\t\t\t\tvalue={content}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tmatchBrackets: true,\r\n\t\t\t\t\t\t\t\t\tstyleActiveLine: true,\r\n\t\t\t\t\t\t\t\t\ttheme: \"material\",\r\n\t\t\t\t\t\t\t\t\tmode: getCodeMirrorModeFromLanguage(language),\r\n\t\t\t\t\t\t\t\t\tlineNumbers: true,\r\n\t\t\t\t\t\t\t\t\treadOnly: 'nocursor'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"source-code status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\">Source code</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default StatusDetailSource;\r\n","import { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {V2C, VS} from '../../../constant/SubmissionVerdict'\r\n\r\nfunction StatusDetailSummary({ submission }) {\r\n\r\n\tconst timeFormatter = (timestring) => {\r\n\t\tif (typeof timestring === undefined) return \"\";\r\n\t\tvar d = new Date(timestring);\r\n\t\tvar dformat = [d.getMonth()+1, d.getDate(), d.getFullYear()].join('/')+' '+[d.getHours(),d.getMinutes(),d.getSeconds()].join(':');\r\n\t\treturn dformat;\r\n\t};\r\n\r\n\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission-info status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Submission Info</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<table>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Submission Time</td>\r\n\t\t\t\t\t\t\t\t\t<td>{timeFormatter(submission.submit_time)}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Author</td>\r\n\t\t\t\t\t\t\t\t\t<td>{submission.author_name}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Problem</td>\r\n\t\t\t\t\t\t\t\t\t<td><Link to={`/problem/${submission.problem_id}`}>{submission.problem_title}</Link></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Language</td>\r\n\t\t\t\t\t\t\t\t\t<td>{submission.language}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Status</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div className={`verdict-text ${V2C(submission.verdict)}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>{(submission.verdict)}</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Execution Time</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{submission.time} ms\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>Memory Usage</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{submission.memory} KB\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission-info status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Submission Info</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default StatusDetailSummary;\r\n","import Collapsible from 'react-collapsible'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction StatusDetailSample({ samples }) {\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_sample status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Sample Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsamples.length === 0 \r\n\t\t\t\t\t\t\t? <p> This problem does not have any sample tests.</p>\r\n\t\t\t\t\t\t\t: samples.map((sample, idx) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Collapsible key={'sdsample-c'+idx} trigger={[`Sample Test #${idx+1}: ${sample.verdict} (CPU:${sample['cpu time']}ms, MEM:${sample['memory used']}KB)`]} easing='ease'>\r\n\t\t\t\t\t\t\t\t\t\t<table className='test-result'>\r\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stderr</td><td className='row-value'><pre>{sample['stderr']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stdout</td><td className='row-value'><pre>{sample['stdout']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t</Collapsible>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_sample status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Sample Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction StatusDetailHidden({ hiddens }) {\r\n\ttry {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_hidden status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\"> Hidden Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\thiddens.length === 0 \r\n\t\t\t\t\t\t\t\t? <p> This problem does not have any hidden tests.</p>\r\n\t\t\t\t\t\t\t\t: hiddens.map((hidden, idx) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Collapsible key={'sdhidden-c'+idx} trigger={[`Hidden Test #${idx+1}: ${hidden.verdict} (CPU:${hidden['cpu time']}ms, MEM:${hidden['memory used']}KB)`]} easing='ease'>\r\n\t\t\t\t\t\t\t\t\t\t\t<table className='test-result'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stderr</td><td className='row-value'><pre>{hidden['stderr']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className='row-name'>Stdout</td><td className='row-value'><pre>{hidden['stdout']}</pre></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</Collapsible>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} catch {\r\n\t\treturn (\r\n\t\t\t<div className=\"submission_hidden status_details-container__item\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header as=\"h3\" >Hidden Tests</Card.Header>\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<div className='wait-text'> Please wait a moment... </div>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {\r\n\tStatusDetailSample,\r\n\tStatusDetailHidden,\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nimport { MdLoop } from 'react-icons/md'\r\nimport { ImCross } from 'react-icons/im'\r\nimport { BiLeftArrowAlt } from 'react-icons/bi'\r\nimport { AiFillDelete } from 'react-icons/ai'\r\n\r\n// StatusDetailComponent\r\nimport StatusDetailSource from './StatusDetailComponent/SDSource.js'\r\nimport StatusDetailSummary from './StatusDetailComponent/SDSummary.js';\r\nimport {StatusDetailSample, StatusDetailHidden} from './StatusDetailComponent/SDTestcase.js';\r\n\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport adminStatusAPI from '../../api/adminStatusAPI';\r\nimport './SubmissionDetail.scss';\r\nimport { toast } from 'react-toastify';\r\n\r\n//code mirror editor \r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');\r\n\r\nfunction AdminSubmissionDetail({ match }) {\r\n\tconst id = match.params.id;\r\n\tconst [subDetail, setSubDetail] = useState({\r\n\t\t\"id\": -1,\r\n\t\t\"content\": \"\",\r\n\t\t\"language\": \"\",\r\n\t\t\"output\": {\r\n\t\t\t\"sample_test\": [],\r\n\t\t\t\"hidden_test\": [],\r\n\t\t},\r\n\t});\r\n\r\n    const sendPut = async (type) => {\r\n        try {\r\n            const resp = await adminStatusAPI.putById(id, type)\r\n            setSubDetail(resp.data)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n    const sendDelete = async () => {\r\n        try {\r\n            if (window.confirm(\"Are you sure you want to delete this submission?\")) {\r\n                const resp = await adminStatusAPI.deleteById(id)\r\n                history.push('/admin/submission')\r\n            }\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchStatus_detail = async () => {\r\n\t\t\tconst response = await adminStatusAPI.getById(id);\r\n\t\t\tsetSubDetail(response.data);\r\n\t\t};\r\n\t\tfetchStatus_detail();\r\n\t},[id])\r\n\treturn (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                {\r\n                    subDetail.id===-1\r\n                    ?\r\n                        <Card>\r\n                            <Card.Header as='h2'>\r\n                                Submission Not Found.\r\n                                <div className=\"\">\r\n                                    <Link to={`/admin/submission`} className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                                </div>\r\n                            </Card.Header>\r\n                        </Card>\r\n                    :\r\n                        <Card>\r\n                            <Card.Header as='h2'>\r\n                                Submission #{subDetail.id}\r\n                                <div className=\"\">\r\n                                    <Link to={`/admin/submission`} className=\"card-header-btn\"> <BiLeftArrowAlt/> Back </Link>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <div className=\"admin-status-details-container pages-container\">\r\n                                    <div className=\"admin-status-control-panel\">\r\n                                        <Button className='rejudge-btn' onClick={() => sendPut('rejudge')}\r\n                                            disabled={id===-1||subDetail.verdict==='Rejudging'}><MdLoop/> Rejudge</Button>\r\n                                        <Button className='reject-btn' onClick={() => sendPut('reject')}\r\n                                            disabled={id===-1||subDetail.verdict==='Rejected'}><ImCross/> Reject</Button>\r\n                                        <Button className='delete-btn' onClick={() => sendDelete()}\r\n                                            disabled={id===-1}><AiFillDelete/> Delete</Button>\r\n                                    </div>\r\n                                    <StatusDetailSummary key={'sdsummary'+subDetail.id} submission={subDetail}/>\r\n                                    <StatusDetailSource key={'sdsource'+subDetail.id} content={subDetail.content} language={subDetail.language}/>\r\n                                    <StatusDetailSample key={'sdsample'+subDetail.id} samples={subDetail.output.sample_test}/>\r\n                                    <StatusDetailHidden key={'sdhidden'+subDetail.id} hiddens={subDetail.output.hidden_test}/>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                }\r\n            </div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default AdminSubmissionDetail\r\n","import React from 'react'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport About from './users/Pages/About/About';\r\nimport Home from './users/Pages/Home/Home';\r\nimport Problem from './users/Pages/Problem/Problem';\r\nimport Status from './users/Pages/Status/Status';\r\nimport ProblemList from './admin/Problems/ProblemList/ProblemList';\r\nimport User from './admin/General/User/User';\r\nimport CreateUser from './admin/General/User/CreateUser';\r\nimport UserCreateionLog from './admin/General/User/UserCreationLog';\r\n\r\nimport Announcement from './admin/General/Announcement/Announcement';\r\nimport Dashboard from './admin/Dashboard/Dashboard';\r\nimport CreateProblem from './admin/Problems/CreateProblem/CreateProblem'\r\n//test \r\nimport EditAnnouncement from './admin/General/Announcement/EditAnnouncement';\r\nimport Problem_detail from './users/Pages/Problem/Problem_detail';\r\nimport News from './users/Pages/News/News';\r\n//Private Route\r\nimport { PrivateRoute } from './helpers/PrivateRoute';\r\nimport { PrivateRouteSAdmin } from './helpers/PrivateRouteSAdmin';\r\n\r\n//\r\nimport Status_detail from './users/Pages/Status/Status_detail';\r\nimport Setting from './users/Pages/Setting/Setting';\r\nimport EditUser from './admin/General/User/EditUser'\r\nimport NotFound from './users/Pages/NotFound/NotFound';\r\nimport JudgeServer from './admin/JudgeServer/JudgeServer';\r\nimport JudgeServerDetail from './admin/JudgeServer/JudgeServerDetail';\r\nimport NewJudgeServerForm from './admin/JudgeServer/NewJudgeServerForm';\r\nimport AdminSubmissionList from './admin/Submission/SubmissionList'\r\nimport AdminSubmissionDetail from './admin/Submission/SubmissionDetail'\r\n\r\nimport {toast} from 'react-toastify'\r\n\r\nfunction App() {\r\n  if (localStorage.getItem('force-logout')) {\r\n    toast.error(\"Your Token has expired. Please login again.\", {\r\n        position: toast.POSITION.BOTTOM_CENTER,\r\n        autoClose: 4000,\r\n    });\r\n    localStorage.removeItem('force-logout')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={Home}></Route>\r\n          <Route path='/home' exact component={Home}></Route>\r\n          <Route path='/about' exact component={About}></Route>\r\n          <Route path='/problem' exact component={Problem}></Route>\r\n          <Route path='/problem/:id' exact component={Problem_detail}></Route>\r\n          <Route path='/status/' exact component={Status}></Route>\r\n          <Route path='/status/:id' exact component={Status_detail}></Route>\r\n          <Route path='/news' exact component={News} />\r\n          <Route path='/profile' exact component={Setting} />\r\n\r\n          <PrivateRoute exact component={Dashboard} path='/admin' />\r\n          <PrivateRoute exact component={Dashboard} path='/admin/dashboard' />\r\n          <PrivateRoute exact component={ProblemList} path='/admin/problem' />\r\n\r\n          <PrivateRoute exact component={Announcement} path='/admin/announcement' />\r\n          <PrivateRoute exact component={EditAnnouncement} path='/admin/announcement/new' />\r\n          <PrivateRoute exact component={EditAnnouncement} path='/admin/announcement/:id' />\r\n\r\n          <PrivateRoute exact component={CreateProblem} path='/admin/problem/create' />\r\n          <PrivateRoute exact component={CreateProblem} path='/admin/problem/:id' />\r\n\r\n          <PrivateRoute exact component={AdminSubmissionList} path='/admin/submission' />\r\n          <PrivateRoute exact component={AdminSubmissionDetail} path='/admin/submission/:id' />\r\n          <PrivateRoute exact component={JudgeServer} path='/admin/judgeserver'/>\r\n          <PrivateRoute exact component={NewJudgeServerForm} path='/admin/judgeserver/new'/>\r\n          <PrivateRoute exact component={JudgeServerDetail} path='/admin/judgeserver/:id' />\r\n\r\n          <PrivateRouteSAdmin exact component={User} path='/admin/user' />\r\n          <PrivateRouteSAdmin exact component={UserCreateionLog} path='/admin/user/create/log/:id' />\r\n          <PrivateRouteSAdmin exact component={CreateUser} path='/admin/user/create' />\r\n          <PrivateRouteSAdmin exact component={EditUser} path='/admin/user/:id' />\r\n\r\n          <Route path='/404' component={NotFound}></Route>\r\n          <Route component={NotFound}></Route>\r\n        </Switch>\r\n      </Router>    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { userSlice } from '../users/UserSlice';\r\nimport { adminSlice } from '../admin/AdminSlice';\r\nimport { profileSlice } from '../users/Pages/Profile/profileSlice';\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userSlice.reducer,\r\n        admin: adminSlice.reducer,\r\n        profile: profileSlice.reducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <ToastContainer/>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}