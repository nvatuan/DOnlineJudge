{"version":3,"sources":["api/axiosClient.js","api/loginAPI.js","api/registerAPI.js","api/logoutAPI.js","users/UserSlice.js","users/Pages/Register/Register.js","users/Pages/Login/Login.js","users/Navbar.js","users/Pages/About/About.js","users/Pages/Home/Home.js","users/Button.js","users/Pagination/Pagination.js","api/oj_problemAPI.js","users/Pages/Problem/Problem.js","users/Pages/Status/Status.js","admin/AdminNavbar.js","admin/Logo.jpg","admin/Sidebar.js","api/admin_problemAPI.js","admin/Problems/ProblemList/ProblemList.js","admin/General/User/User.js","admin/editor/Editor.js","admin/General/Annoucement/EditAnnoucement.js","api/annoucementAPI.js","admin/General/Annoucement/Annoucement.js","admin/Dashboard/Dashboard.js","admin/switch/Swit.js","admin/Problems/CreateProblem/CreateProblem.js","api/oj_statusAPI.js","users/Pages/Problem/Problem_detail.js","helpers/PrivateRoute.js","App.js","app/store.js","index.js"],"names":["axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","queryString","stringify","console","log","interceptors","request","use","a","config","response","data","error","loginAPI","login","post","registerAPI","register","logoutAPI","logout","loginUser","createAsyncThunk","thunkAPI","username","password","token","localStorage","setItem","user","admin_type","alert","rejectWithValue","json","registerUser","logoutUser","userSlice","createSlice","name","initialState","email","isSuccess","isError","isFeching","errorMessage","reducers","clearState","state","extraReducers","fulfilled","payload","pending","rejected","actions","userSelector","Register","props","useState","show","setShow","dispatch","useDispatch","history","useHistory","useSelector","useForm","handleSubmit","useEffect","toast","position","POSITION","BOTTOM_CENTER","autoClose","success","push","registerModal","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Control","type","placeholder","Text","className","variant","Footer","size","Signin","configure","showRegis","setShowRegis","LoginModal","Label","onClick","Navbar","click","setClick","setButton","window","addEventListener","innerHeight","to","getItem","Login","removeItem","About","Home","Card","as","title","STYLES","SIZES","COLOR","Button","children","buttonStyle","buttonSize","buttonColor","checkButtonStyle","includes","checkButtonSize","checkButtonColor","Pagination","pagination","onPageChange","paginate","coinPerPage","totalCoins","page","pageNumbers","handlePageChange","newPage","i","Math","ceil","aria-label","map","number","defaultProps","oj_problemAPI","getAll","get","getById","id","url","Problem","problems","setProblems","setPagination","filters","fectchProblems","length","problem","difficulty","colSpan","status","when","time","memory","language","author","Status","Table","striped","bordered","hover","stat","AdminNavbar","Sidebar","src","Logo","alt","iconShape","icon","admin_problemAPI","ProblemList","fetchProblemList","display_id","created","Check","User","users","create_time","last_login","user_type","Editor","editor","useRef","content","setContent","ref","value","readonly","tabIndex","onBlur","newContent","onChange","EditAnnoucement","showModal","setShowModal","handleClose","ListGroup","Item","style","color","autocomplete","annoucementAPI","Annoucement","annoucements","setAnnoucements","openModal","admin_annoucementAPI","fetchAnnoucement","annoucement","creation_time","last_update_time","Dashboard","role","image","width","height","Swit","checked","setChecked","Createproblem","inline","oj_statusAPI","postProblem","body","JSON","Flex_container","styled","div","Problem_main","Problem_imformation","Submit_container","Problem_detail","match","setProblem","fetchProblem_detail","statement","htmlFor","File","Input","rows","cols","PrivateRoute","Component","component","rest","render","pathname","from","location","usersData","App","path","exact","CreateProblem","configureStore","reducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a82bf129.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nconst axiosClient = axios.create({\r\nbaseURL: process.env.REACT_APP_API_URL,\r\nheaders: {\r\n    'content-type': 'application/json',\r\n    // 'Access-Control-Allow-Origin': '*',\r\n},\r\nparamsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\nconsole.log(process.env.REACT_APP_API_URL);\r\naxiosClient.interceptors.request.use(async (config) => {\r\n// Handle token here ...\r\nreturn config;\r\n})\r\naxiosClient.interceptors.response.use((response) => {\r\nif (response && response.data) {\r\nreturn response.data;\r\n}\r\nreturn response;\r\n}, (error) => {\r\n// Handle errors\r\nthrow error;\r\n});\r\nexport default axiosClient;","import axiosClient from'./axiosClient';\r\n\r\nconst loginAPI = {\r\n    login: (data) => {\r\n        const url = 'login/';\r\n        return axiosClient.post(url, data);\r\n    }\r\n}\r\n\r\nexport default loginAPI;","import axiosClient from './axiosClient';\r\n\r\nconst registerAPI = {\r\n    register: (data) => {\r\n        const url = 'register/';\r\n        return axiosClient.post(url,data);\r\n    }\r\n};\r\n\r\nexport default registerAPI;","import axiosClient from './axiosClient';\r\n\r\nconst logoutAPI = {\r\n    logout: () => {\r\n        const url = 'logout/';\r\n        return axiosClient(url);\r\n    }\r\n}\r\nexport default logoutAPI;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport loginAPI from '../api/loginAPI';\r\nimport registerAPI from '../api/registerAPI';\r\nimport logoutAPI from '../api/logoutAPI';\r\nexport const loginUser = createAsyncThunk(\r\n    '/login',\r\n    async ({username, password }, thunkAPI) => {\r\n        console.log('access to redux thunk');\r\n        try {\r\n            const response = await loginAPI.login({username, password});\r\n            console.log(response);\r\n            if(response.token !== null){\r\n                console.log('set Token');\r\n                localStorage.setItem('token', response.token);\r\n                localStorage.setItem('role', response.user.admin_type);\r\n                return response;\r\n            }else{\r\n                alert(\"fail to fetch tokem Login\")\r\n            }\r\n        } catch (error) {\r\n            console.log('Fail to login: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n    '/register',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            console.log(data);\r\n            const response = await registerAPI.register(data);\r\n            console.log('register: ', response);\r\n        } catch (error) {\r\n            console.log('Fail to register: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const logoutUser = createAsyncThunk(\r\n    '/logout',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const response = await logoutAPI.logout();\r\n            console.log('logout');\r\n\r\n        } catch (error) {\r\n            console.log('Fail to logout: ', error);\r\n            thunkAPI.rejectWithValue(error.response.json());\r\n        }\r\n    }\r\n)\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        username: '',\r\n        email: '',\r\n        isSuccess: false,\r\n        isError: false,\r\n        isFeching: false,\r\n        errorMessage: '',\r\n    },\r\n    reducers:{\r\n        clearState: (state) => {\r\n            state.isError = false;\r\n            state.isSuccess = false;\r\n\r\n            return state;\r\n        }\r\n    },\r\n\r\n    extraReducers:{\r\n        //login feching status\r\n        [loginUser.fulfilled]: (state, { payload }) =>{\r\n            state.username = payload.user.username;\r\n            state.isFeching = false;\r\n            state.isSuccess = true;\r\n            return state;\r\n        },\r\n        [loginUser.pending]: (state) =>{\r\n            state.isFeching = true;\r\n        },\r\n        [loginUser.rejected]: (state, {payload}) => {\r\n            state.isError = true;\r\n            state.isFeching = false;\r\n            state.errorMessage = 'Username or password is wrong';\r\n        },\r\n        //register fetching status\r\n        [registerUser.fulfilled]: (state , {payload}) => {\r\n            console.log('payload: ', payload);\r\n            state.isFeching = false;\r\n            state.isSuccess = true;\r\n        },\r\n        [registerUser.rejected]: (state, { payload }) => {\r\n            console.log('payload:', payload);\r\n            state.isFeching = false;\r\n            state.isError = true;\r\n            state.errorMessage = 'Register fail';\r\n        },\r\n        [registerUser.pending]: (state) => {\r\n            state.isFeching = true;\r\n        },\r\n        //logout\r\n        [registerUser.fulfilled]: (state) => {\r\n            state.isFeching = false;\r\n            state.isSuccess = true;\r\n        },\r\n        [logoutUser.rejected]: (state) => {\r\n            state.isFeching = false;\r\n            state.isError = true;\r\n        },\r\n        [logoutUser.pending]: (state) => {\r\n            state.isFeching = true;\r\n        },\r\n\r\n\r\n\r\n    },\r\n})\r\nexport const { clearState } = userSlice.actions;\r\n\r\nexport const userSelector = (state) => state.user;","import React, {useState, useEffect} from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {Form} from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { userSelector, clearState,  registerUser } from '../../UserSlice';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n    //Modal handling\r\n    const [show, setShow] = useState(true);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    //redux \r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isSuccess, isError, errorMessage } = useSelector(userSelector);\r\n\r\n    //form handling\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        dispatch(registerUser(data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearState());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500\r\n            });\r\n            dispatch(clearState());\r\n        }\r\n        if (isSuccess) {\r\n            toast.success('kanseishitayoo onii-chan', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500\r\n            });\r\n            dispatch(clearState());\r\n            history.push('/');\r\n        }\r\n    }, [isError, isSuccess]);\r\n    const registerModal = (<div>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Register</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" {...register(\"username\")} />\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" {...register(\"email\")}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\")}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Control type=\"password\" placeholder=\"Password Again\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n\r\n                </Form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-primary\" >\r\n                    Already registed? Login now!\r\n                    </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </div>);\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-dark\" size=\"lg\" variant=\"light\" onClick={handleShow}>Register</Button>\r\n            {registerModal}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport Register from '../Register/Register';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { userSelector, clearState, loginUser } from '../../UserSlice';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction Signin(props) {\r\n    //toast \r\n    toast.configure();\r\n    //for Modal\r\n    const [show, setShow] = useState(false);\r\n    const [showRegis, setShowRegis] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleOnClickRegister = () => {\r\n        setShowRegis(!showRegis);\r\n        console.log(showRegis);\r\n    };\r\n\r\n    //for redux\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { isSuccess, isError, errorMessage } = useSelector(userSelector);\r\n\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const onSubmit = (data) => {\r\n        dispatch(loginUser(data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(clearState());\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            toast.error(errorMessage, {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500\r\n            });\r\n            dispatch(clearState());\r\n        }\r\n        if (isSuccess){\r\n            toast.success('Ohayo onii-chan', {\r\n                position: toast.POSITION.BOTTOM_CENTER,\r\n                autoClose: 1500 \r\n            });\r\n            dispatch(clearState());\r\n            history.push('/problem/');\r\n        }\r\n    }, [isError, isSuccess]);\r\n\r\n    const LoginModal = (\r\n        <div>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Login</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username </Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" {...register(\"username\")} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" {...register(\"password\")} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Login\r\n                            </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button onClick={handleOnClickRegister}>No account? Register now!</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-dark\" size=\"lg\" variant=\"light\" onClick={handleShow}>Login</Button>\r\n            {showRegis ? <Register /> : LoginModal}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaBars, FaTimes} from 'react-icons/fa';\r\nimport {FcNightPortrait} from 'react-icons/fc'\r\nimport {Button} from 'react-bootstrap';\r\nimport Login from './Pages/Login/Login';\r\nimport './Navbar.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { clearState, userSelector, logoutUser } from './UserSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Register from './Pages/Register/Register';\r\nfunction Navbar() {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const handleClick = () => setClick(!click);\r\n    const showButton = () =>{\r\n        if(window.innerHeight <= 960){\r\n            setButton(false);\r\n        }else{\r\n            setButton(true);\r\n        }\r\n    }\r\n    window.addEventListener('resize', showButton)\r\n    //logout process\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const onLogout = () => {\r\n        dispatch(logoutUser());\r\n        dispatch(clearState());\r\n        localStorage.removeItem('token');\r\n        toast.success('bai baii', {\r\n            position: toast.POSITION.BOTTOM_CENTER,\r\n            autoClose: 1500\r\n        });\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar-container container\">\r\n                    <Link to='/home' className=\"navbar-logo\">\r\n                        <FcNightPortrait className='navbar-icon'></FcNightPortrait>\r\n                        WIBU Code\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                    {click ? <FaTimes/> : <FaBars/>}\r\n                    </div>\r\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/home' className='nav-links'> Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/problem/' className='nav-links'> Problem</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/status' className='nav-links'> Status</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/about' className='nav-links'> About</Link>\r\n                        </li>\r\n                        <li className=\"nav-btn\">\r\n                            {localStorage.getItem('token') === null ? <Login/> :\r\n                            <Button\r\n                            variant=\"outline-dark\" size=\"lg\" variant=\"dark\"\r\n                            onClick={onLogout}>\r\n                                    Logout\r\n                            </Button>}\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport Navbar from '../../Navbar';\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <h1>About us</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport Navbar from '../../Navbar';\r\nimport '../Page.scss';\r\nimport './Home.scss';\r\nimport {Card} from 'react-bootstrap';\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <div className=\"pages-container\">\r\n                <div className=\"home-container\">\r\n                    <div className=\"annoucement-container\">\r\n                        <Card>\r\n                            <Card.Header as=\"h3\">Annoucement</Card.Header>\r\n                            <Card.Body>\r\n                                <blockquote className=\"blockquote mb-0\">\r\n                                    <p>\r\n                                    </p>\r\n                                    <footer className=\"blockquote-footer\">\r\n                                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';  \r\nimport './Button.css';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large', 'btn--mobile', 'btn--wide'];\r\n\r\nconst COLOR = ['primary', 'blue', 'red', 'green'];\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize,\r\n    buttonColor,\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle)\r\n        ? buttonStyle\r\n        : STYLES[0];\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    const checkButtonColor = COLOR.includes(buttonColor) ? buttonColor : null;\r\n\r\n    return (\r\n        <button\r\n            className={`btn ${checkButtonStyle} ${checkButtonSize} ${checkButtonColor}`}\r\n            onClick={onClick}\r\n            type={type}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from '../Button';\r\nimport './Pagination.css'\r\nfunction Pagination(props) {\r\n    const {pagination, onPageChange, paginate, coinPerPage, totalCoins} = props;\r\n    const {page} = pagination\r\n    const pageNumbers = [];\r\n    function handlePageChange(newPage){\r\n        if(onPageChange){\r\n            onPageChange(newPage);\r\n        }\r\n    }\r\n    for(let i = 1 ; i <= Math.ceil(totalCoins/coinPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n        <div className=\"page-container\">\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className=\"page-item\">\r\n                        <Button buttonStyle='btn--primary' buttonSize='btn--medium' buttonColor='blue'\r\n                            onClick={() => handlePageChange(page - 1)}>Prev\r\n                        </Button>\r\n                    </li>\r\n                    {pageNumbers.map(number => (\r\n                        <li key={number} className=\"page-item\">\r\n                            <a onClick={() => paginate(number)}   className=\"page-link\">\r\n                                {number}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                    <li className=\"page-item\">\r\n                        <Button buttonStyle='btn--primary' buttonSize='btn--medium' buttonColor='blue'\r\n                            onClick={() => handlePageChange(page + 1)}>Next\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pagination: PropTypes.object.isRequired,\r\n    onPageChange: PropTypes.func,\r\n    coinPerPage: PropTypes.number,\r\n    totalCoins: PropTypes.number,\r\n}\r\nPagination.defaultProps = {\r\n    onPageChange: null,\r\n}\r\nexport default Pagination\r\n\r\n","import axiosClient from './axiosClient';\r\n\r\nconst oj_problemAPI = {\r\n    getAll: () => {\r\n        const url = 'problem/';\r\n        return axiosClient.get(url);\r\n    },\r\n    getById: (id) => {\r\n        const url = `problem/${id}`;\r\n        return axiosClient.get(url);  \r\n    }\r\n}\r\n\r\nexport default oj_problemAPI","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../../Navbar';\r\nimport Pagination from '../../Pagination/Pagination';\r\nimport { Card } from 'react-bootstrap';\r\nimport './Problem.scss';\r\nimport oj_problemAPI from '../../../api/oj_problemAPI';\r\nimport { Link } from 'react-router-dom';\r\nfunction Problem() {\r\n    const [problems, setProblems] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [pagination, setPagination] = useState({\r\n        page: 1\r\n    })\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [coinsPerPage, setcoinsPerPage] = useState(9);\r\n\r\n\r\n    const [filters, setFilters] = useState({\r\n        page: 1\r\n    })\r\n    useEffect(() => {\r\n        const fectchProblems = async () => {\r\n            const response = await oj_problemAPI.getAll();\r\n            console.log(response);\r\n            setProblems(response.data);\r\n            setPagination(filters);\r\n        }\r\n        fectchProblems();\r\n    }, [filters])\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n    const handlePageChange = (newPage) => {\r\n        console.log('New page: ', newPage);\r\n        setFilters({\r\n            ...filters,\r\n            page: newPage\r\n        })\r\n    }\r\n    //serach feature\r\n    // const filteredProblem = problems.filter(problem => (\r\n    //     problem.name.toLowerCase().includes(search.toLowerCase())\r\n    // ))\r\n    //get current page \r\n    // const indexOfLastProblem = currentPage * problemsPerPage;\r\n    // const indexOfFirstProblem = indexOfLastProblem - problemsPerPage;\r\n    // const currentProblem = problems.slice(indexOfFirstProblem, indexOfLastProblem);\r\n    //page change\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"problems-container\">\r\n                <Card>\r\n                    <Card.Header as=\"h4\">Problem List</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Tille</th>\r\n                                        <th>Level</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        problems.length > 0 ? (\r\n                                            problems.map((problem) => (\r\n                                                <tr key={problem.id}>\r\n                                                    <td>{problem.id}</td>\r\n                                                    <Link to={`/problem/${problem.id}`}>{problem.title}</Link>\r\n                                                    <td>{problem.difficulty}</td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>Nothing</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Problem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'react-bootstrap';\r\nimport Navbar from '../../Navbar';\r\nStatus.propTypes = {\r\n    \r\n};\r\nconst status = [\r\n    {\r\n        when: \"2021-5-1 23:46:33\",\r\n        id: \"1\",\r\n        status: \"Accepted\",\r\n        Problem: \"3\",\r\n        time: \"1s\",\r\n        memory: '13kb',\r\n        language: 'c++',\r\n        author: 'root'\r\n    }\r\n]\r\nfunction Status(props) {\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>when</th>\r\n                        <th>ID</th>\r\n                        <th>Problem</th>\r\n                        <th>Time</th>\r\n                        <th>Memory</th>\r\n                        <th>Language</th>\r\n                        <th>Problem</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        status.map(stat => {\r\n                            return (\r\n                                <tr key={stat.id}>\r\n                                    <th>{stat.when}</th>\r\n                                    <th>{stat.id}</th>\r\n                                    <th>{stat.status}</th>\r\n                                    <th>{stat.Problem}</th>\r\n                                    <th>{stat.time}</th>\r\n                                    <th>{stat.memory}</th>\r\n                                    <th>{stat.language}</th>\r\n                                    <th>{stat.author}</th>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Status;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Button} from 'react-bootstrap';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport './AdminNavbar.scss';\r\nfunction AdminNavbar(props) {\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <div className=\"nav-container\">\r\n                    <div className=\"btn-item\">\r\n                        <Button variant=\"light\"  >\r\n                            <FiLogOut />\r\n                            Log out\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nAdminNavbar.propTypes = {\r\n\r\n}\r\n\r\nexport default AdminNavbar\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo.a4b38323.jpg\";","import { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport './Sidebar.scss';\r\nimport { AiFillAppstore, AiOutlineBars, AiOutlineCode} from 'react-icons/ai';\r\nimport Logo from './Logo.jpg';\r\nfunction Sidebar(props) {\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <ProSidebar className=\"menu-sidebar\">\r\n        <div className=\"logo\">\r\n          <img src={Logo} alt=\"\" />\r\n        </div>\r\n        <Menu iconShape=\"circle\" >\r\n          <MenuItem icon={<AiOutlineCode />}>\r\n              Dashboard\r\n              <Link to='/admin/dashboard'/>\r\n            </MenuItem>\r\n          <SubMenu title=\"General\" icon={<AiFillAppstore/>}>\r\n            <MenuItem >\r\n              User\r\n              <Link to=\"/admin/user\"/>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              Announcement\r\n               <Link to=\"/admin/annoucement\" />\r\n            </MenuItem>\r\n          </SubMenu>\r\n          <SubMenu title=\"Problem\" icon={<AiOutlineBars/>}>\r\n            <MenuItem >\r\n              Problem List\r\n              <Link to=\"/admin/problems\"/>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              Create Problem\r\n              <Link to='/admin/problem/create'/>\r\n            </MenuItem>\r\n          </SubMenu>\r\n        </Menu>\r\n      </ProSidebar>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nSidebar.propTypes = {\r\n\r\n}\r\n\r\nexport default Sidebar\r\n\r\n","import React from 'react'\r\nimport axiosClient from \"./axiosClient\";\r\nconst admin_problemAPI = {\r\n    getAll: () => {\r\n        const url = 'admin/problem/';\r\n        return axiosClient.get(url);\r\n    }\r\n}\r\n\r\nexport default admin_problemAPI\r\n","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport '../../Table.scss';\r\nimport { Card, Button, Form, Navbar} from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDownload, AiOutlineDelete} from 'react-icons/ai';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport admin_problemAPI from '../../../api/admin_problemAPI';\r\nfunction ProblemList(props) {\r\n    const [problems, setProblems] = useState([]);\r\n    useEffect(() =>{\r\n        const fetchProblemList = async () =>{\r\n            try {\r\n                const response = await admin_problemAPI.getAll();\r\n                console.log(response);\r\n                setProblems(response.data);\r\n            } catch (error) {\r\n                console.log(\"Fail to fetch problem list: \", error);\r\n            }\r\n        };\r\n        fetchProblemList();\r\n    },[])\r\n    return (\r\n        <div>\r\n            <AdminNavbar/>\r\n            <Sidebar/>\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h4\">Problem List</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Display ID</th>\r\n                                        <th>Author</th>\r\n                                        <th>Tille</th>\r\n                                        <th>Create time</th>\r\n                                        <th>Visible</th>\r\n                                        <th>Operation</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        problems.length > 0 ? (\r\n                                            problems.map((problem) => (\r\n                                                <tr key={problem.id}>\r\n                                                    <td>{problem.id}</td>\r\n                                                    <td>{problem.display_id}</td>\r\n                                                    <td>{problem.author}</td>\r\n                                                    <td>{problem.title}</td>\r\n                                                    <td>{problem.created}</td>\r\n                                                    <td>\r\n                                                        <Form.Check\r\n                                                            type=\"switch\"\r\n                                                            id=\"custom-switch\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineEdit />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineDownload />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>Nothing</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Create</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProblemList.propTypes = {\r\n\r\n}\r\n\r\nexport default ProblemList\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport '../../Table.scss';\r\nfunction User(props) {\r\n    const users = [\r\n        {\r\n            id: 4,\r\n            username: \"qhuy\",\r\n            create_time: \"2021-5-1 15:25:54\",\r\n            last_login: \"2021-5-2 16:59:27\",\r\n            email: \"naruto@g.com\",\r\n            user_type: \"Regular User\",\r\n        }\r\n    ]\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h4\">Users</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Username</th>\r\n                                        <th>Create time</th>\r\n                                        <th>Last login</th>\r\n                                        <th>Email</th>\r\n                                        <th>User type</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.length > 0 ? (\r\n                                            users.map((user) => (\r\n                                                <tr key={user.id}>\r\n                                                    <td>{user.id}</td>\r\n                                                    <td>{user.username}</td>\r\n                                                    <td>{user.create_time}</td>\r\n                                                    <td>{user.last_login}</td>\r\n                                                    <td>{user.email}</td>\r\n                                                    <td>{user.user_type}</td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineEdit />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={5}>No user</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Create</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n\r\n}\r\n\r\nexport default User\r\n\r\n","import React, { useState, useRef } from 'react';\nimport JoditEditor from \"jodit-react\";\n\nfunction Editor(props) {\n    const editor = useRef(null)\n    const [content, setContent] = useState('')\n\n    const config = {\n        readonly: false\n    }\n\n    return (\n        <JoditEditor\n            ref={editor}\n            value={content}\n            config={config}\n            tabIndex={1}\n            onBlur={newContent => setContent(newContent)}\n            onChange={newContent => { }}\n        />\n    );\n}\n\nexport default Editor\n\n","import React, {useState} from 'react'\r\nimport {Modal, ListGroup, Button} from 'react-bootstrap';\r\nimport Editor from '../../editor/Editor';\r\nimport './EditAnnoucement.scss';\r\nfunction EditAnnoucement(props) {\r\n    const {showModal, setShowModal} = props;\r\n    // const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShow = () => setShowModal(true);\r\n    return (\r\n        <div>\r\n            <Modal show={showModal} onHide={handleClose} size=\"lg\">\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit annoucement</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <i style={{ color: 'red' }}>*</i>\r\n                            <span>Title</span> <br /> <br />\r\n                            <input type=\"text\" autocomplete=\"off\" placeholder=\"\" className=\"title-input\"/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <i style={{ color: 'red' }}>*</i>\r\n                            <span> Content</span> <br /> <br />\r\n                            <Editor/>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save \r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default EditAnnoucement\r\n\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nconst annoucementAPI = {\r\n    getAll: () => {\r\n        const url = 'admin/announcement/';\r\n        return axiosClient.get(url);\r\n    }\r\n}\r\n\r\nexport default annoucementAPI;","import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AdminNavbar from '../../AdminNavbar';\r\nimport Sidebar from '../../Sidebar';\r\nimport { Card, Button , Form} from 'react-bootstrap';\r\nimport { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\r\nimport '../../Table.scss';\r\nimport EditAnnoucement from './EditAnnoucement';\r\nimport admin_annoucementAPI from '../../../api/annoucementAPI';\r\nimport axios from 'axios';\r\nfunction Annoucement(props) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [annoucements, setAnnoucements] = useState([]);\r\n    // const Annoucements = [\r\n    //     {\r\n    //         id: 1,\r\n    //         title: \"Alo\",\r\n    //         create_time: \"2021-5 - 1 15: 35: 50\",\r\n    //         last_update_time: \"2021-5-1 15:35:50\",\r\n    //         author: \"root\",\r\n    //         visible: true,\r\n    //     }\r\n    // ]\r\n\r\n    const openModal = () => {\r\n        setShowModal(!showModal);\r\n    }\r\n    useEffect(() =>{\r\n        const fetchAnnoucement = async () => {\r\n            try {\r\n                const response = await admin_annoucementAPI.getAll();\r\n                console.log(response);\r\n                setAnnoucements(response);\r\n            } catch (error) {\r\n                console.log('Fail to fetch annoucements: ', error);\r\n\r\n            }\r\n        }\r\n        fetchAnnoucement();\r\n    },[])\r\n    return (\r\n        <div>\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"table-view\">\r\n                <Card>\r\n                    <Card.Header as=\"h4\">Annoucements</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            < table >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Title</th>\r\n                                        <th>Create time</th>\r\n                                        <th>Last update time</th>\r\n                                        <th>Visible</th>\r\n                                        <th>Option</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        annoucements.length > 0 ? (\r\n                                            annoucements.map((annoucement) => (\r\n                                                <tr key={annoucement.id}>\r\n                                                    <td>{annoucement.id}</td>\r\n                                                    <td>{annoucement.title}</td>\r\n                                                    <td>{annoucement.creation_time}</td>\r\n                                                    <td>{annoucement.last_update_time}</td>\r\n                                                    <td>{annoucement.author}</td>\r\n                                                    <td>\r\n                                                        <Form.Check\r\n                                                            type=\"switch\"\r\n                                                            id=\"custom-switch\"\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className=\"option-cell\">\r\n                                                            <div className=\"option-button\">\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\" onClick={openModal}>\r\n                                                                        <AiOutlineEdit />\r\n                                                                        <EditAnnoucement showModal={showModal} setShowModal={setShowModal}/>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                <div className=\"option-button\">\r\n                                                                    <Button variant=\"light\">\r\n                                                                        <AiOutlineDelete />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        ) : (\r\n                                            <tr>\r\n                                                <td colSpan={6}>Nothing</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table >\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Create</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nAnnoucement.propTypes = {\r\n\r\n}\r\n\r\nexport default Annoucement\r\n\r\n","import React, { useState } from 'react';\r\nimport AdminNavbar from '../AdminNavbar';\r\nimport Sidebar from '../Sidebar';\r\nimport './Dashboard.scss';\r\nfunction Dashboard(props) {\r\n    const [name, SetName] = useState('admin');\r\n    const [role, Setrole] = useState('Super Admin');\r\n    const [image, setImage] = useState('http://nvatazure.southeastasia.cloudapp.azure.com/public/avatar/default.png')\r\n\r\n    return (\r\n        <div className=\"admin-content\">\r\n            <AdminNavbar />\r\n            <Sidebar />\r\n            <div className=\"dashboard\" >\r\n                <div className=\"admin-img\">\r\n                    <img src={image} alt=\"\" width=\"100%\" height=\"100%\" />\r\n                </div>\r\n                <hr />\r\n                <div className=\"admin-info\">\r\n                    <p className=\"admin-name\"> {name} </p>\r\n                    <p className=\"admin-role\"> {role} </p>\r\n\r\n                </div>\r\n\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","import React, { useState } from \"react\";\nimport Switch from \"react-switch\";\n\nfunction Swit(props) {\n    const [checked, setChecked] = useState(true);\n    return (\n        <div>\n            <Switch onChange={setChecked} checked={checked} />\n        </div>\n    );\n}\n\nexport default Swit;\n","import React from 'react';\nimport { ListGroup, Button, Form } from 'react-bootstrap';\nimport Editor from '../../editor/Editor';\nimport Swit from '../../switch/Swit';\nimport './Createproblem.scss';\nimport AdminNavbar from '../../AdminNavbar';\nimport Sidebar from '../../Sidebar';\nfunction Createproblem(props) {\n    return (\n        <div className=\"Edit-container\">\n            <AdminNavbar />\n            <Sidebar />\n            <div className=\"cp\">\n                <ListGroup>\n                    <ListGroup.Item className=\"cp-header cp-list\" >\n                        <h3>Add problem</h3>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <table>\n                            <tr>\n                                <td className=\"td-dis\">\n                                    <i style={{ color: 'red' }}>*</i>\n                                    <span> Display ID</span> <br /> <br />\n                                    <input type=\"text\" autocomplete=\"off\" placeholder=\"Display ID\" className=\"cp-displayid\" />\n                                </td>\n                                <td className=\"td-til\">\n                                    <i style={{ color: 'red' }}>*</i>\n                                    <span> Title</span> <br /> <br />\n                                    <input type=\"text\" autocomplete=\"off\" placeholder=\"Title\" className=\"cp-title\" />\n                                </td>\n                            </tr>\n                        </table>\n\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <i style={{ color: 'red' }}>*</i>\n                        <span> Description</span> <br /> <br />\n                        <Editor></Editor>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <i style={{ color: 'red' }}>*</i>\n                        <span> Input Description</span> <br /> <br />\n                        <Editor></Editor>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <i style={{ color: 'red' }}>*</i>\n                        <span> Output Description</span> <br /> <br />\n                        <Editor></Editor>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <table>\n                            <tr>\n                                <td className=\"td-time\">\n                                    <i style={{ color: 'red' }}>*</i>\n                                    <span> Time Limit (ms)</span> <br /> <br />\n                                    <input type=\"Number\" autocomplete=\"off\" placeholder=\"Time Limit\" className=\"cp-time\" />\n                                </td>\n                                <td className=\"td-mem\">\n                                    <i style={{ color: 'red' }}>*</i>\n                                    <span> Memory limit (MB)</span> <br /> <br />\n                                    <input type=\"Number\" autocomplete=\"off\" placeholder=\"Memory limit (MB)\" className=\"cp-mem\" />\n                                </td>\n                                <td className=\"td-dif\">\n                                    <i style={{ color: 'red' }}>*</i>\n                                    <span> Difficult</span> <br /> <br />\n                                    <select name=\"Difficulty\" className=\"cp-dif\">\n                                        <option value=\"Low\">Low</option>\n                                        <option value=\"Mid\">Mid</option>\n                                        <option value=\"High\">High</option>\n                                    </select>\n                                </td>\n                            </tr>\n                            <br />\n                            <tr>\n                                <td>\n                                    <span> Visible</span> <br /> <br />\n                                    <Swit></Swit></td>\n                                <td>\n                                    <i style={{ color: 'red' }}>*</i>\n                                    <span> Language</span> <br /> <br />\n                                    <input\n                                        onChange=\"{handleLanguageChange}\"\n                                        type=\"checkbox\"\n                                        name=\"Language\"\n                                        value=\"C\"\n                                    />C\n                                <input\n                                        onChange=\"{handleLanguageChange}\"\n                                        type=\"checkbox\"\n                                        name=\"Language\"\n                                        value=\"C++\"\n                                    />C++\n                                <input\n                                        onChange=\"{handleLanguageChange}\"\n                                        type=\"checkbox\"\n                                        name=\"Language\"\n                                        value=\"Java\"\n                                    />Java\n                                 <input\n                                        onChange=\"{handleLanguageChange}\"\n                                        type=\"checkbox\"\n                                        name=\"Language\"\n                                        value=\"Python\"\n                                    />Python\n                            </td>\n\n                            </tr>\n                        </table>\n\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <i style={{ color: 'red' }}>*</i>\n                        <span> Sample</span> <br /> <br />\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <span> Hint</span> <br /> <br />\n                        <Editor></Editor>\n                    </ListGroup.Item >\n                    <ListGroup.Item className=\"cp-list\">\n                        <table>\n                            <tr>\n                                <td className=\"td-type\">\n                                    <span> Type</span> <br /> <br />\n                                    <input type=\"radio\" name=\"type\" value=\"ACM\" />ACM\n                                <br />\n                                    <input inline type=\"radio\" name=\"type\" value=\"IO\" />IO\n                            </td>\n                                <td className=\"td-test \">\n                                    <span> Test Case</span> <br /> <br />\n                                    <input type=\"file\" />\n\n                                </td>\n                                <td className=\"td-io\">\n                                    <span> IO mode</span> <br /> <br />\n                                    <input type=\"radio\" name=\"io\" value=\"standard\" />Standard IO\n                                <br />\n                                    <input inline type=\"radio\" name=\"io\" value=\"file\" />File IO\n                            </td>\n                            </tr>\n                        </table>\n                    </ListGroup.Item>\n                    <ListGroup.Item className=\"cp-list\">\n                        <Button className=\"cp-btn\" variant=\"save\">Save</Button>{' '}\n                    </ListGroup.Item>\n\n\n                </ListGroup>\n            </div >\n        </div>\n    );\n}\n\nexport default Createproblem;","import axiosClient from './axiosClient';\r\n\r\nconst oj_statusAPI = {\r\n    getAll: () => {\r\n        const url = 'status/';\r\n        return axiosClient.get(url);\r\n    },\r\n    postProblem: (data) =>{\r\n        const url = 'status/';\r\n        return axiosClient.post(url, {\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport default oj_statusAPI;","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {useForm} from 'react-hook-form';\r\nimport './Problem_detail.scss';\r\nimport oj_statusAPI from '../../../api/oj_statusAPI';\r\nimport oj_problemAPI from '../../../api/oj_problemAPI';\r\nconst Flex_container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    flex-flow: row nowrap;    \r\n`;\r\n\r\nconst Problem_main = styled.div`\r\n    flex: auto;\r\n    margin-right: 18px;\r\n`;\r\n\r\nconst Problem_imformation = styled.div`\r\n    flex: auto;\r\n    margin-right: 18px;\r\n`;\r\n\r\nconst Submit_container = styled.div`\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n`;\r\nfunction Problem_detail({ match }) {\r\n    const id = match.params.id;\r\n    const [problem, setProblem] = useState([]);    \r\n    const {register, handleSubmit, error} = useForm();\r\n\r\n    const onSubmit = async (data) => {\r\n        console.log(data);\r\n        try {\r\n            const response = await oj_statusAPI.postProblem();\r\n        } catch (error) {\r\n            console.log(\"Fail to post problem: \", error);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProblem_detail = async () => {\r\n            const response = await oj_problemAPI.getById(id);\r\n            setProblem(response.data);\r\n        };\r\n        fetchProblem_detail();\r\n    }, [])\r\n    return (\r\n        <Flex_container>\r\n            <Problem_main>\r\n                <Problem_imformation>\r\n                    <Card>\r\n                        <Card.Header as=\"h3\">{problem.title}</Card.Header>\r\n                        <Card.Body>\r\n                            {problem.statement}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Problem_imformation>\r\n                <Submit_container>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"mb-3\" className='submit-nav'>\r\n                                    <div className=\"dropdown-languege\">\r\n                                            <label htmlFor=\"languege\">Language:</label>\r\n                                            <select name=\"languege\" id=\"languege\" {...register(\"language\")}>\r\n                                                <option value=\"Python3\">Python3</option>\r\n                                                <option value=\"Python2\">Python2</option>\r\n                                                <option value=\"Java\">Java</option>\r\n                                                <option value=\"C\">C</option>\r\n                                            </select>\r\n                                            <br /><br />\r\n                                    </div>\r\n                                    <div className=\"problem-id\">\r\n                                        <label>Problem id: </label>\r\n                                        <input type=\"text\" placeholder=\"Problem id\"  value={id} {...register(\"problem_id\")} />\r\n                                    </div>\r\n                                    <Form.File id=\"formcheck-api-regular\">\r\n                                        <Form.File.Input />\r\n                                    </Form.File>\r\n\r\n                                </div>\r\n                                <div className=\"submit-textarea\">\r\n                                    <textarea rows=\"4\" cols=\"150\" {...register(\"content\")}>\r\n\r\n                                    </textarea>\r\n                                </div>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Submit_container>\r\n            </Problem_main>\r\n        </Flex_container>\r\n    )\r\n}\r\n\r\n\r\nexport default Problem_detail\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => \r\n            localStorage.getItem('role') === \"Super Admin\" ||   localStorage.getItem('role') === \" Admin\" ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{pathname: '/', state: {from: props.location}}}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n","import React, { useState } from 'react'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport About from './users/Pages/About/About';\r\nimport Home from './users/Pages/Home/Home';\r\nimport Problem from './users/Pages/Problem/Problem';\r\nimport Status from './users/Pages/Status/Status';\r\nimport Login from './users/Pages/Login/Login';\r\nimport Register from './users/Pages/Register/Register'\r\nimport ProblemList from './admin/Problems/ProblemList/ProblemList';\r\nimport User from './admin/General/User/User';\r\nimport Annoucement from './admin/General/Annoucement/Annoucement';\r\nimport Dashboard from './admin/Dashboard/Dashboard';\r\nimport CreateProblem from './admin/Problems/CreateProblem/CreateProblem'\r\n//test \r\nimport EditAnnoucement from './admin/General/Annoucement/EditAnnoucement';\r\nimport Problem_detail from './users/Pages/Problem/Problem_detail';\r\n//Private Route\r\nimport { PrivateRoute } from './helpers/PrivateRoute';\r\nconst usersData = [\r\n  { id: 1, name: 'Tania', username: 'floppydiskette' },\r\n  { id: 2, name: 'Craig', username: 'siliconeidolon' },\r\n  { id: 3, name: 'Ben', username: 'benisphere' },\r\n];\r\n\r\n\r\nfunction App() {\r\n  const [users, setUsers] = useState(usersData);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        //oj\r\n        <Route path='/' exact component={Home}></Route>\r\n        <Route path='/home' exact component={Home}></Route>\r\n        <Route path='/about' exact component={About}></Route>\r\n        <Route path='/problem/' exact component={Problem}></Route>\r\n        <Route path='/problem/:id' exact component={Problem_detail}></Route>\r\n        \r\n        <Route path='/status' exact component={Status}></Route>\r\n        <Route path='/login' exact component={Login}></Route>\r\n        <Route path='/Register' exact component={Register}></Route>\r\n        //admin\r\n        <PrivateRoute exact component={Dashboard} path='/admin/'/>\r\n        <PrivateRoute exact component={Dashboard} path='/admin/dashboard'/>\r\n        <PrivateRoute exact component={User} path='/admin/user'/>\r\n        <PrivateRoute exact component={ProblemList} path='/admin/problems'/>\r\n        <PrivateRoute exact component={Annoucement} path='/admin/annoucement'/>\r\n        <PrivateRoute exact component={CreateProblem} path='/admin/problem/create'/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { userSlice } from '../users/UserSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userSlice.reducer\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = { store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}